if ((typeof(basis$0Array2$1)) == "undefined") {basis$0Array2$1 = {};
};
(function(){basis$0Array2$1.eq_traversal$755 = function(v$757,v$758){switch (v$757) { case 0: {switch (v$758) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$758) { case 1: {return true;
 break; }default: {return false;
} };
 break; } };
};
basis$0Array2$1.fromList$60 = function(v$63){if (v$63 == null) {return [[basis$0Vector$1$3.fromList$230(null),0,0]];
} else {var v$81 = v$63;
var v$82 = v$81[0];
var v$83 = v$81[1];
var row1$70 = basis$0Array$1$3.fromList$230(v$82);
var rowr$71 = basis$0List$1.map$332(function(v$1304){return basis$0Array$1$3.fromList$230(v$1304);
},v$83);
var cols$72 = row1$70.length;
var vec$73;
var t$1307;
var fix$1305 = {};
fix$1305.$all = function(v$764){lab$all: while (true) {if (v$764 == null) {return true;
} else {var v$765 = v$764;
var v$766 = v$765[0];
var v$767 = v$765[1];
if (v$766.length == cols$72) {var t$1306 = v$767;
var v$764 = t$1306;
continue lab$all;
} else {return false;
};
};
};
};
var all$763 = fix$1305.$all;
t$1307 = (all$763(rowr$71));
if (t$1307) {vec$73 = (basis$0Vector$1$3.fromList$230([row1$70,rowr$71]));
} else {throw CompilerInitial.exn$Size$53;
};
return [[vec$73,vec$73.length,cols$72]];
};
};
basis$0Array2$1.array$84 = function(v$92,v$93,v$94){var t$1315;
var t$1308;
var t$774;
if ((0 <= v$92)?(v$92 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$774 = (Array(v$92));
var fix$1309 = {};
fix$1309.$init = function(v$777,v$778){lab$init: while (true) {if (v$778 >= v$92) {return 0;
} else {var t$1312 = v$777;
var t$1311 = v$778;
var t$1310;
if ((0 <= v$93)?(v$93 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$1310 = (SmlPrims.wordTableInit(v$93,v$94));
(t$1312[t$1311] = t$1310,0);
var t$1313 = v$777;
var t$1314 = SmlPrims.chk_ovf_i32(v$778 + 1);
var v$777 = t$1313;
var v$778 = t$1314;
continue lab$init;
};
};
};
var init$775 = fix$1309.$init;
init$775(t$774,0);
t$1308 = t$774;
t$1315 = [t$1308,v$92,v$93];
return [t$1315];
};
var fix$1316 = {};
fix$1316.$tabulate = function(v$98,v$101){lab$tabulate: while (true) {switch (v$98) { case 0: {var v$120 = v$101[0];
var v$121 = v$101[1];
var v$122 = v$101[2];
var t$1327;
var t$1317;
var t$785;
if ((0 <= v$120)?(v$120 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$785 = (Array(v$120));
var fix$1318 = {};
fix$1318.$init = function(v$788,v$789){lab$init: while (true) {if (v$789 >= v$120) {return 0;
} else {var t$1324 = v$788;
var t$1323 = v$789;
var t$1319;
var t$1121;
if ((0 <= v$121)?(v$121 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$1121 = (Array(v$121));
var fix$1320 = {};
fix$1320.$init = function(v$1124,v$1125){lab$init: while (true) {if (v$1125 >= v$121) {return 0;
} else {(v$1124[v$1125] = (v$122([v$789,v$1125])),0);
var t$1321 = v$1124;
var t$1322 = SmlPrims.chk_ovf_i32(v$1125 + 1);
var v$1124 = t$1321;
var v$1125 = t$1322;
continue lab$init;
};
};
};
var init$1122 = fix$1320.$init;
init$1122(t$1121,0);
t$1319 = t$1121;
(t$1324[t$1323] = t$1319,0);
var t$1325 = v$788;
var t$1326 = SmlPrims.chk_ovf_i32(v$789 + 1);
var v$788 = t$1325;
var v$789 = t$1326;
continue lab$init;
};
};
};
var init$786 = fix$1318.$init;
init$786(t$785,0);
t$1317 = t$785;
t$1327 = [t$1317,v$120,v$121];
return [t$1327];
 break; }default: {var v$161 = v$101[0];
var v$162 = v$101[1];
var v$163 = v$101[2];
if ((v$161 > 0)?(v$162 > 0):false) {var f00$127 = v$163([0,0]);
var arr$128;
var t$801;
if ((0 <= v$161)?(v$161 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$801 = (Array(v$161));
var fix$1328 = {};
fix$1328.$init = function(v$804,v$805){lab$init: while (true) {if (v$805 >= v$161) {return 0;
} else {var t$1331 = v$804;
var t$1330 = v$805;
var t$1329;
if ((0 <= v$162)?(v$162 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$1329 = (SmlPrims.wordTableInit(v$162,f00$127));
(t$1331[t$1330] = t$1329,0);
var t$1332 = v$804;
var t$1333 = SmlPrims.chk_ovf_i32(v$805 + 1);
var v$804 = t$1332;
var v$805 = t$1333;
continue lab$init;
};
};
};
var init$802 = fix$1328.$init;
init$802(t$801,0);
arr$128 = t$801;
var v$810 = basis$0VectorSlice$1$3.slice$219(arr$128,1,[1]);
var v$811 = v$810[0];
var v$812 = v$810[1];
var v$813 = v$810[2];
var stop$814 = SmlPrims.chk_ovf_i32(v$812 + v$813);
var fix$1334 = {};
fix$1334.$lr = function(j$816){lab$lr: while (true) {if (j$816 < stop$814) {var v$1261 = v$811[j$816];
var v$1131 = v$163([j$816,0]);
var v$1132 = v$1261.length;
if (0 < v$1132) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
(v$1261[0] = v$1131,0);
var t$1335 = SmlPrims.chk_ovf_i32(j$816 + 1);
var j$816 = t$1335;
continue lab$lr;
} else {return 0;
};
};
};
var lr$815 = fix$1334.$lr;
lr$815(v$812);
var fix$1336 = {};
fix$1336.$loop = function(c$141){lab$loop: while (true) {if (c$141 < v$162) {var stop$824 = arr$128.length;
var fix$1337 = {};
fix$1337.$lr = function(j$826){lab$lr: while (true) {if (j$826 < stop$824) {var v$1263 = arr$128[j$826];
var v$1136 = v$163([j$826,c$141]);
var v$1137 = v$1263.length;
if ((0 <= c$141)?(c$141 < v$1137):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
(v$1263[c$141] = v$1136,0);
var t$1338 = SmlPrims.chk_ovf_i32(j$826 + 1);
var j$826 = t$1338;
continue lab$lr;
} else {return 0;
};
};
};
var lr$825 = fix$1337.$lr;
lr$825(0);
var t$1339 = SmlPrims.chk_ovf_i32(c$141 + 1);
var c$141 = t$1339;
continue lab$loop;
} else {return 0;
};
};
};
var loop$138 = fix$1336.$loop;
loop$138(1);
return [[arr$128,v$161,v$162]];
} else {var t$1340 = 0;
var t$1341 = [v$161,v$162,v$163];
var v$98 = t$1340;
var v$101 = t$1341;
continue lab$tabulate;
};
} };
};
};
basis$0Array2$1.tabulate$95 = fix$1316.$tabulate;
basis$0Array2$1.dimensions$164 = function(v$167){v$167[0][0];
return [v$167[0][1],v$167[0][2]];
};
basis$0Array2$1.nRows$176 = function(v$179){v$179[0][0];
var v$186 = v$179[0][1];
v$179[0][2];
return v$186;
};
basis$0Array2$1.nCols$188 = function(v$191){v$191[0][0];
v$191[0][1];
return v$191[0][2];
};
basis$0Array2$1.sub$200 = function(v$211,v$1288,v$1289){var v$212 = v$211[0][0];
v$211[0][1];
v$211[0][2];
var v$1047;
var v$839 = v$212.length;
if ((0 <= v$1288)?(v$1288 < v$839):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
v$1047 = v$212[v$1288];
var v$835 = v$1047.length;
if ((0 <= v$1289)?(v$1289 < v$835):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$1047[v$1289];
};
basis$0Array2$1.update$217 = function(v$229,v$1290,v$1291,v$1292){var v$230 = v$229[0][0];
v$229[0][1];
v$229[0][2];
var v$1051;
var v$848 = v$230.length;
if ((0 <= v$1290)?(v$1290 < v$848):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
v$1051 = v$230[v$1290];
var v$844 = v$1051.length;
if ((0 <= v$1291)?(v$1291 < v$844):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return (v$1051[v$1291] = v$1292,0);
};
basis$0Array2$1.row$236 = function(v$244,v$1293){var v$245 = v$244[0][0];
var a$849;
var v$860 = v$245.length;
if ((0 <= v$1293)?(v$1293 < v$860):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
a$849 = v$245[v$1293];
var v$850 = a$849.length;
var fix$1342 = {};
fix$1342.$init = function(v$853,v$854,v$855){lab$init: while (true) {if (v$855 >= v$850) {return v$853;
} else {(v$853[v$855] = (v$854(v$855)),0);
var t$1343 = v$853;
var t$1344 = v$854;
var t$1345 = SmlPrims.chk_ovf_i32(v$855 + 1);
var v$853 = t$1343;
var v$854 = t$1344;
var v$855 = t$1345;
continue lab$init;
};
};
};
var init$851 = fix$1342.$init;
return init$851(Array(v$850),function(i$856){return a$849[i$856];
},0);
};
basis$0Array2$1.column$247 = function(v$268,v$1294){var v$269 = v$268[0][0];
var v$270 = v$268[0][1];
var v$271 = v$268[0][2];
if ((v$1294 < 0)?true:(v$1294 >= v$271)) {throw CompilerInitial.exn$Subscript$52;
} else {var t$864;
if ((0 <= v$270)?(v$270 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$864 = (Array(v$270));
var fix$1346 = {};
fix$1346.$init = function(v$867,v$868){lab$init: while (true) {if (v$868 >= v$270) {return 0;
} else {var t$1349 = v$867;
var t$1348 = v$868;
var t$1347;
var v$1143;
var v$1144 = v$269.length;
if ((0 <= v$868)?(v$868 < v$1144):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
v$1143 = v$269[v$868];
var v$1145 = v$1143.length;
if ((0 <= v$1294)?(v$1294 < v$1145):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
t$1347 = v$1143[v$1294];
(t$1349[t$1348] = t$1347,0);
var t$1350 = v$867;
var t$1351 = SmlPrims.chk_ovf_i32(v$868 + 1);
var v$867 = t$1350;
var v$868 = t$1351;
continue lab$init;
};
};
};
var init$865 = fix$1346.$init;
init$865(t$864,0);
return t$864;
};
};
basis$0Array2$1.fold$273 = function(v$276,v$279,v$282,v$285){switch (v$276) { case 0: {var v$308 = v$285[0][0];
var n$880 = v$308.length;
var fix$1352 = {};
fix$1352.$lr = function(v$883,v$884){lab$lr: while (true) {if (v$883 < n$880) {var t$1357 = SmlPrims.chk_ovf_i32(v$883 + 1);
var t$1353;
var v$1264 = v$308[v$883];
var n$1149 = v$1264.length;
var fix$1354 = {};
fix$1354.$lr = function(v$1152,v$1153){lab$lr: while (true) {if (v$1152 < n$1149) {var t$1355 = SmlPrims.chk_ovf_i32(v$1152 + 1);
var t$1356 = v$279([v$1264[v$1152],v$1153]);
var v$1152 = t$1355;
var v$1153 = t$1356;
continue lab$lr;
} else {return v$1153;
};
};
};
var lr$1150 = fix$1354.$lr;
t$1353 = (lr$1150(0,v$884));
var t$1358 = t$1357;
var t$1359 = t$1353;
var v$883 = t$1358;
var v$884 = t$1359;
continue lab$lr;
} else {return v$884;
};
};
};
var lr$881 = fix$1352.$lr;
return lr$881(0,v$282);
 break; }default: {var v$337 = v$285[0][0];
var v$338 = v$285[0][1];
var v$339 = v$285[0][2];
var fix$1360 = {};
fix$1360.$cols = function(j$326,b$329){lab$cols: while (true) {if (j$326 >= v$339) {return b$329;
} else {var t$1370 = SmlPrims.chk_ovf_i32(j$326 + 1);
var t$1369;
var fix$1361 = {};
fix$1361.$rows = function(i$1156,b$1157){lab$rows: while (true) {if (i$1156 >= v$338) {return b$1157;
} else {var t$1366 = SmlPrims.chk_ovf_i32(i$1156 + 1);
var t$1365;
var t$1364 = v$279;
var t$1363;
var t$1362;
var v$1158;
var v$1163 = v$337.length;
if ((0 <= i$1156)?(i$1156 < v$1163):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
v$1158 = v$337[i$1156];
var v$1167 = v$1158.length;
if ((0 <= j$326)?(j$326 < v$1167):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
t$1362 = v$1158[j$326];
t$1363 = [t$1362,b$1157];
t$1365 = (t$1364(t$1363));
var t$1367 = t$1366;
var t$1368 = t$1365;
var i$1156 = t$1367;
var b$1157 = t$1368;
continue lab$rows;
};
};
};
var rows$1155 = fix$1361.$rows;
t$1369 = (rows$1155(0,b$329));
var t$1371 = t$1370;
var t$1372 = t$1369;
var j$326 = t$1371;
var b$329 = t$1372;
continue lab$cols;
};
};
};
var cols$323 = fix$1360.$cols;
return cols$323(0,v$282);
} };
};
basis$0Array2$1.foldi$385 = function(v$388,v$391,v$394,v$397){switch (v$388) { case 0: {var v$440 = v$397[0];
var v$441 = v$440[0][0];
v$440[0][1];
v$440[0][2];
var v$444 = v$397[4];
var v$445 = v$397[1];
var v$446 = v$397[3];
var v$447 = v$397[2];
var v$903 = basis$0VectorSlice$1$3.slice$219(v$441,v$444,v$446);
var v$904 = v$903[0];
var v$905 = v$903[1];
var v$906 = v$903[2];
var stop$907 = SmlPrims.chk_ovf_i32(v$905 + v$906);
var fix$1373 = {};
fix$1373.$lr = function(j$909,res$910){lab$lr: while (true) {if (j$909 < stop$907) {var t$1380 = SmlPrims.chk_ovf_i32(j$909 + 1);
var t$1374;
var v$1267 = v$904[j$909];
var v$1176 = basis$0ArraySlice$1$3.slice$217(v$1267,v$445,v$447);
var v$1177 = v$1176[0];
var v$1178 = v$1176[1];
var v$1179 = v$1176[2];
var stop$1180 = SmlPrims.chk_ovf_i32(v$1178 + v$1179);
var fix$1375 = {};
fix$1375.$lr = function(j$1182,res$1183){lab$lr: while (true) {if (j$1182 < stop$1180) {var t$1377 = SmlPrims.chk_ovf_i32(j$1182 + 1);
var t$1376;
var v$1270 = v$1177[j$1182];
t$1376 = (v$391([j$909,j$1182,v$1270,res$1183]));
var t$1378 = t$1377;
var t$1379 = t$1376;
var j$1182 = t$1378;
var res$1183 = t$1379;
continue lab$lr;
} else {return res$1183;
};
};
};
var lr$1181 = fix$1375.$lr;
t$1374 = (lr$1181(v$1178,res$910));
var t$1381 = t$1380;
var t$1382 = t$1374;
var j$909 = t$1381;
var res$910 = t$1382;
continue lab$lr;
} else {return res$910;
};
};
};
var lr$908 = fix$1373.$lr;
return lr$908(v$905,v$394);
 break; }default: {var v$478 = v$397[0];
var v$479 = v$478[0][0];
var v$480 = v$478[0][1];
var v$481 = v$478[0][2];
var v$482 = v$397[4];
var v$483 = v$397[1];
var v$484 = v$397[3];
var v$485 = v$397[2];
var stoprow$448;
switch (v$484[0]) { case 1: {if ((v$482 < 0)?true:(v$482 > v$480)) {throw CompilerInitial.exn$Subscript$52;
} else {stoprow$448 = v$480;
};
 break; }default: {var v$930 = v$484[1];
if ((v$482 < 0)?true:((v$930 < 0)?true:((SmlPrims.chk_ovf_i32(v$482 + v$930)) > v$480))) {throw CompilerInitial.exn$Subscript$52;
} else {stoprow$448 = (SmlPrims.chk_ovf_i32(v$482 + v$930));
};
} };
var stopcol$449;
switch (v$485[0]) { case 1: {if ((v$483 < 0)?true:(v$483 > v$481)) {throw CompilerInitial.exn$Subscript$52;
} else {stopcol$449 = v$481;
};
 break; }default: {var v$940 = v$485[1];
if ((v$483 < 0)?true:((v$940 < 0)?true:((SmlPrims.chk_ovf_i32(v$483 + v$940)) > v$481))) {throw CompilerInitial.exn$Subscript$52;
} else {stopcol$449 = (SmlPrims.chk_ovf_i32(v$483 + v$940));
};
} };
var fix$1383 = {};
fix$1383.$cols = function(j$467,b$470){lab$cols: while (true) {if (j$467 >= stopcol$449) {return b$470;
} else {var t$1395 = SmlPrims.chk_ovf_i32(j$467 + 1);
var t$1394;
var fix$1384 = {};
fix$1384.$rows = function(i$1190,b$1191){lab$rows: while (true) {if (i$1190 >= stoprow$448) {return b$1191;
} else {var t$1391 = SmlPrims.chk_ovf_i32(i$1190 + 1);
var t$1390;
var t$1389 = v$391;
var t$1388;
var t$1387 = i$1190;
var t$1386 = j$467;
var t$1385;
var v$1192;
var v$1197 = v$479.length;
if ((0 <= i$1190)?(i$1190 < v$1197):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
v$1192 = v$479[i$1190];
var v$1201 = v$1192.length;
if ((0 <= j$467)?(j$467 < v$1201):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
t$1385 = v$1192[j$467];
t$1388 = [t$1387,t$1386,t$1385,b$1191];
t$1390 = (t$1389(t$1388));
var t$1392 = t$1391;
var t$1393 = t$1390;
var i$1190 = t$1392;
var b$1191 = t$1393;
continue lab$rows;
};
};
};
var rows$1189 = fix$1384.$rows;
t$1394 = (rows$1189(v$482,b$470));
var t$1396 = t$1395;
var t$1397 = t$1394;
var j$467 = t$1396;
var b$470 = t$1397;
continue lab$cols;
};
};
};
var cols$464 = fix$1383.$cols;
return cols$464(v$483,v$394);
} };
};
basis$0Array2$1.app$486 = function(v$489,v$492,v$495){switch (v$489) { case 0: {var v$507 = v$495[0][0];
var n$951 = v$507.length;
var fix$1398 = {};
fix$1398.$lr = function(j$953){lab$lr: while (true) {if (j$953 < n$951) {var a$1202 = v$507[j$953];
var n$1203 = a$1202.length;
var fix$1399 = {};
fix$1399.$lr = function(j$1205){lab$lr: while (true) {if (j$1205 < n$1203) {v$492(a$1202[j$1205]);
var t$1400 = SmlPrims.chk_ovf_i32(j$1205 + 1);
var j$1205 = t$1400;
continue lab$lr;
} else {return 0;
};
};
};
var lr$1204 = fix$1399.$lr;
lr$1204(0);
var t$1401 = SmlPrims.chk_ovf_i32(j$953 + 1);
var j$953 = t$1401;
continue lab$lr;
} else {return 0;
};
};
};
var lr$952 = fix$1398.$lr;
return lr$952(0);
 break; }default: {return basis$0Array2$1.fold$273(1,function(v$510){var v$511 = v$510[0];
return v$492(v$511);
},0,v$495);
} };
};
basis$0Array2$1.appi$514 = function(v$517,v$520,v$523){switch (v$517) { case 0: {var v$551 = v$523[0];
var v$552 = v$551[0][0];
var v$553 = v$523[4];
var v$554 = v$523[1];
var v$555 = v$523[3];
var v$556 = v$523[2];
var v$960 = basis$0VectorSlice$1$3.slice$219(v$552,v$553,v$555);
var v$961 = v$960[0];
var v$962 = v$960[1];
var v$963 = v$960[2];
var stop$964 = SmlPrims.chk_ovf_i32(v$962 + v$963);
var fix$1402 = {};
fix$1402.$lr = function(j$966){lab$lr: while (true) {if (j$966 < stop$964) {var v$1273 = v$961[j$966];
var v$1212 = basis$0ArraySlice$1$3.slice$217(v$1273,v$554,v$556);
var v$1213 = v$1212[0];
var v$1214 = v$1212[1];
var v$1215 = v$1212[2];
var stop$1216 = SmlPrims.chk_ovf_i32(v$1214 + v$1215);
var fix$1403 = {};
fix$1403.$lr = function(j$1218){lab$lr: while (true) {if (j$1218 < stop$1216) {var v$1275 = v$1213[j$1218];
v$520([j$966,j$1218,v$1275]);
var t$1404 = SmlPrims.chk_ovf_i32(j$1218 + 1);
var j$1218 = t$1404;
continue lab$lr;
} else {return 0;
};
};
};
var lr$1217 = fix$1403.$lr;
lr$1217(v$1214);
var t$1405 = SmlPrims.chk_ovf_i32(j$966 + 1);
var j$966 = t$1405;
continue lab$lr;
} else {return 0;
};
};
};
var lr$965 = fix$1402.$lr;
return lr$965(v$962);
 break; }default: {return basis$0Array2$1.foldi$385(1,function(v$561){var v$562 = v$561[0];
var v$563 = v$561[1];
var v$564 = v$561[2];
return v$520([v$562,v$563,v$564]);
},0,v$523);
} };
};
basis$0Array2$1.modify$567 = function(v$570,v$573,v$576){switch (v$570) { case 0: {var v$588 = v$576[0][0];
var n$977 = v$588.length;
var fix$1406 = {};
fix$1406.$lr = function(j$979){lab$lr: while (true) {if (j$979 < n$977) {var a$1222 = v$588[j$979];
var n$1223 = a$1222.length;
var fix$1407 = {};
fix$1407.$lr = function(j$1225){lab$lr: while (true) {if (j$1225 < n$1223) {(a$1222[j$1225] = (v$573(a$1222[j$1225])),0);
var t$1408 = SmlPrims.chk_ovf_i32(j$1225 + 1);
var j$1225 = t$1408;
continue lab$lr;
} else {return 0;
};
};
};
var lr$1224 = fix$1407.$lr;
lr$1224(0);
var t$1409 = SmlPrims.chk_ovf_i32(j$979 + 1);
var j$979 = t$1409;
continue lab$lr;
} else {return 0;
};
};
};
var lr$978 = fix$1406.$lr;
return lr$978(0);
 break; }default: {return basis$0Array2$1.foldi$385(1,function(v$593){var v$594 = v$593[0];
var v$595 = v$593[1];
var v$596 = v$593[2];
var v$1279 = v$573(v$596);
var v$1228 = v$576[0][0];
v$576[0][1];
v$576[0][2];
var v$1232;
var v$1233 = v$1228.length;
if ((0 <= v$594)?(v$594 < v$1233):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
v$1232 = v$1228[v$594];
var v$1234 = v$1232.length;
if ((0 <= v$595)?(v$595 < v$1234):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return (v$1232[v$595] = v$1279,0);
},0,[v$576,0,[1],[1],0]);
} };
};
basis$0Array2$1.modifyi$604 = function(v$607,v$610,v$613){switch (v$607) { case 0: {var v$642 = v$613[0];
var v$643 = v$642[0][0];
var v$644 = v$613[4];
var v$645 = v$613[1];
var v$646 = v$613[3];
var v$647 = v$613[2];
var v$986 = basis$0VectorSlice$1$3.slice$219(v$643,v$644,v$646);
var v$987 = v$986[0];
var v$988 = v$986[1];
var v$989 = v$986[2];
var stop$990 = SmlPrims.chk_ovf_i32(v$988 + v$989);
var fix$1410 = {};
fix$1410.$lr = function(j$992){lab$lr: while (true) {if (j$992 < stop$990) {var v$1281 = v$987[j$992];
var v$1241 = basis$0ArraySlice$1$3.slice$217(v$1281,v$645,v$647);
var v$1242 = v$1241[0];
var v$1243 = v$1241[1];
var v$1244 = v$1241[2];
var stop$1245 = SmlPrims.chk_ovf_i32(v$1243 + v$1244);
var fix$1411 = {};
fix$1411.$lr = function(j$1247){lab$lr: while (true) {if (j$1247 < stop$1245) {var t$1414 = v$1242;
var t$1413 = j$1247;
var t$1412;
var v$1283 = v$1242[j$1247];
t$1412 = (v$610([j$992,j$1247,v$1283]));
(t$1414[t$1413] = t$1412,0);
var t$1415 = SmlPrims.chk_ovf_i32(j$1247 + 1);
var j$1247 = t$1415;
continue lab$lr;
} else {return 0;
};
};
};
var lr$1246 = fix$1411.$lr;
lr$1246(v$1243);
var t$1416 = SmlPrims.chk_ovf_i32(j$992 + 1);
var j$992 = t$1416;
continue lab$lr;
} else {return 0;
};
};
};
var lr$991 = fix$1410.$lr;
return lr$991(v$988);
 break; }default: {var v$658 = v$613[0];
return basis$0Array2$1.foldi$385(1,function(v$652){var v$653 = v$652[0];
var v$654 = v$652[1];
var v$655 = v$652[2];
var v$1287 = v$610([v$653,v$654,v$655]);
var v$1253 = v$658[0][0];
v$658[0][1];
v$658[0][2];
var v$1257;
var v$1258 = v$1253.length;
if ((0 <= v$653)?(v$653 < v$1258):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
v$1257 = v$1253[v$653];
var v$1259 = v$1257.length;
if ((0 <= v$654)?(v$654 < v$1259):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return (v$1257[v$654] = v$1287,0);
},0,v$613);
} };
};
basis$0Array2$1.copy$659 = function(v$1295,v$1296,v$1297,v$714){var v$715 = v$714[0];
var v$716 = v$715[0][0];
var v$717 = v$715[0][1];
v$715[0][2];
var v$719 = v$714[4];
var v$720 = v$714[1];
var v$721 = v$714[3];
var v$722 = v$714[2];
var v$724 = v$1295[0][0];
v$1295[0][1];
v$1295[0][2];
var stoprow$677;
switch (v$721[0]) { case 1: {if ((v$719 < 0)?true:(v$719 > v$717)) {throw CompilerInitial.exn$Subscript$52;
} else {stoprow$677 = v$717;
};
 break; }default: {var v$1010 = v$721[1];
if ((v$719 < 0)?true:((v$1010 < 0)?true:((SmlPrims.chk_ovf_i32(v$719 + v$1010)) > v$717))) {throw CompilerInitial.exn$Subscript$52;
} else {stoprow$677 = (SmlPrims.chk_ovf_i32(v$719 + v$1010));
};
} };
var fix$1417 = {};
fix$1417.$bottomUp = function(from_row$681,to_row$684){lab$bottomUp: while (true) {if (from_row$681 < v$719) {return 0;
} else {var v$1298;
var v$691;
var t$1419 = basis$0ArraySlice$1$3.slice$217;
var t$1418;
var v$1014 = v$716.length;
if ((0 <= from_row$681)?(from_row$681 < v$1014):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
t$1418 = v$716[from_row$681];
v$691 = (t$1419(t$1418,v$720,v$722));
var t$1421 = v$1296;
var t$1420;
var v$1018 = v$724.length;
if ((0 <= to_row$684)?(to_row$684 < v$1018):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
t$1420 = v$724[to_row$684];
v$1298 = [t$1421,t$1420,v$691];
basis$0ArraySlice$1$3.copy$332(v$1298[0],v$1298[1],v$1298[2]);
var t$1422 = SmlPrims.chk_ovf_i32(from_row$681 - 1);
var t$1423 = SmlPrims.chk_ovf_i32(to_row$684 - 1);
var from_row$681 = t$1422;
var to_row$684 = t$1423;
continue lab$bottomUp;
};
};
};
var bottomUp$678 = fix$1417.$bottomUp;
var fix$1424 = {};
fix$1424.$topDown = function(from_row$697,to_row$700){lab$topDown: while (true) {if (from_row$697 >= stoprow$677) {return 0;
} else {var v$1299;
var v$707;
var t$1426 = basis$0ArraySlice$1$3.slice$217;
var t$1425;
var v$1022 = v$716.length;
if ((0 <= from_row$697)?(from_row$697 < v$1022):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
t$1425 = v$716[from_row$697];
v$707 = (t$1426(t$1425,v$720,v$722));
var t$1428 = v$1296;
var t$1427;
var v$1026 = v$724.length;
if ((0 <= to_row$700)?(to_row$700 < v$1026):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
t$1427 = v$724[to_row$700];
v$1299 = [t$1428,t$1427,v$707];
basis$0ArraySlice$1$3.copy$332(v$1299[0],v$1299[1],v$1299[2]);
var t$1429 = SmlPrims.chk_ovf_i32(from_row$697 + 1);
var t$1430 = SmlPrims.chk_ovf_i32(to_row$700 + 1);
var from_row$697 = t$1429;
var to_row$700 = t$1430;
continue lab$topDown;
};
};
};
var topDown$694 = fix$1424.$topDown;
if (v$719 <= v$1297) {return bottomUp$678(SmlPrims.chk_ovf_i32(stoprow$677 - 1),SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(stoprow$677 - 1)) + v$1297)) - v$719));
} else {return topDown$694(v$719,v$1297);
};
};
return 0;
})();
