if ((typeof(basis$0Array$1$3)) == "undefined") {basis$0Array$1$3 = {};
};
(function(){basis$0Array$1$3.sub0$106 = function(v$1025,v$1026){return v$1025[v$1026];
};
basis$0Array$1$3.sub_vector0$113 = function(v$1027,v$1028){return v$1027[v$1028];
};
basis$0Array$1$3.update0$120 = function(v$1029,v$1030,v$1031){return (v$1029[v$1030] = v$1031,0);
};
basis$0Array$1$3.update_vector0$129 = function(v$1032,v$1033,v$1034){return (v$1032[v$1033] = v$1034,0);
};
basis$0Array$1$3.table0$138 = function(n$141){return Array(n$141);
};
basis$0Array$1$3.vector0$142 = function(n$145){return Array(n$145);
};
basis$0Array$1$3.length$146 = function(t$149){return t$149.length;
};
basis$0Array$1$3.length_vector$150 = function(t$153){return t$153.length;
};
basis$0Array$1$3.array0$154 = function(v$1035,v$1036){return SmlPrims.wordTableInit(v$1035,v$1036);
};
basis$0Array$1$3.maxLen$161 = 123456789;
basis$0Array$1$3.check_index$162 = function(v$175,v$176){if ((0 <= v$176)?(v$176 < v$175):false) {return 0;
} else {throw CompilerInitial.exn$Subscript$52;
};
};
basis$0Array$1$3.check_size$177 = function(n$180){if ((0 <= n$180)?(n$180 <= 123456789):false) {return 0;
} else {throw CompilerInitial.exn$Size$53;
};
};
basis$0Array$1$3.sub$189 = function(v$196,v$197){var v$909 = v$196.length;
if ((0 <= v$197)?(v$197 < v$909):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$196[v$197];
};
basis$0Array$1$3.update$198 = function(v$206,v$207,v$208){var v$913 = v$206.length;
if ((0 <= v$207)?(v$207 < v$913):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return (v$206[v$207] = v$208,0);
};
basis$0Array$1$3.table$209 = function(n$212){if ((0 <= n$212)?(n$212 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
return Array(n$212);
};
basis$0Array$1$3.vectorv$215 = function(n$218){if ((0 <= n$218)?(n$218 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
return Array(n$218);
};
basis$0Array$1$3.array$221 = function(v$228,v$229){if ((0 <= v$228)?(v$228 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
return SmlPrims.wordTableInit(v$228,v$229);
};
basis$0Array$1$3.fromList$230 = function(xs$233){var fix$1041 = {};
fix$1041.$init = function(v$1037,v$248,v$1038){lab$init: while (true) {if (v$248 == null) {return v$1037;
} else {var v$254 = v$248;
var v$255 = v$254[0];
var v$256 = v$254[1];
(v$1037[v$1038] = v$255,0);
var t$1042 = v$1037;
var t$1043 = v$256;
var t$1044 = SmlPrims.chk_ovf_i32(v$1038 + 1);
var v$1037 = t$1042;
var v$248 = t$1043;
var v$1038 = t$1044;
continue lab$init;
};
};
};
var init$234 = fix$1041.$init;
var n$258;
var fix$1045 = {};
fix$1045.$acc = function(v$826,v$827){lab$acc: while (true) {if (v$826 == null) {return v$827;
} else {var v$828 = v$826;
var v$829 = v$828[1];
var t$1046 = v$829;
var t$1047 = SmlPrims.chk_ovf_i32(v$827 + 1);
var v$826 = t$1046;
var v$827 = t$1047;
continue lab$acc;
};
};
};
var acc$825 = fix$1045.$acc;
n$258 = (acc$825(xs$233,0));
var t$1049 = init$234;
var t$1048;
if ((0 <= n$258)?(n$258 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$1048 = (Array(n$258));
return t$1049(t$1048,xs$233,0);
};
basis$0Array$1$3.tabulate$259 = function(v$283,v$284){var t$280;
if ((0 <= v$283)?(v$283 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$280 = (Array(v$283));
var fix$1050 = {};
fix$1050.$init = function(v$1006,v$1007){lab$init: while (true) {if (v$1007 >= v$283) {return 0;
} else {(v$1006[v$1007] = (v$284(v$1007)),0);
var t$1051 = v$1006;
var t$1052 = SmlPrims.chk_ovf_i32(v$1007 + 1);
var v$1006 = t$1051;
var v$1007 = t$1052;
continue lab$init;
};
};
};
var init$1004 = fix$1050.$init;
init$1004(t$280,0);
return t$280;
};
basis$0Array$1$3.tabulatev$285 = function(v$305,v$306){var fix$1053 = {};
fix$1053.$init = function(v$302,v$303,v$304){lab$init: while (true) {if (v$304 >= v$305) {return v$302;
} else {(v$302[v$304] = (v$303(v$304)),0);
var t$1054 = v$302;
var t$1055 = v$303;
var t$1056 = SmlPrims.chk_ovf_i32(v$304 + 1);
var v$302 = t$1054;
var v$303 = t$1055;
var v$304 = t$1056;
continue lab$init;
};
};
};
var init$290 = fix$1053.$init;
return init$290(Array(v$305),v$306,0);
};
basis$0Array$1$3.vector$307 = function(a$310){var v$929 = a$310.length;
var fix$1057 = {};
fix$1057.$init = function(v$842,v$843,v$844){lab$init: while (true) {if (v$844 >= v$929) {return v$842;
} else {(v$842[v$844] = (v$843(v$844)),0);
var t$1058 = v$842;
var t$1059 = v$843;
var t$1060 = SmlPrims.chk_ovf_i32(v$844 + 1);
var v$842 = t$1058;
var v$843 = t$1059;
var v$844 = t$1060;
continue lab$init;
};
};
};
var init$840 = fix$1057.$init;
return init$840(Array(v$929),function(i$1012){return a$310[i$1012];
},0);
};
basis$0Array$1$3.updatev$314 = function(v$329,v$330,v$331){var v$936 = v$329.length;
if ((0 <= v$330)?(v$330 < v$936):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
var v$1021 = v$329.length;
var t$1016;
if ((0 <= v$1021)?(v$1021 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$1016 = (Array(v$1021));
var fix$1061 = {};
fix$1061.$init = function(v$1019,v$1020){lab$init: while (true) {if (v$1020 >= v$1021) {return 0;
} else {(v$1019[v$1020] = ((v$330 == v$1020)?v$331:v$329[v$1020]),0);
var t$1062 = v$1019;
var t$1063 = SmlPrims.chk_ovf_i32(v$1020 + 1);
var v$1019 = t$1062;
var v$1020 = t$1063;
continue lab$init;
};
};
};
var init$1017 = fix$1061.$init;
init$1017(t$1016,0);
return t$1016;
};
basis$0Array$1$3.copy$332 = function(v$359,v$358,v$357){var n$338 = v$357.length;
if ((v$359 < 0)?true:((SmlPrims.chk_ovf_i32(v$359 + n$338)) > v$358.length)) {throw CompilerInitial.exn$Subscript$52;
} else {var fix$1064 = {};
fix$1064.$hi2lo = function(j$346){lab$hi2lo: while (true) {if (j$346 >= 0) {(v$358[SmlPrims.chk_ovf_i32(v$359 + j$346)] = v$357[j$346],0);
var t$1065 = SmlPrims.chk_ovf_i32(j$346 - 1);
var j$346 = t$1065;
continue lab$hi2lo;
} else {return 0;
};
};
};
var hi2lo$343 = fix$1064.$hi2lo;
return hi2lo$343(SmlPrims.chk_ovf_i32(n$338 - 1));
};
};
basis$0Array$1$3.copyVec$360 = function(v$387,v$386,v$385){var n$366 = v$385.length;
if ((v$387 < 0)?true:((SmlPrims.chk_ovf_i32(v$387 + n$366)) > v$386.length)) {throw CompilerInitial.exn$Subscript$52;
} else {var fix$1066 = {};
fix$1066.$lo2hi = function(j$374){lab$lo2hi: while (true) {if (j$374 < n$366) {(v$386[SmlPrims.chk_ovf_i32(v$387 + j$374)] = v$385[j$374],0);
var t$1067 = SmlPrims.chk_ovf_i32(j$374 + 1);
var j$374 = t$1067;
continue lab$lo2hi;
} else {return 0;
};
};
};
var lo2hi$371 = fix$1066.$lo2hi;
return lo2hi$371(0);
};
};
basis$0Array$1$3.app$388 = function(f$391,a$394){var n$395 = a$394.length;
var fix$1068 = {};
fix$1068.$lr = function(j$399){lab$lr: while (true) {if (j$399 < n$395) {f$391(a$394[j$399]);
var t$1069 = SmlPrims.chk_ovf_i32(j$399 + 1);
var j$399 = t$1069;
continue lab$lr;
} else {return 0;
};
};
};
var lr$396 = fix$1068.$lr;
return lr$396(0);
};
basis$0Array$1$3.foldli$406 = function(f$409,e$412,a$415){var stop$416 = a$415.length;
var fix$1070 = {};
fix$1070.$lr = function(j$420,res$423){lab$lr: while (true) {if (j$420 < stop$416) {var t$1071 = SmlPrims.chk_ovf_i32(j$420 + 1);
var t$1072 = f$409([j$420,a$415[j$420],res$423]);
var j$420 = t$1071;
var res$423 = t$1072;
continue lab$lr;
} else {return res$423;
};
};
};
var lr$417 = fix$1070.$lr;
return lr$417(0,e$412);
};
basis$0Array$1$3.foldri$428 = function(f$431,e$434,a$437){var fix$1073 = {};
fix$1073.$rl = function(j$441,res$444){lab$rl: while (true) {if (j$441 >= 0) {var t$1074 = SmlPrims.chk_ovf_i32(j$441 - 1);
var t$1075 = f$431([j$441,a$437[j$441],res$444]);
var j$441 = t$1074;
var res$444 = t$1075;
continue lab$rl;
} else {return res$444;
};
};
};
var rl$438 = fix$1073.$rl;
return rl$438(SmlPrims.chk_ovf_i32(a$437.length - 1),e$434);
};
basis$0Array$1$3.appi$449 = function(f$452,a$455){var stop$456 = a$455.length;
var fix$1076 = {};
fix$1076.$lr = function(j$460){lab$lr: while (true) {if (j$460 < stop$456) {f$452([j$460,a$455[j$460]]);
var t$1077 = SmlPrims.chk_ovf_i32(j$460 + 1);
var j$460 = t$1077;
continue lab$lr;
} else {return 0;
};
};
};
var lr$457 = fix$1076.$lr;
return lr$457(0);
};
basis$0Array$1$3.foldl$488 = function(f$491,e$494,a$497){var n$498 = a$497.length;
var fix$1078 = {};
fix$1078.$lr = function(v$508,v$509){lab$lr: while (true) {if (v$508 < n$498) {var t$1079 = SmlPrims.chk_ovf_i32(v$508 + 1);
var t$1080 = f$491([a$497[v$508],v$509]);
var v$508 = t$1079;
var v$509 = t$1080;
continue lab$lr;
} else {return v$509;
};
};
};
var lr$499 = fix$1078.$lr;
return lr$499(0,e$494);
};
basis$0Array$1$3.foldr$510 = function(f$513,e$516,a$519){var n$520 = a$519.length;
var fix$1081 = {};
fix$1081.$rl = function(v$530,v$531){lab$rl: while (true) {if (v$530 >= 0) {var t$1082 = SmlPrims.chk_ovf_i32(v$530 - 1);
var t$1083 = f$513([a$519[v$530],v$531]);
var v$530 = t$1082;
var v$531 = t$1083;
continue lab$rl;
} else {return v$531;
};
};
};
var rl$521 = fix$1081.$rl;
return rl$521(SmlPrims.chk_ovf_i32(n$520 - 1),e$516);
};
basis$0Array$1$3.modifyi$532 = function(f$535,a$538){var stop$539 = a$538.length;
var fix$1084 = {};
fix$1084.$lr = function(j$543){lab$lr: while (true) {if (j$543 < stop$539) {(a$538[j$543] = (f$535([j$543,a$538[j$543]])),0);
var t$1085 = SmlPrims.chk_ovf_i32(j$543 + 1);
var j$543 = t$1085;
continue lab$lr;
} else {return 0;
};
};
};
var lr$540 = fix$1084.$lr;
return lr$540(0);
};
basis$0Array$1$3.modify$550 = function(f$553,a$556){var n$557 = a$556.length;
var fix$1086 = {};
fix$1086.$lr = function(j$561){lab$lr: while (true) {if (j$561 < n$557) {(a$556[j$561] = (f$553(a$556[j$561])),0);
var t$1087 = SmlPrims.chk_ovf_i32(j$561 + 1);
var j$561 = t$1087;
continue lab$lr;
} else {return 0;
};
};
};
var lr$558 = fix$1086.$lr;
return lr$558(0);
};
basis$0Array$1$3.map$568 = function(f$571,a$574){var n$575 = a$574.length;
var b$576;
if ((0 <= n$575)?(n$575 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
b$576 = (Array(n$575));
var fix$1088 = {};
fix$1088.$lr = function(j$580){lab$lr: while (true) {if (j$580 < n$575) {(b$576[j$580] = (f$571(a$574[j$580])),0);
var t$1089 = SmlPrims.chk_ovf_i32(j$580 + 1);
var j$580 = t$1089;
continue lab$lr;
} else {return b$576;
};
};
};
var lr$577 = fix$1088.$lr;
return lr$577(0);
};
basis$0Array$1$3.mapi$587 = function(f$590,a$593){var stop$594 = a$593.length;
var newvec$595 = Array(stop$594);
var fix$1090 = {};
fix$1090.$lr = function(j$599){lab$lr: while (true) {if (j$599 < stop$594) {(newvec$595[j$599] = (f$590([j$599,a$593[j$599]])),0);
var t$1091 = SmlPrims.chk_ovf_i32(j$599 + 1);
var j$599 = t$1091;
continue lab$lr;
} else {return 0;
};
};
};
var lr$596 = fix$1090.$lr;
lr$596(0);
return newvec$595;
};
basis$0Array$1$3.concat$608 = function(vecs$611){var fix$1092 = {};
fix$1092.$total_length = function(v$624,v$1039){lab$total_length: while (true) {if (v$624 == null) {return v$1039;
} else {var v$626 = v$624;
var v$627 = v$626[0];
var v$628 = v$626[1];
var t$1093 = v$628;
var t$1094 = SmlPrims.chk_ovf_i32(v$627.length + v$1039);
var v$624 = t$1093;
var v$1039 = t$1094;
continue lab$total_length;
};
};
};
var total_length$612 = fix$1092.$total_length;
var n$630 = total_length$612(vecs$611,0);
var v$631;
if ((0 <= n$630)?(n$630 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
v$631 = (Array(n$630));
var fix$1095 = {};
fix$1095.$copyall = function(v$1040,v$644){lab$copyall: while (true) {if (v$644 == null) {return v$631;
} else {var v$660 = v$644;
var v$661 = v$660[0];
var v$662 = v$660[1];
var x_n$646 = v$661.length;
var fix$1096 = {};
fix$1096.$copy = function(j$650){lab$copy: while (true) {if (j$650 < x_n$646) {(v$631[SmlPrims.chk_ovf_i32(v$1040 + j$650)] = v$661[j$650],0);
var t$1097 = SmlPrims.chk_ovf_i32(j$650 + 1);
var j$650 = t$1097;
continue lab$copy;
} else {return 0;
};
};
};
var copy$647 = fix$1096.$copy;
copy$647(0);
var t$1098 = SmlPrims.chk_ovf_i32(v$1040 + x_n$646);
var t$1099 = v$662;
var v$1040 = t$1098;
var v$644 = t$1099;
continue lab$copyall;
};
};
};
var copyall$632 = fix$1095.$copyall;
return copyall$632(0,vecs$611);
};
basis$0Array$1$3.findi$663 = function(p$666,a$669){var stop$670 = a$669.length;
var fix$1100 = {};
fix$1100.$lr = function(j$674){lab$lr: while (true) {if (j$674 < stop$670) {if (p$666([j$674,a$669[j$674]])) {return [0,[j$674,a$669[j$674]]];
} else {var t$1101 = SmlPrims.chk_ovf_i32(j$674 + 1);
var j$674 = t$1101;
continue lab$lr;
};
} else {return [1];
};
};
};
var lr$671 = fix$1100.$lr;
return lr$671(0);
};
basis$0Array$1$3.find$683 = function(p$686,a$689){var stop$690 = a$689.length;
var fix$1102 = {};
fix$1102.$lr = function(j$694){lab$lr: while (true) {if (j$694 < stop$690) {if (p$686(a$689[j$694])) {return [0,a$689[j$694]];
} else {var t$1103 = SmlPrims.chk_ovf_i32(j$694 + 1);
var j$694 = t$1103;
continue lab$lr;
};
} else {return [1];
};
};
};
var lr$691 = fix$1102.$lr;
return lr$691(0);
};
basis$0Array$1$3.exists$703 = function(p$706,a$709){var stop$710 = a$709.length;
var fix$1104 = {};
fix$1104.$lr = function(j$714){lab$lr: while (true) {if (j$714 < stop$710) {if (p$706(a$709[j$714])) {return true;
} else {var t$1105 = SmlPrims.chk_ovf_i32(j$714 + 1);
var j$714 = t$1105;
continue lab$lr;
};
} else {return false;
};
};
};
var lr$711 = fix$1104.$lr;
return lr$711(0);
};
basis$0Array$1$3.all$723 = function(p$726,a$729){var stop$730 = a$729.length;
var fix$1106 = {};
fix$1106.$lr = function(j$734){lab$lr: while (true) {if (j$734 >= stop$730) {return true;
} else {if (p$726(a$729[j$734])) {var t$1107 = SmlPrims.chk_ovf_i32(j$734 + 1);
var j$734 = t$1107;
continue lab$lr;
} else {return false;
};
};
};
};
var lr$731 = fix$1106.$lr;
return lr$731(0);
};
basis$0Array$1$3.collate$743 = function(cmp$746,v$750){var v$779 = v$750[0];
var v$780 = v$750[1];
var n1$751 = v$779.length;
var n2$752 = v$780.length;
var stop$753 = (n1$751 < n2$752)?n1$751:n2$752;
var fix$1108 = {};
fix$1108.$h = function(j$761){lab$h: while (true) {if (j$761 == stop$753) {return (n1$751 < n2$752)?0:((n1$751 > n2$752)?1:2);
} else {var v$778 = cmp$746([v$779[j$761],v$780[j$761]]);
switch (v$778) { case 2: {var t$1109 = SmlPrims.chk_ovf_i32(j$761 + 1);
var j$761 = t$1109;
continue lab$h;
 break; }default: {return v$778;
} };
};
};
};
var h$758 = fix$1108.$h;
return h$758(0);
};
return 0;
})();
