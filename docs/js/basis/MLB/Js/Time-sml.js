if ((typeof(basis$0Time$1)) == "undefined") {basis$0Time$1 = {};
};
(function(){basis$0Time$1.en$Time$59 = new String("Time");
basis$0Time$1.exn$Time$59 = [basis$0Time$1.en$Time$59];
basis$0Time$1.zeroTime$60 = [-2147483648,0];
basis$0Time$1.now$61 = function(v$63){return SmlPrims.getrealtime();
};
basis$0Time$1.fromSeconds$68 = function(s$71){if (basis$0IntInf$1.s$j$2222(s$71,[0,[null,false]])) {throw basis$0Time$1.exn$Time$59;
} else {return [SmlPrims.chk_ovf_i32((basis$0IntInf$1.toInt$1825(s$71)) + (-2147483648)),0];
};
};
basis$0Time$1.fromMilliseconds$76 = function(ms$79){if (basis$0IntInf$1.s$j$2222(ms$79,[0,[null,false]])) {throw basis$0Time$1.exn$Time$59;
} else {return [SmlPrims.chk_ovf_i32((SmlPrims.div_i32(basis$0IntInf$1.toInt$1825(ms$79),1000,CompilerInitial.exn$Div$47)) + (-2147483648)),SmlPrims.chk_ovf_i32((SmlPrims.mod_i32(basis$0IntInf$1.toInt$1825(ms$79),1000,CompilerInitial.exn$Div$47)) * 1000)];
};
};
basis$0Time$1.fromMicroseconds$84 = function(us$87){if (basis$0IntInf$1.s$j$2222(us$87,[0,[null,false]])) {throw basis$0Time$1.exn$Time$59;
} else {return [SmlPrims.chk_ovf_i32((SmlPrims.div_i32(basis$0IntInf$1.toInt$1825(us$87),1000000,CompilerInitial.exn$Div$47)) + (-2147483648)),SmlPrims.mod_i32(basis$0IntInf$1.toInt$1825(us$87),1000000,CompilerInitial.exn$Div$47)];
};
};
basis$0Time$1.toSeconds$92 = function(v$97,v$598){return basis$0IntInf$1.s$g$1987(basis$0IntInf$1.fromInt$1829(v$97),basis$0IntInf$1.fromInt$1829(-2147483648));
};
basis$0Time$1.toMilliseconds$99 = function(v$104,v$105){return basis$0IntInf$1.s$f$1943(basis$0IntInf$1.s$t$1900(basis$0IntInf$1.s$g$1987(basis$0IntInf$1.fromInt$1829(v$104),basis$0IntInf$1.fromInt$1829(-2147483648)),[0,[[1000,null],false]]),basis$0IntInf$1.div$2161([basis$0IntInf$1.fromInt$1829(v$105),[0,[[1000,null],false]]]));
};
basis$0Time$1.toMicroseconds$106 = function(v$111,v$112){return basis$0IntInf$1.s$f$1943(basis$0IntInf$1.s$t$1900(basis$0IntInf$1.s$g$1987(basis$0IntInf$1.fromInt$1829(v$111),basis$0IntInf$1.fromInt$1829(-2147483648)),[0,[[1000000,null],false]]),basis$0IntInf$1.fromInt$1829(v$112));
};
basis$0Time$1.fromReal$113 = function(r$116){try {var rf$117;
if (r$116 < 0.0) {throw basis$0Time$1.exn$Time$59;
} else {rf$117 = (SmlPrims.chk_ovf_i32(Math.floor(r$116 + (-2147483648))));
};
return [rf$117,SmlPrims.chk_ovf_i32(Math.floor(1000000.0 * ((r$116 + (-2147483648)) - rf$117)))];
} catch(v$617) {return (function(Overflow$124){var t$618 = Overflow$124;
if (t$618[0] == CompilerInitial.en$Overflow$50) {throw basis$0Time$1.exn$Time$59;
} else {throw Overflow$124;
};
})(v$617);
};
};
basis$0Time$1.toReal$125 = function(v$599,v$600){return (v$599 - (-2147483648)) + (v$600 / 1000000.0);
};
basis$0Time$1.fmt$139 = function(p$142,t$145){return (basis$0Real$1.fmt$171([2,[0,(p$142 > 0)?p$142:0]]))((t$145[0] - (-2147483648)) + (t$145[1] / 1000000.0));
};
basis$0Time$1.toString$150 = function(v$601,v$602){return (basis$0Real$1.fmt$171([2,[0,3]]))((v$601 - (-2147483648)) + (v$602 / 1000000.0));
};
basis$0Time$1.scan$154 = function(getc$157,source$160){var fix$619 = {};
fix$619.$pow10 = function(v$175){switch (v$175) { case 0: {return 1;
 break; }default: {return SmlPrims.chk_ovf_i32(10 * (fix$619.$pow10(SmlPrims.chk_ovf_i32(v$175 - 1))));
} };
};
var pow10$172 = fix$619.$pow10;
var fix$620 = {};
fix$620.$skipdigs = function(src$195){lab$skipdigs: while (true) {var v$201 = getc$157(src$195);
switch (v$201[0]) { case 1: {return src$195;
 break; }default: {var v$206 = v$201[1];
var v$207 = v$206[0];
var v$208 = v$206[1];
if ((48 <= v$207)?(v$207 <= 57):false) {var t$621 = v$208;
var src$195 = t$621;
continue lab$skipdigs;
} else {return src$195;
};
} };
};
};
var skipdigs$192 = fix$620.$skipdigs;
var fix$622 = {};
fix$622.$intg = function(intgv$242,src$245){lab$intg: while (true) {var v$254 = getc$157(src$245);
switch (v$254[0]) { case 1: {var t$624;
var t$623;
var usecs$505 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$172(SmlPrims.chk_ovf_i32(7 - 6))) * 0)) + 5),10,CompilerInitial.exn$Div$47);
t$623 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((intgv$242 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$505,1000000,CompilerInitial.exn$Div$47))),SmlPrims.mod_i32(usecs$505,1000000,CompilerInitial.exn$Div$47)];
t$624 = [t$623,src$245];
return [0,t$624];
 break; }default: {var v$255 = v$254[1];
var v$256 = v$255[0];
switch (v$256) { case 46: {var v$257 = v$255[1];
var fix$625 = {};
fix$625.$frac = function(decs$556,fracv$557,src$558){lab$frac: while (true) {if (decs$556 >= 7) {var t$627;
var t$626;
var usecs$562 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$172(SmlPrims.chk_ovf_i32(7 - decs$556))) * fracv$557)) + 5),10,CompilerInitial.exn$Div$47);
t$626 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((intgv$242 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$562,1000000,CompilerInitial.exn$Div$47))),SmlPrims.mod_i32(usecs$562,1000000,CompilerInitial.exn$Div$47)];
t$627 = [t$626,skipdigs$192(src$558)];
return [0,t$627];
} else {var v$563 = getc$157(src$558);
switch (v$563[0]) { case 1: {var t$629;
var t$628;
var usecs$567 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$172(SmlPrims.chk_ovf_i32(7 - decs$556))) * fracv$557)) + 5),10,CompilerInitial.exn$Div$47);
t$628 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((intgv$242 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$567,1000000,CompilerInitial.exn$Div$47))),SmlPrims.mod_i32(usecs$567,1000000,CompilerInitial.exn$Div$47)];
t$629 = [t$628,src$558];
return [0,t$629];
 break; }default: {var v$568 = v$563[1];
var v$569 = v$568[0];
var v$570 = v$568[1];
if ((48 <= v$569)?(v$569 <= 57):false) {var t$632 = SmlPrims.chk_ovf_i32(decs$556 + 1);
var t$633 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(10 * fracv$557)) + (SmlPrims.chk_ovf_i32(v$569 - 48)));
var t$634 = v$570;
var decs$556 = t$632;
var fracv$557 = t$633;
var src$558 = t$634;
continue lab$frac;
} else {var t$631;
var t$630;
var usecs$575 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$172(SmlPrims.chk_ovf_i32(7 - decs$556))) * fracv$557)) + 5),10,CompilerInitial.exn$Div$47);
t$630 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((intgv$242 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$575,1000000,CompilerInitial.exn$Div$47))),SmlPrims.mod_i32(usecs$575,1000000,CompilerInitial.exn$Div$47)];
t$631 = [t$630,src$558];
return [0,t$631];
};
} };
};
};
};
var frac$555 = fix$625.$frac;
return frac$555(0,0,v$257);
 break; }default: {var v$262 = v$255[1];
if ((48 <= v$256)?(v$256 <= 57):false) {var t$637 = (10.0 * intgv$242) + (SmlPrims.chk_ovf_i32(v$256 - 48));
var t$638 = v$262;
var intgv$242 = t$637;
var src$245 = t$638;
continue lab$intg;
} else {var t$636;
var t$635;
var usecs$512 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$172(SmlPrims.chk_ovf_i32(7 - 6))) * 0)) + 5),10,CompilerInitial.exn$Div$47);
t$635 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((intgv$242 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$512,1000000,CompilerInitial.exn$Div$47))),SmlPrims.mod_i32(usecs$512,1000000,CompilerInitial.exn$Div$47)];
t$636 = [t$635,src$245];
return [0,t$636];
};
} };
} };
};
};
var intg$239 = fix$622.$intg;
var v$271 = getc$157((basis$0StringCvt$1.splitl$206(function(c$519){return (c$519 == 32)?true:((9 <= c$519)?(c$519 <= 13):false);
},getc$157,source$160))[1]);
switch (v$271[0]) { case 1: {return [1];
 break; }default: {var v$272 = v$271[1];
var v$273 = v$272[0];
switch (v$273) { case 46: {var v$287 = v$272[1];
var v$279 = getc$157(v$287);
switch (v$279[0]) { case 1: {return [1];
 break; }default: {var v$284 = v$279[1];
var v$285 = v$284[0];
var v$286 = v$284[1];
if ((48 <= v$285)?(v$285 <= 57):false) {var fix$639 = {};
fix$639.$frac = function(decs$578,fracv$579,src$580){lab$frac: while (true) {if (decs$578 >= 7) {var t$641;
var t$640;
var usecs$584 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$172(SmlPrims.chk_ovf_i32(7 - decs$578))) * fracv$579)) + 5),10,CompilerInitial.exn$Div$47);
t$640 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((0.0 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$584,1000000,CompilerInitial.exn$Div$47))),SmlPrims.mod_i32(usecs$584,1000000,CompilerInitial.exn$Div$47)];
t$641 = [t$640,skipdigs$192(src$580)];
return [0,t$641];
} else {var v$585 = getc$157(src$580);
switch (v$585[0]) { case 1: {var t$643;
var t$642;
var usecs$589 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$172(SmlPrims.chk_ovf_i32(7 - decs$578))) * fracv$579)) + 5),10,CompilerInitial.exn$Div$47);
t$642 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((0.0 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$589,1000000,CompilerInitial.exn$Div$47))),SmlPrims.mod_i32(usecs$589,1000000,CompilerInitial.exn$Div$47)];
t$643 = [t$642,src$580];
return [0,t$643];
 break; }default: {var v$590 = v$585[1];
var v$591 = v$590[0];
var v$592 = v$590[1];
if ((48 <= v$591)?(v$591 <= 57):false) {var t$646 = SmlPrims.chk_ovf_i32(decs$578 + 1);
var t$647 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(10 * fracv$579)) + (SmlPrims.chk_ovf_i32(v$591 - 48)));
var t$648 = v$592;
var decs$578 = t$646;
var fracv$579 = t$647;
var src$580 = t$648;
continue lab$frac;
} else {var t$645;
var t$644;
var usecs$597 = SmlPrims.div_i32(SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32((pow10$172(SmlPrims.chk_ovf_i32(7 - decs$578))) * fracv$579)) + 5),10,CompilerInitial.exn$Div$47);
t$644 = [SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(Math.floor((0.0 + (-2147483648)) + 0.5))) + (SmlPrims.div_i32(usecs$597,1000000,CompilerInitial.exn$Div$47))),SmlPrims.mod_i32(usecs$597,1000000,CompilerInitial.exn$Div$47)];
t$645 = [t$644,src$580];
return [0,t$645];
};
} };
};
};
};
var frac$577 = fix$639.$frac;
var v$613 = SmlPrims.chk_ovf_i32(v$285 - 48);
return frac$577(1,v$613,v$286);
} else {return [1];
};
} };
 break; }default: {var v$292 = v$272[1];
if ((48 <= v$273)?(v$273 <= 57):false) {return intg$239(SmlPrims.chk_ovf_i32(v$273 - 48),v$292);
} else {return [1];
};
} };
} };
};
basis$0Time$1.fromString$293 = function(s$296){return basis$0StringCvt$1.scanString$163(function(v$615){return function(v$616){return basis$0Time$1.scan$154(v$615,v$616);
};
},s$296);
};
basis$0Time$1.s$f$297 = function(v$305,v$603){var v$306 = v$305[0];
var v$307 = v$305[1];
var v$309 = v$603[0];
var v$310 = v$603[1];
var usecs$304 = SmlPrims.chk_ovf_i32(v$307 + v$310);
return [SmlPrims.chk_ovf_i32(SmlPrims.trunc(((v$306 - (-2147483648)) + v$309) + (SmlPrims.div_i32(usecs$304,1000000,CompilerInitial.exn$Div$47)))),SmlPrims.mod_i32(usecs$304,1000000,CompilerInitial.exn$Div$47)];
};
basis$0Time$1.s$g$311 = function(v$327,v$604){var v$328 = v$327[0];
var v$329 = v$327[1];
var v$331 = v$604[0];
var v$332 = v$604[1];
try {var usecs$318 = SmlPrims.chk_ovf_i32(v$329 - v$332);
var secs$319 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$328 - v$331)) + (SmlPrims.div_i32(usecs$318,1000000,CompilerInitial.exn$Div$47)));
if (secs$319 < 0) {throw basis$0Time$1.exn$Time$59;
} else {return [SmlPrims.chk_ovf_i32(secs$319 + (-2147483648)),SmlPrims.mod_i32(usecs$318,1000000,CompilerInitial.exn$Div$47)];
};
} catch(v$649) {return (function(Overflow$326){var t$650 = Overflow$326;
if (t$650[0] == CompilerInitial.en$Overflow$50) {throw basis$0Time$1.exn$Time$59;
} else {throw Overflow$326;
};
})(v$649);
};
};
basis$0Time$1.s$j$333 = function(v$348,v$605){var v$349 = v$348[0];
var v$350 = v$348[1];
var v$352 = v$605[0];
var v$353 = v$605[1];
return (v$349 < v$352)?true:((v$349 == v$352)?(v$350 < v$353):false);
};
basis$0Time$1.s$jk$354 = function(v$369,v$606){var v$370 = v$369[0];
var v$371 = v$369[1];
var v$373 = v$606[0];
var v$374 = v$606[1];
return (v$370 < v$373)?true:((v$370 == v$373)?(v$371 <= v$374):false);
};
basis$0Time$1.s$l$375 = function(v$390,v$607){var v$391 = v$390[0];
var v$392 = v$390[1];
var v$394 = v$607[0];
var v$395 = v$607[1];
return (v$391 > v$394)?true:((v$391 == v$394)?(v$392 > v$395):false);
};
basis$0Time$1.s$lk$396 = function(v$411,v$608){var v$412 = v$411[0];
var v$413 = v$411[1];
var v$415 = v$608[0];
var v$416 = v$608[1];
return (v$412 > v$415)?true:((v$412 == v$415)?(v$413 >= v$416):false);
};
basis$0Time$1.compare$417 = function(v$430,v$431){var t$652;
var v$532 = v$430[0];
var v$533 = v$430[1];
var v$535 = v$431[0];
var v$536 = v$431[1];
t$652 = ((v$532 < v$535)?true:((v$532 == v$535)?(v$533 < v$536):false));
if (t$652) {return 0;
} else {var t$651;
var v$539 = v$430[0];
var v$540 = v$430[1];
var v$542 = v$431[0];
var v$543 = v$431[1];
t$651 = ((v$539 > v$542)?true:((v$539 == v$542)?(v$540 > v$543):false));
return t$651?1:2;
};
};
return 0;
})();
