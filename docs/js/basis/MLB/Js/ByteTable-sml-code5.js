if ((typeof(basis$0ByteTable$1$5)) == "undefined") {basis$0ByteTable$1$5 = {};
};
(function(){basis$0ByteTable$1$5.sub_array_unsafe$197 = function(v$1112,v$1113){return v$1112[v$1113];
};
basis$0ByteTable$1$5.update_array_unsafe$204 = function(v$1114,v$1115,v$1116){return (v$1114[v$1115] = v$1116,0);
};
basis$0ByteTable$1$5.alloc_array_unsafe$213 = function(i$216){return Array(i$216);
};
basis$0ByteTable$1$5.length_array$217 = function(a$220){return a$220.length;
};
basis$0ByteTable$1$5.sub_vector_unsafe$221 = function(v$1117,v$1118){return v$1117.charCodeAt(v$1118);
};
basis$0ByteTable$1$5.fromList$228 = function(es$879){return SmlPrims.implode(es$879);
};
basis$0ByteTable$1$5.concat$229 = function(vs$880){return SmlPrims.concat(vs$880);
};
basis$0ByteTable$1$5.length$230 = function(t$881){return t$881.length;
};
basis$0ByteTable$1$5.length_vector$231 = function(v$234){return v$234.length;
};
basis$0ByteTable$1$5.explode$235 = function(t$238){var fix$1121 = {};
fix$1121.$h = function(v$248,v$249){lab$h: while (true) {if (v$248 < 0) {return v$249;
} else {var t$1122 = SmlPrims.chk_ovf_i32(v$248 - 1);
var t$1123 = [t$238.charCodeAt(v$248),v$249];
var v$248 = t$1122;
var v$249 = t$1123;
continue lab$h;
};
};
};
var h$239 = fix$1121.$h;
return h$239(SmlPrims.chk_ovf_i32(t$238.length - 1),null);
};
basis$0ByteTable$1$5.maxLen$250 = 16777211;
basis$0ByteTable$1$5.sub$251 = function(v$264,v$265){if ((v$265 < 0)?true:(v$265 >= v$264.length)) {throw CompilerInitial.exn$Subscript$52;
} else {return v$264.charCodeAt(v$265);
};
};
basis$0ByteTable$1$5.tabulate$266 = function(v$292,v$293){if ((v$292 < 0)?true:(v$292 > 16777211)) {throw CompilerInitial.exn$Size$53;
} else {var t$275 = Array(v$292);
var fix$1124 = {};
fix$1124.$loop = function(j$279){lab$loop: while (true) {if (j$279 < v$292) {(t$275[j$279] = (v$293(j$279)),0);
var t$1125 = SmlPrims.chk_ovf_i32(j$279 + 1);
var j$279 = t$1125;
continue lab$loop;
} else {return 0;
};
};
};
var loop$276 = fix$1124.$loop;
loop$276(0);
return SmlPrims.charArrayToString(t$275);
};
};
basis$0ByteTable$1$5.array$294 = function(v$316,v$317){if (v$316 > 16777211) {throw CompilerInitial.exn$Size$53;
} else {var t$303 = Array(v$316);
var fix$1126 = {};
fix$1126.$loop = function(j$307){lab$loop: while (true) {if (j$307 < v$316) {(t$303[j$307] = v$317,0);
var t$1127 = SmlPrims.chk_ovf_i32(j$307 + 1);
var j$307 = t$1127;
continue lab$loop;
} else {return 0;
};
};
};
var loop$304 = fix$1126.$loop;
loop$304(0);
return t$303;
};
};
basis$0ByteTable$1$5.update$318 = function(v$332,v$333,v$334){if ((v$333 < 0)?true:(v$333 >= v$332.length)) {throw CompilerInitial.exn$Subscript$52;
} else {return (v$332[v$333] = v$334,0);
};
};
basis$0ByteTable$1$5.updatev$335 = function(v$356,v$357,v$358){if ((v$357 < 0)?true:(v$357 >= v$356.length)) {throw CompilerInitial.exn$Subscript$52;
} else {var v$1022 = v$356.length;
if ((v$1022 < 0)?true:(v$1022 > 16777211)) {throw CompilerInitial.exn$Size$53;
} else {var t$897 = Array(v$1022);
var fix$1128 = {};
fix$1128.$loop = function(j$899){lab$loop: while (true) {if (j$899 < v$1022) {(t$897[j$899] = ((v$357 == j$899)?v$358:(v$356.charCodeAt(j$899))),0);
var t$1129 = SmlPrims.chk_ovf_i32(j$899 + 1);
var j$899 = t$1129;
continue lab$loop;
} else {return 0;
};
};
};
var loop$898 = fix$1128.$loop;
loop$898(0);
return SmlPrims.charArrayToString(t$897);
};
};
};
basis$0ByteTable$1$5.foldl$359 = function(f$362,e$365,a$368){var stop$369 = a$368.length;
var fix$1130 = {};
fix$1130.$lr = function(v$379,v$380){lab$lr: while (true) {if (v$379 < stop$369) {var t$1131 = SmlPrims.chk_ovf_i32(v$379 + 1);
var t$1132 = f$362([a$368.charCodeAt(v$379),v$380]);
var v$379 = t$1131;
var v$380 = t$1132;
continue lab$lr;
} else {return v$380;
};
};
};
var lr$370 = fix$1130.$lr;
return lr$370(0,e$365);
};
basis$0ByteTable$1$5.foldr$381 = function(f$384,e$387,a$390){var fix$1133 = {};
fix$1133.$rl = function(v$400,v$401){lab$rl: while (true) {if (v$400 >= 0) {var t$1134 = SmlPrims.chk_ovf_i32(v$400 - 1);
var t$1135 = f$384([a$390.charCodeAt(v$400),v$401]);
var v$400 = t$1134;
var v$401 = t$1135;
continue lab$rl;
} else {return v$401;
};
};
};
var rl$391 = fix$1133.$rl;
return rl$391(SmlPrims.chk_ovf_i32(a$390.length - 1),e$387);
};
basis$0ByteTable$1$5.app$402 = function(f$405,a$408){var stop$409 = a$408.length;
var fix$1136 = {};
fix$1136.$lr = function(j$413){lab$lr: while (true) {if (j$413 < stop$409) {f$405(a$408.charCodeAt(j$413));
var t$1137 = SmlPrims.chk_ovf_i32(j$413 + 1);
var j$413 = t$1137;
continue lab$lr;
} else {return 0;
};
};
};
var lr$410 = fix$1136.$lr;
return lr$410(0);
};
basis$0ByteTable$1$5.map$420 = function(f$423,a$426){var v$1035 = a$426.length;
if ((v$1035 < 0)?true:(v$1035 > 16777211)) {throw CompilerInitial.exn$Size$53;
} else {var t$912 = Array(v$1035);
var fix$1138 = {};
fix$1138.$loop = function(j$914){lab$loop: while (true) {if (j$914 < v$1035) {(t$912[j$914] = (f$423(a$426.charCodeAt(j$914))),0);
var t$1139 = SmlPrims.chk_ovf_i32(j$914 + 1);
var j$914 = t$1139;
continue lab$loop;
} else {return 0;
};
};
};
var loop$913 = fix$1138.$loop;
loop$913(0);
return SmlPrims.charArrayToString(t$912);
};
};
basis$0ByteTable$1$5.sliceend$430 = function(v$1119,v$1120,v$443){switch (v$443[0]) { case 1: {if ((v$1120 < 0)?true:(v$1120 > v$1119.length)) {throw CompilerInitial.exn$Subscript$52;
} else {return v$1119.length;
};
 break; }default: {var v$468 = v$443[1];
if ((v$1120 < 0)?true:((v$468 < 0)?true:((SmlPrims.chk_ovf_i32(v$1120 + v$468)) > v$1119.length))) {throw CompilerInitial.exn$Subscript$52;
} else {return SmlPrims.chk_ovf_i32(v$1120 + v$468);
};
} };
};
basis$0ByteTable$1$5.foldli$469 = function(f$472,e$475,a$478){var stop$922 = a$478.length;
var fix$1140 = {};
fix$1140.$lr = function(v$925,v$926){lab$lr: while (true) {if (v$925 < stop$922) {var t$1141 = SmlPrims.chk_ovf_i32(v$925 + 1);
var t$1142 = f$472([v$925,a$478.charCodeAt(v$925),v$926]);
var v$925 = t$1141;
var v$926 = t$1142;
continue lab$lr;
} else {return v$926;
};
};
};
var lr$923 = fix$1140.$lr;
return lr$923(0,e$475);
};
basis$0ByteTable$1$5.foldri$495 = function(f$498,e$501,a$504){var start$930 = SmlPrims.chk_ovf_i32(a$504.length - 1);
var fix$1143 = {};
fix$1143.$rl = function(v$933,v$934){lab$rl: while (true) {if (v$933 >= 0) {var t$1144 = SmlPrims.chk_ovf_i32(v$933 - 1);
var t$1145 = f$498([v$933,a$504.charCodeAt(v$933),v$934]);
var v$933 = t$1144;
var v$934 = t$1145;
continue lab$rl;
} else {return v$934;
};
};
};
var rl$931 = fix$1143.$rl;
return rl$931(start$930,e$501);
};
basis$0ByteTable$1$5.modifyi$521 = function(f$524,a$527){var stop$528 = a$527.length;
var fix$1146 = {};
fix$1146.$lr = function(j$532){lab$lr: while (true) {if (j$532 < stop$528) {(a$527[j$532] = (f$524([j$532,a$527[j$532]])),0);
var t$1147 = SmlPrims.chk_ovf_i32(j$532 + 1);
var j$532 = t$1147;
continue lab$lr;
} else {return 0;
};
};
};
var lr$529 = fix$1146.$lr;
return lr$529(0);
};
basis$0ByteTable$1$5.modify$539 = function(f$542,a$545){var n$546 = a$545.length;
var fix$1148 = {};
fix$1148.$lr = function(j$550){lab$lr: while (true) {if (j$550 < n$546) {(a$545[j$550] = (f$542(a$545[j$550])),0);
var t$1149 = SmlPrims.chk_ovf_i32(j$550 + 1);
var j$550 = t$1149;
continue lab$lr;
} else {return 0;
};
};
};
var lr$547 = fix$1148.$lr;
return lr$547(0);
};
basis$0ByteTable$1$5.vector$557 = function(a$560){return SmlPrims.charArrayToString(a$560);
};
basis$0ByteTable$1$5.copy$627 = function(v$640,v$639,v$638){var v$1058 = [1];
var n_dst$956 = v$639.length;
var n_src$957 = v$638.length;
var n$958;
switch (v$1058[0]) { case 1: {n$958 = (SmlPrims.chk_ovf_i32(v$638.length - 0));
 break; }default: {n$958 = v$1058[1];
} };
if ((n$958 < 0)?true:(((SmlPrims.chk_ovf_i32(0 + n$958)) > n_src$957)?true:((v$640 < 0)?true:((SmlPrims.chk_ovf_i32(v$640 + n$958)) > n_dst$956)))) {throw CompilerInitial.exn$Subscript$52;
} else {if (0 < v$640) {var fix$1150 = {};
fix$1150.$hdilo = function(j$960){lab$hdilo: while (true) {if (j$960 >= 0) {(v$639[SmlPrims.chk_ovf_i32(v$640 + j$960)] = v$638[SmlPrims.chk_ovf_i32(0 + j$960)],0);
var t$1151 = SmlPrims.chk_ovf_i32(j$960 - 1);
var j$960 = t$1151;
continue lab$hdilo;
} else {return 0;
};
};
};
var hdilo$959 = fix$1150.$hdilo;
return hdilo$959(SmlPrims.chk_ovf_i32(n$958 - 1));
} else {var fix$1152 = {};
fix$1152.$lo2hi = function(j$964){lab$lo2hi: while (true) {if (j$964 < n$958) {(v$639[SmlPrims.chk_ovf_i32(v$640 + j$964)] = v$638[SmlPrims.chk_ovf_i32(0 + j$964)],0);
var t$1153 = SmlPrims.chk_ovf_i32(j$964 + 1);
var j$964 = t$1153;
continue lab$lo2hi;
} else {return 0;
};
};
};
var lo2hi$963 = fix$1152.$lo2hi;
return lo2hi$963(0);
};
};
};
basis$0ByteTable$1$5.copyVec$693 = function(v$706,v$705,v$704){var v$1073 = [1];
var n_dst$977 = v$705.length;
var n_src$978 = v$704.length;
var n$979;
switch (v$1073[0]) { case 1: {n$979 = (SmlPrims.chk_ovf_i32(n_src$978 - 0));
 break; }default: {n$979 = v$1073[1];
} };
if ((n$979 < 0)?true:(((SmlPrims.chk_ovf_i32(0 + n$979)) > n_src$978)?true:((v$706 < 0)?true:((SmlPrims.chk_ovf_i32(v$706 + n$979)) > n_dst$977)))) {throw CompilerInitial.exn$Subscript$52;
} else {var fix$1154 = {};
fix$1154.$lo2hi = function(j$981){lab$lo2hi: while (true) {if (j$981 < n$979) {(v$705[SmlPrims.chk_ovf_i32(v$706 + j$981)] = (v$704.charCodeAt(SmlPrims.chk_ovf_i32(0 + j$981))),0);
var t$1155 = SmlPrims.chk_ovf_i32(j$981 + 1);
var j$981 = t$1155;
continue lab$lo2hi;
} else {return 0;
};
};
};
var lo2hi$980 = fix$1154.$lo2hi;
return lo2hi$980(0);
};
};
basis$0ByteTable$1$5.appi$707 = function(f$710,a$713){var stop$714 = a$713.length;
var fix$1156 = {};
fix$1156.$lr = function(j$718){lab$lr: while (true) {if (j$718 < stop$714) {f$710([j$718,a$713.charCodeAt(j$718)]);
var t$1157 = SmlPrims.chk_ovf_i32(j$718 + 1);
var j$718 = t$1157;
continue lab$lr;
} else {return 0;
};
};
};
var lr$715 = fix$1156.$lr;
return lr$715(0);
};
basis$0ByteTable$1$5.mapi$725 = function(f$728,a$731){var v$1083 = a$731.length;
if ((v$1083 < 0)?true:(v$1083 > 16777211)) {throw CompilerInitial.exn$Size$53;
} else {var t$989 = Array(v$1083);
var fix$1158 = {};
fix$1158.$loop = function(j$991){lab$loop: while (true) {if (j$991 < v$1083) {(t$989[j$991] = (f$728([j$991,a$731.charCodeAt(j$991)])),0);
var t$1159 = SmlPrims.chk_ovf_i32(j$991 + 1);
var j$991 = t$1159;
continue lab$loop;
} else {return 0;
};
};
};
var loop$990 = fix$1158.$loop;
loop$990(0);
return SmlPrims.charArrayToString(t$989);
};
};
basis$0ByteTable$1$5.find$735 = function(p$738,a$741){var stop$742 = a$741.length;
var fix$1160 = {};
fix$1160.$lr = function(j$746){lab$lr: while (true) {if (j$746 < stop$742) {if (p$738(a$741.charCodeAt(j$746))) {return [0,a$741.charCodeAt(j$746)];
} else {var t$1161 = SmlPrims.chk_ovf_i32(j$746 + 1);
var j$746 = t$1161;
continue lab$lr;
};
} else {return [1];
};
};
};
var lr$743 = fix$1160.$lr;
return lr$743(0);
};
basis$0ByteTable$1$5.exists$755 = function(p$758,a$761){var stop$762 = a$761.length;
var fix$1162 = {};
fix$1162.$lr = function(j$766){lab$lr: while (true) {if (j$766 < stop$762) {if (p$758(a$761.charCodeAt(j$766))) {return true;
} else {var t$1163 = SmlPrims.chk_ovf_i32(j$766 + 1);
var j$766 = t$1163;
continue lab$lr;
};
} else {return false;
};
};
};
var lr$763 = fix$1162.$lr;
return lr$763(0);
};
basis$0ByteTable$1$5.all$775 = function(p$778,a$781){var stop$782 = a$781.length;
var fix$1164 = {};
fix$1164.$lr = function(j$786){lab$lr: while (true) {if (j$786 >= stop$782) {return true;
} else {if (p$778(a$781.charCodeAt(j$786))) {var t$1165 = SmlPrims.chk_ovf_i32(j$786 + 1);
var j$786 = t$1165;
continue lab$lr;
} else {return false;
};
};
};
};
var lr$783 = fix$1164.$lr;
return lr$783(0);
};
basis$0ByteTable$1$5.findi$795 = function(p$798,a$801){var stop$802 = a$801.length;
var fix$1166 = {};
fix$1166.$lr = function(j$806){lab$lr: while (true) {if (j$806 < stop$802) {if (p$798([j$806,a$801.charCodeAt(j$806)])) {return [0,[j$806,a$801.charCodeAt(j$806)]];
} else {var t$1167 = SmlPrims.chk_ovf_i32(j$806 + 1);
var j$806 = t$1167;
continue lab$lr;
};
} else {return [1];
};
};
};
var lr$803 = fix$1166.$lr;
return lr$803(0);
};
basis$0ByteTable$1$5.collate$815 = function(cmp$818,v$822){var v$851 = v$822[0];
var v$852 = v$822[1];
var n1$823 = v$851.length;
var n2$824 = v$852.length;
var stop$825 = (n1$823 < n2$824)?n1$823:n2$824;
var fix$1168 = {};
fix$1168.$h = function(j$833){lab$h: while (true) {if (j$833 == stop$825) {return (n1$823 < n2$824)?0:((n1$823 > n2$824)?1:2);
} else {var v$850 = cmp$818([v$851.charCodeAt(j$833),v$852.charCodeAt(j$833)]);
switch (v$850) { case 2: {var t$1169 = SmlPrims.chk_ovf_i32(j$833 + 1);
var j$833 = t$1169;
continue lab$h;
 break; }default: {return v$850;
} };
};
};
};
var h$830 = fix$1168.$h;
return h$830(0);
};
return 0;
})();
