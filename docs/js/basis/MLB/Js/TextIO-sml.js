if ((typeof(basis$0TextIO$1)) == "undefined") {basis$0TextIO$1 = {};
};
(function(){basis$0TextIO$1.eq_file0$228 = function(v$230,v$231){switch (v$230[0]) { case 0: {switch (v$231[0]) { case 0: {return v$230[1] == v$231[1];
 break; }default: {return false;
} };
 break; }case 1: {switch (v$231[0]) { case 1: {return v$230[1] == v$231[1];
 break; }default: {return false;
} };
 break; } };
};
basis$0TextIO$1.eq_outstream$238 = function(v$240,v$241){switch (v$240[0]) { case 0: {switch (v$241[0]) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$241[0]) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$241[0]) { case 2: {return v$240[1] == v$241[1];
 break; }default: {return false;
} };
 break; } };
};
var fs$71 = [null];
basis$0TextIO$1.openOut$108 = function(s$386){var v$387 = basis$0List$1.find$392(function(v$388){return s$386 == v$388[0];
},fs$71[0]);
switch (v$387[0]) { case 0: {var v$389 = v$387[1];
var v$390 = v$389[1];
switch (v$390[0][0]) { case 1: {(v$390[0] = [0,[null]],0);
return [2,v$390];
 break; }default: {throw [basis$0Initial$1.en$Fail$54,"File already open: " + s$386];
} };
 break; }default: {var f$394 = [[0,[null]]];
(fs$71[0] = [[s$386,f$394],fs$71[0]],0);
return [2,f$394];
} };
};
basis$0TextIO$1.openAppend$109 = function(s$396){var v$397 = basis$0List$1.find$392(function(v$398){return s$396 == v$398[0];
},fs$71[0]);
switch (v$397[0]) { case 0: {var v$399 = v$397[1];
var v$400 = v$399[1];
var v$401 = v$400[0];
switch (v$401[0]) { case 1: {var v$402 = v$401[1];
var f$403 = [v$402,null];
(v$400[0] = [0,[f$403]],0);
return [2,v$400];
 break; }default: {throw [basis$0Initial$1.en$Fail$54,"File already open: " + s$396];
} };
 break; }default: {var f$404 = [[0,[null]]];
(fs$71[0] = [[s$396,f$404],fs$71[0]],0);
return [2,f$404];
} };
};
basis$0TextIO$1.output$110 = function(v$127,v$128){switch (v$127[0]) { case 0: {return basis$0General$1.print$163(v$128);
 break; }case 1: {return basis$0General$1.print$163(v$128);
 break; }default: {var v$124 = v$127[1];
switch (v$124[0][0]) { case 0: {var v$126 = v$124[0][1];
return (v$126[0] = [v$128,v$126[0]],0);
 break; }default: {throw [basis$0Initial$1.en$Fail$54,"output: outstream closed"];
} };
} };
};
basis$0TextIO$1.closeOut$129 = function(os$132){switch (os$132[0]) { case 2: {var v$146 = os$132[1];
var v$143 = v$146[0];
switch (v$143[0]) { case 0: {var v$145 = v$143[1];
return (v$146[0] = [1,SmlPrims.concat(basis$0List$1.rev$682(v$145[0]))],0);
 break; }default: {return 0;
} };
 break; }default: {return 0;
} };
};
basis$0TextIO$1.output1$147 = function(v$152,v$153){var v$335 = basis$0Char$1.toString$277(v$153);
switch (v$152[0]) { case 0: {return basis$0General$1.print$163(v$335);
 break; }case 1: {return basis$0General$1.print$163(v$335);
 break; }default: {var v$265 = v$152[1];
switch (v$265[0][0]) { case 0: {var v$266 = v$265[0][1];
return (v$266[0] = [v$335,v$266[0]],0);
 break; }default: {throw [basis$0Initial$1.en$Fail$54,"output: outstream closed"];
} };
} };
};
basis$0TextIO$1.outputSubstr$154 = function(v$159,v$160){var v$275 = v$160[0];
var v$276 = v$160[1];
var v$277 = v$160[2];
var v$339;
var newstr$278 = Array(v$277);
var fix$406 = {};
fix$406.$loop = function(v$281,v$282,v$283){lab$loop: while (true) {if (v$283 > 0) {(newstr$278[v$282] = (v$275.charCodeAt(v$281)),0);
var t$407 = SmlPrims.chk_ovf_i32(v$281 + 1);
var t$408 = SmlPrims.chk_ovf_i32(v$282 + 1);
var t$409 = SmlPrims.chk_ovf_i32(v$283 - 1);
var v$281 = t$407;
var v$282 = t$408;
var v$283 = t$409;
continue lab$loop;
} else {return 0;
};
};
};
var loop$279 = fix$406.$loop;
loop$279(v$276,0,v$277);
v$339 = (SmlPrims.charArrayToString(newstr$278));
switch (v$159[0]) { case 0: {return basis$0General$1.print$163(v$339);
 break; }case 1: {return basis$0General$1.print$163(v$339);
 break; }default: {var v$271 = v$159[1];
switch (v$271[0][0]) { case 0: {var v$272 = v$271[0][1];
return (v$272[0] = [v$339,v$272[0]],0);
 break; }default: {throw [basis$0Initial$1.en$Fail$54,"output: outstream closed"];
} };
} };
};
basis$0TextIO$1.flushOut$161 = function(v$163){return 0;
};
basis$0TextIO$1.print$164 = function(v$405){return basis$0General$1.print$163(v$405);
};
basis$0TextIO$1.openIn$169 = function(v$171){throw [basis$0Initial$1.en$Fail$54,"TextIO.openIn: unimplemented"];
};
basis$0TextIO$1.closeIn$172 = function(v$174){throw [basis$0Initial$1.en$Fail$54,"TextIO.closeIn: unimplemented"];
};
basis$0TextIO$1.input$175 = function(v$177){throw [basis$0Initial$1.en$Fail$54,"TextIO.input: unimplemented"];
};
basis$0TextIO$1.inputAll$178 = function(v$180){throw [basis$0Initial$1.en$Fail$54,"TextIO.inputAll: unimplemented"];
};
basis$0TextIO$1.input1$181 = function(v$183){throw [basis$0Initial$1.en$Fail$54,"TextIO.input1: unimplemented"];
};
basis$0TextIO$1.inputN$184 = function(v$186){throw [basis$0Initial$1.en$Fail$54,"TextIO.inputN: unimplemented"];
};
basis$0TextIO$1.inputLine$187 = function(v$189){throw [basis$0Initial$1.en$Fail$54,"TextIO.inputLine: unimplemented"];
};
basis$0TextIO$1.endOfStream$190 = function(v$192){throw [basis$0Initial$1.en$Fail$54,"TextIO.endOfStream: unimplemented"];
};
basis$0TextIO$1.lookahead$193 = function(v$195){throw [basis$0Initial$1.en$Fail$54,"TextIO.lookahead: unimplemented"];
};
basis$0TextIO$1.scanStream$196 = function(v$198,v$200){throw [basis$0Initial$1.en$Fail$54,"TextIO.scanStream: unimplemented"];
};
basis$0TextIO$1.stdIn$201 = 0;
return 0;
})();
