if ((typeof(basis$0ByteTable$1$22)) == "undefined") {basis$0ByteTable$1$22 = {};
};
(function(){basis$0ByteTable$1$22.sub_array_unsafe$3559 = function(v$4474,v$4475){return v$4474[v$4475];
};
basis$0ByteTable$1$22.update_array_unsafe$3566 = function(v$4476,v$4477,v$4478){return (v$4476[v$4477] = v$4478,0);
};
basis$0ByteTable$1$22.alloc_array_unsafe$3575 = function(i$3578){return Array(i$3578);
};
basis$0ByteTable$1$22.length_array$3579 = function(a$3582){return a$3582.length;
};
basis$0ByteTable$1$22.sub_vector_unsafe$3583 = function(v$4479,v$4480){return v$4479.charCodeAt(v$4480);
};
basis$0ByteTable$1$22.fromList$3590 = function(es$4241){return SmlPrims.charsToCharArray(es$4241);
};
basis$0ByteTable$1$22.concat$3591 = function(vs$4242){return SmlPrims.charArraysConcat(vs$4242);
};
basis$0ByteTable$1$22.length$3592 = function(t$4243){return t$4243.length;
};
basis$0ByteTable$1$22.length_vector$3593 = function(v$3596){return v$3596.length;
};
basis$0ByteTable$1$22.explode$3597 = function(t$3600){var fix$4483 = {};
fix$4483.$h = function(v$3610,v$3611){lab$h: while (true) {if (v$3610 < 0) {return v$3611;
} else {var t$4484 = SmlPrims.chk_ovf_i32(v$3610 - 1);
var t$4485 = [t$3600[v$3610],v$3611];
var v$3610 = t$4484;
var v$3611 = t$4485;
continue lab$h;
};
};
};
var h$3601 = fix$4483.$h;
return h$3601(SmlPrims.chk_ovf_i32(t$3600.length - 1),null);
};
basis$0ByteTable$1$22.maxLen$3612 = 16777211;
basis$0ByteTable$1$22.sub$3613 = function(v$3626,v$3627){if ((v$3627 < 0)?true:(v$3627 >= v$3626.length)) {throw CompilerInitial.exn$Subscript$52;
} else {return v$3626[v$3627];
};
};
basis$0ByteTable$1$22.tabulate$3628 = function(v$3654,v$3655){if ((v$3654 < 0)?true:(v$3654 > 16777211)) {throw CompilerInitial.exn$Size$53;
} else {var t$3637 = Array(v$3654);
var fix$4486 = {};
fix$4486.$loop = function(j$3641){lab$loop: while (true) {if (j$3641 < v$3654) {(t$3637[j$3641] = (v$3655(j$3641)),0);
var t$4487 = SmlPrims.chk_ovf_i32(j$3641 + 1);
var j$3641 = t$4487;
continue lab$loop;
} else {return 0;
};
};
};
var loop$3638 = fix$4486.$loop;
loop$3638(0);
return t$3637;
};
};
basis$0ByteTable$1$22.array$3656 = function(v$3678,v$3679){if (v$3678 > 16777211) {throw CompilerInitial.exn$Size$53;
} else {var t$3665 = Array(v$3678);
var fix$4488 = {};
fix$4488.$loop = function(j$3669){lab$loop: while (true) {if (j$3669 < v$3678) {(t$3665[j$3669] = v$3679,0);
var t$4489 = SmlPrims.chk_ovf_i32(j$3669 + 1);
var j$3669 = t$4489;
continue lab$loop;
} else {return 0;
};
};
};
var loop$3666 = fix$4488.$loop;
loop$3666(0);
return t$3665;
};
};
basis$0ByteTable$1$22.update$3680 = function(v$3694,v$3695,v$3696){if ((v$3695 < 0)?true:(v$3695 >= v$3694.length)) {throw CompilerInitial.exn$Subscript$52;
} else {return (v$3694[v$3695] = v$3696,0);
};
};
basis$0ByteTable$1$22.updatev$3697 = function(v$3718,v$3719,v$3720){if ((v$3719 < 0)?true:(v$3719 >= v$3718.length)) {throw CompilerInitial.exn$Subscript$52;
} else {var v$4384 = v$3718.length;
if ((v$4384 < 0)?true:(v$4384 > 16777211)) {throw CompilerInitial.exn$Size$53;
} else {var t$4259 = Array(v$4384);
var fix$4490 = {};
fix$4490.$loop = function(j$4261){lab$loop: while (true) {if (j$4261 < v$4384) {(t$4259[j$4261] = ((v$3719 == j$4261)?v$3720:v$3718[j$4261]),0);
var t$4491 = SmlPrims.chk_ovf_i32(j$4261 + 1);
var j$4261 = t$4491;
continue lab$loop;
} else {return 0;
};
};
};
var loop$4260 = fix$4490.$loop;
loop$4260(0);
return t$4259;
};
};
};
basis$0ByteTable$1$22.foldl$3721 = function(f$3724,e$3727,a$3730){var stop$3731 = a$3730.length;
var fix$4492 = {};
fix$4492.$lr = function(v$3741,v$3742){lab$lr: while (true) {if (v$3741 < stop$3731) {var t$4493 = SmlPrims.chk_ovf_i32(v$3741 + 1);
var t$4494 = f$3724([a$3730[v$3741],v$3742]);
var v$3741 = t$4493;
var v$3742 = t$4494;
continue lab$lr;
} else {return v$3742;
};
};
};
var lr$3732 = fix$4492.$lr;
return lr$3732(0,e$3727);
};
basis$0ByteTable$1$22.foldr$3743 = function(f$3746,e$3749,a$3752){var fix$4495 = {};
fix$4495.$rl = function(v$3762,v$3763){lab$rl: while (true) {if (v$3762 >= 0) {var t$4496 = SmlPrims.chk_ovf_i32(v$3762 - 1);
var t$4497 = f$3746([a$3752[v$3762],v$3763]);
var v$3762 = t$4496;
var v$3763 = t$4497;
continue lab$rl;
} else {return v$3763;
};
};
};
var rl$3753 = fix$4495.$rl;
return rl$3753(SmlPrims.chk_ovf_i32(a$3752.length - 1),e$3749);
};
basis$0ByteTable$1$22.app$3764 = function(f$3767,a$3770){var stop$3771 = a$3770.length;
var fix$4498 = {};
fix$4498.$lr = function(j$3775){lab$lr: while (true) {if (j$3775 < stop$3771) {f$3767(a$3770[j$3775]);
var t$4499 = SmlPrims.chk_ovf_i32(j$3775 + 1);
var j$3775 = t$4499;
continue lab$lr;
} else {return 0;
};
};
};
var lr$3772 = fix$4498.$lr;
return lr$3772(0);
};
basis$0ByteTable$1$22.map$3782 = function(f$3785,a$3788){var v$4397 = a$3788.length;
if ((v$4397 < 0)?true:(v$4397 > 16777211)) {throw CompilerInitial.exn$Size$53;
} else {var t$4274 = Array(v$4397);
var fix$4500 = {};
fix$4500.$loop = function(j$4276){lab$loop: while (true) {if (j$4276 < v$4397) {(t$4274[j$4276] = (f$3785(a$3788[j$4276])),0);
var t$4501 = SmlPrims.chk_ovf_i32(j$4276 + 1);
var j$4276 = t$4501;
continue lab$loop;
} else {return 0;
};
};
};
var loop$4275 = fix$4500.$loop;
loop$4275(0);
return t$4274;
};
};
basis$0ByteTable$1$22.sliceend$3792 = function(v$4481,v$4482,v$3805){switch (v$3805[0]) { case 1: {if ((v$4482 < 0)?true:(v$4482 > v$4481.length)) {throw CompilerInitial.exn$Subscript$52;
} else {return v$4481.length;
};
 break; }default: {var v$3830 = v$3805[1];
if ((v$4482 < 0)?true:((v$3830 < 0)?true:((SmlPrims.chk_ovf_i32(v$4482 + v$3830)) > v$4481.length))) {throw CompilerInitial.exn$Subscript$52;
} else {return SmlPrims.chk_ovf_i32(v$4482 + v$3830);
};
} };
};
basis$0ByteTable$1$22.foldli$3831 = function(f$3834,e$3837,a$3840){var stop$4284 = a$3840.length;
var fix$4502 = {};
fix$4502.$lr = function(v$4287,v$4288){lab$lr: while (true) {if (v$4287 < stop$4284) {var t$4503 = SmlPrims.chk_ovf_i32(v$4287 + 1);
var t$4504 = f$3834([v$4287,a$3840[v$4287],v$4288]);
var v$4287 = t$4503;
var v$4288 = t$4504;
continue lab$lr;
} else {return v$4288;
};
};
};
var lr$4285 = fix$4502.$lr;
return lr$4285(0,e$3837);
};
basis$0ByteTable$1$22.foldri$3857 = function(f$3860,e$3863,a$3866){var start$4292 = SmlPrims.chk_ovf_i32(a$3866.length - 1);
var fix$4505 = {};
fix$4505.$rl = function(v$4295,v$4296){lab$rl: while (true) {if (v$4295 >= 0) {var t$4506 = SmlPrims.chk_ovf_i32(v$4295 - 1);
var t$4507 = f$3860([v$4295,a$3866[v$4295],v$4296]);
var v$4295 = t$4506;
var v$4296 = t$4507;
continue lab$rl;
} else {return v$4296;
};
};
};
var rl$4293 = fix$4505.$rl;
return rl$4293(start$4292,e$3863);
};
basis$0ByteTable$1$22.modifyi$3883 = function(f$3886,a$3889){var stop$3890 = a$3889.length;
var fix$4508 = {};
fix$4508.$lr = function(j$3894){lab$lr: while (true) {if (j$3894 < stop$3890) {(a$3889[j$3894] = (f$3886([j$3894,a$3889[j$3894]])),0);
var t$4509 = SmlPrims.chk_ovf_i32(j$3894 + 1);
var j$3894 = t$4509;
continue lab$lr;
} else {return 0;
};
};
};
var lr$3891 = fix$4508.$lr;
return lr$3891(0);
};
basis$0ByteTable$1$22.modify$3901 = function(f$3904,a$3907){var n$3908 = a$3907.length;
var fix$4510 = {};
fix$4510.$lr = function(j$3912){lab$lr: while (true) {if (j$3912 < n$3908) {(a$3907[j$3912] = (f$3904(a$3907[j$3912])),0);
var t$4511 = SmlPrims.chk_ovf_i32(j$3912 + 1);
var j$3912 = t$4511;
continue lab$lr;
} else {return 0;
};
};
};
var lr$3909 = fix$4510.$lr;
return lr$3909(0);
};
basis$0ByteTable$1$22.vector$3919 = function(a$3922){return SmlPrims.charArrayToString(a$3922);
};
basis$0ByteTable$1$22.copy$3989 = function(v$4002,v$4001,v$4000){var v$4420 = [1];
var n_dst$4318 = v$4001.length;
var n_src$4319 = v$4000.length;
var n$4320;
switch (v$4420[0]) { case 1: {n$4320 = (SmlPrims.chk_ovf_i32(v$4000.length - 0));
 break; }default: {n$4320 = v$4420[1];
} };
if ((n$4320 < 0)?true:(((SmlPrims.chk_ovf_i32(0 + n$4320)) > n_src$4319)?true:((v$4002 < 0)?true:((SmlPrims.chk_ovf_i32(v$4002 + n$4320)) > n_dst$4318)))) {throw CompilerInitial.exn$Subscript$52;
} else {if (0 < v$4002) {var fix$4512 = {};
fix$4512.$hdilo = function(j$4322){lab$hdilo: while (true) {if (j$4322 >= 0) {(v$4001[SmlPrims.chk_ovf_i32(v$4002 + j$4322)] = v$4000[SmlPrims.chk_ovf_i32(0 + j$4322)],0);
var t$4513 = SmlPrims.chk_ovf_i32(j$4322 - 1);
var j$4322 = t$4513;
continue lab$hdilo;
} else {return 0;
};
};
};
var hdilo$4321 = fix$4512.$hdilo;
return hdilo$4321(SmlPrims.chk_ovf_i32(n$4320 - 1));
} else {var fix$4514 = {};
fix$4514.$lo2hi = function(j$4326){lab$lo2hi: while (true) {if (j$4326 < n$4320) {(v$4001[SmlPrims.chk_ovf_i32(v$4002 + j$4326)] = v$4000[SmlPrims.chk_ovf_i32(0 + j$4326)],0);
var t$4515 = SmlPrims.chk_ovf_i32(j$4326 + 1);
var j$4326 = t$4515;
continue lab$lo2hi;
} else {return 0;
};
};
};
var lo2hi$4325 = fix$4514.$lo2hi;
return lo2hi$4325(0);
};
};
};
basis$0ByteTable$1$22.copyVec$4055 = function(v$4068,v$4067,v$4066){var v$4435 = [1];
var n_dst$4339 = v$4067.length;
var n_src$4340 = v$4066.length;
var n$4341;
switch (v$4435[0]) { case 1: {n$4341 = (SmlPrims.chk_ovf_i32(n_src$4340 - 0));
 break; }default: {n$4341 = v$4435[1];
} };
if ((n$4341 < 0)?true:(((SmlPrims.chk_ovf_i32(0 + n$4341)) > n_src$4340)?true:((v$4068 < 0)?true:((SmlPrims.chk_ovf_i32(v$4068 + n$4341)) > n_dst$4339)))) {throw CompilerInitial.exn$Subscript$52;
} else {var fix$4516 = {};
fix$4516.$lo2hi = function(j$4343){lab$lo2hi: while (true) {if (j$4343 < n$4341) {(v$4067[SmlPrims.chk_ovf_i32(v$4068 + j$4343)] = (v$4066.charCodeAt(SmlPrims.chk_ovf_i32(0 + j$4343))),0);
var t$4517 = SmlPrims.chk_ovf_i32(j$4343 + 1);
var j$4343 = t$4517;
continue lab$lo2hi;
} else {return 0;
};
};
};
var lo2hi$4342 = fix$4516.$lo2hi;
return lo2hi$4342(0);
};
};
basis$0ByteTable$1$22.appi$4069 = function(f$4072,a$4075){var stop$4076 = a$4075.length;
var fix$4518 = {};
fix$4518.$lr = function(j$4080){lab$lr: while (true) {if (j$4080 < stop$4076) {f$4072([j$4080,a$4075[j$4080]]);
var t$4519 = SmlPrims.chk_ovf_i32(j$4080 + 1);
var j$4080 = t$4519;
continue lab$lr;
} else {return 0;
};
};
};
var lr$4077 = fix$4518.$lr;
return lr$4077(0);
};
basis$0ByteTable$1$22.mapi$4087 = function(f$4090,a$4093){var v$4445 = a$4093.length;
if ((v$4445 < 0)?true:(v$4445 > 16777211)) {throw CompilerInitial.exn$Size$53;
} else {var t$4351 = Array(v$4445);
var fix$4520 = {};
fix$4520.$loop = function(j$4353){lab$loop: while (true) {if (j$4353 < v$4445) {(t$4351[j$4353] = (f$4090([j$4353,a$4093[j$4353]])),0);
var t$4521 = SmlPrims.chk_ovf_i32(j$4353 + 1);
var j$4353 = t$4521;
continue lab$loop;
} else {return 0;
};
};
};
var loop$4352 = fix$4520.$loop;
loop$4352(0);
return t$4351;
};
};
basis$0ByteTable$1$22.find$4097 = function(p$4100,a$4103){var stop$4104 = a$4103.length;
var fix$4522 = {};
fix$4522.$lr = function(j$4108){lab$lr: while (true) {if (j$4108 < stop$4104) {if (p$4100(a$4103[j$4108])) {return [0,a$4103[j$4108]];
} else {var t$4523 = SmlPrims.chk_ovf_i32(j$4108 + 1);
var j$4108 = t$4523;
continue lab$lr;
};
} else {return [1];
};
};
};
var lr$4105 = fix$4522.$lr;
return lr$4105(0);
};
basis$0ByteTable$1$22.exists$4117 = function(p$4120,a$4123){var stop$4124 = a$4123.length;
var fix$4524 = {};
fix$4524.$lr = function(j$4128){lab$lr: while (true) {if (j$4128 < stop$4124) {if (p$4120(a$4123[j$4128])) {return true;
} else {var t$4525 = SmlPrims.chk_ovf_i32(j$4128 + 1);
var j$4128 = t$4525;
continue lab$lr;
};
} else {return false;
};
};
};
var lr$4125 = fix$4524.$lr;
return lr$4125(0);
};
basis$0ByteTable$1$22.all$4137 = function(p$4140,a$4143){var stop$4144 = a$4143.length;
var fix$4526 = {};
fix$4526.$lr = function(j$4148){lab$lr: while (true) {if (j$4148 >= stop$4144) {return true;
} else {if (p$4140(a$4143[j$4148])) {var t$4527 = SmlPrims.chk_ovf_i32(j$4148 + 1);
var j$4148 = t$4527;
continue lab$lr;
} else {return false;
};
};
};
};
var lr$4145 = fix$4526.$lr;
return lr$4145(0);
};
basis$0ByteTable$1$22.findi$4157 = function(p$4160,a$4163){var stop$4164 = a$4163.length;
var fix$4528 = {};
fix$4528.$lr = function(j$4168){lab$lr: while (true) {if (j$4168 < stop$4164) {if (p$4160([j$4168,a$4163[j$4168]])) {return [0,[j$4168,a$4163[j$4168]]];
} else {var t$4529 = SmlPrims.chk_ovf_i32(j$4168 + 1);
var j$4168 = t$4529;
continue lab$lr;
};
} else {return [1];
};
};
};
var lr$4165 = fix$4528.$lr;
return lr$4165(0);
};
basis$0ByteTable$1$22.collate$4177 = function(cmp$4180,v$4184){var v$4213 = v$4184[0];
var v$4214 = v$4184[1];
var n1$4185 = v$4213.length;
var n2$4186 = v$4214.length;
var stop$4187 = (n1$4185 < n2$4186)?n1$4185:n2$4186;
var fix$4530 = {};
fix$4530.$h = function(j$4195){lab$h: while (true) {if (j$4195 == stop$4187) {return (n1$4185 < n2$4186)?0:((n1$4185 > n2$4186)?1:2);
} else {var v$4212 = cmp$4180([v$4213[j$4195],v$4214[j$4195]]);
switch (v$4212) { case 2: {var t$4531 = SmlPrims.chk_ovf_i32(j$4195 + 1);
var j$4195 = t$4531;
continue lab$h;
 break; }default: {return v$4212;
} };
};
};
};
var h$4192 = fix$4530.$h;
return h$4192(0);
};
return 0;
})();
