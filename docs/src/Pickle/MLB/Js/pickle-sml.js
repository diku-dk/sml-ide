if ((typeof(pickle$0pickle$1)) == "undefined") {pickle$0pickle$1 = {};
};
(function(){pickle$0pickle$1.eq_cache$2733 = function(v$2737,v$2734){var v$2735 = v$2734[0];
var v$2736 = v$2734[1];
switch (v$2735[0]) { case 0: {switch (v$2736[0]) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$2736[0]) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$2736[0]) { case 2: {var v$2738 = v$2735[1];
var v$2739 = v$2736[1];
return v$2737([v$2738,v$2739]);
 break; }default: {return false;
} };
 break; } };
};
var fix$5423 = {};
fix$5423.$eq_typ = function(v$2742,v$2743){lab$eq_typ: while (true) {switch (v$2742[0]) { case 0: {switch (v$2743[0]) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$2743[0]) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$2743[0]) { case 2: {return true;
 break; }default: {return false;
} };
 break; }case 3: {switch (v$2743[0]) { case 3: {return true;
 break; }default: {return false;
} };
 break; }case 4: {switch (v$2743[0]) { case 4: {return true;
 break; }default: {return false;
} };
 break; }case 5: {switch (v$2743[0]) { case 5: {return true;
 break; }default: {return false;
} };
 break; }case 6: {switch (v$2743[0]) { case 6: {return true;
 break; }default: {return false;
} };
 break; }case 7: {switch (v$2743[0]) { case 7: {var v$2744 = v$2742[1];
var v$2745 = v$2743[1];
var t$5442 = v$2744;
var t$5443 = v$2745;
var v$2742 = t$5442;
var v$2743 = t$5443;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 8: {switch (v$2743[0]) { case 8: {var v$2746 = v$2742[1];
var v$2747 = v$2743[1];
var t$5440 = v$2746;
var t$5441 = v$2747;
var v$2742 = t$5440;
var v$2743 = t$5441;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 9: {switch (v$2743[0]) { case 9: {var v$2748 = v$2742[1];
var v$2749 = v$2743[1];
var t$5438 = v$2748;
var t$5439 = v$2749;
var v$2742 = t$5438;
var v$2743 = t$5439;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 10: {switch (v$2743[0]) { case 10: {var v$2750 = v$2742[1];
var v$2751 = v$2743[1];
var t$5436 = v$2750;
var t$5437 = v$2751;
var v$2742 = t$5436;
var v$2743 = t$5437;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 11: {switch (v$2743[0]) { case 11: {var v$2752 = v$2742[1];
var v$2753 = v$2743[1];
var t$5434 = v$2752;
var t$5435 = v$2753;
var v$2742 = t$5434;
var v$2743 = t$5435;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 12: {switch (v$2743[0]) { case 12: {return true;
 break; }default: {return false;
} };
 break; }case 13: {switch (v$2743[0]) { case 13: {var v$2754 = v$2742[1];
var v$2755 = v$2743[1];
if (fix$5423.$eq_typ(v$2754[0],v$2755[0])) {var t$5432 = v$2754[1];
var t$5433 = v$2755[1];
var v$2742 = t$5432;
var v$2743 = t$5433;
continue lab$eq_typ;
} else {return false;
};
 break; }default: {return false;
} };
 break; }case 14: {switch (v$2743[0]) { case 14: {var v$2757 = v$2742[1];
var v$2758 = v$2743[1];
var t$5430 = v$2757;
var t$5431 = v$2758;
var v$2742 = t$5430;
var v$2743 = t$5431;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 15: {switch (v$2743[0]) { case 15: {var v$2759 = v$2742[1];
var v$2760 = v$2743[1];
var t$5428 = v$2759;
var t$5429 = v$2760;
var v$2742 = t$5428;
var v$2743 = t$5429;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 16: {switch (v$2743[0]) { case 16: {return true;
 break; }default: {return false;
} };
 break; }case 17: {switch (v$2743[0]) { case 17: {return true;
 break; }default: {return false;
} };
 break; }case 18: {switch (v$2743[0]) { case 18: {return true;
 break; }default: {return false;
} };
 break; }case 19: {switch (v$2743[0]) { case 19: {return v$2742[1] == v$2743[1];
 break; }default: {return false;
} };
 break; }case 20: {switch (v$2743[0]) { case 20: {var v$2764 = v$2742[1];
var v$2765 = v$2743[1];
if (v$2764[0] == v$2765[0]) {var t$5426 = v$2764[1];
var t$5427 = v$2765[1];
var v$2742 = t$5426;
var v$2743 = t$5427;
continue lab$eq_typ;
} else {return false;
};
 break; }default: {return false;
} };
 break; }case 21: {switch (v$2743[0]) { case 21: {return v$2742[1] == v$2743[1];
 break; }default: {return false;
} };
 break; }case 22: {switch (v$2743[0]) { case 22: {var v$2771 = v$2742[1];
var v$2772 = v$2743[1];
var t$5424 = v$2771;
var t$5425 = v$2772;
var v$2742 = t$5424;
var v$2743 = t$5425;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 23: {switch (v$2743[0]) { case 23: {return true;
 break; }default: {return false;
} };
 break; }case 24: {switch (v$2743[0]) { case 24: {return true;
 break; }default: {return false;
} };
 break; }case 25: {switch (v$2743[0]) { case 25: {return true;
 break; }default: {return false;
} };
 break; } };
};
};
pickle$0pickle$1.eq_typ$2740 = fix$5423.$eq_typ;
var en$PickleExn$93 = new String("PickleExn");
var exn$PickleExn$93 = [en$PickleExn$93];
var reset_fun$94 = [function(x$2797){return x$2797;
}];
var hashCount$237 = [100];
pickle$0pickle$1.empty_hce$446 = function(v$2908){var v$4746 = exn$PickleExn$93;
var v$2920;
var t$5444;
var v$2921;
var nw$2922 = SmlPrims.i32_to_w32(10);
var fix$5445 = {};
fix$5445.$f = function(i$2924){lab$f: while (true) {if (i$2924 >= nw$2922) {return i$2924;
} else {var t$5446 = (i$2924 << (1 & 31)) & 4294967295;
var i$2924 = t$5446;
continue lab$f;
};
};
};
var f$2923 = fix$5445.$f;
v$2921 = (SmlPrims.chk_ovf_i32(f$2923(32)));
var v$2925 = null;
if ((0 <= v$2921)?(v$2921 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$5444 = (SmlPrims.wordTableInit(v$2921,v$2925));
v$2920 = [t$5444];
return [function(x$5406){return SmlPrims.w32_to_i32_X(pickle$0eqhashdyn2$1.hash$130(12,x$5406));
},[0],v$4746,function(v$5347){return pickle$0eqhashdyn2$1.eq$119(v$5347[0],v$5347[1]);
},v$2920];
};
[0];
pickle$0pickle$1.debug$531 = function(str$534,pu$537){return pu$537;
};
var word32Gen$571 = function(v$2775,s$574,v$578){var v$608 = v$578[0];
var v$609 = v$578[1];
return [0,[function(v$2987){var v$2988 = v$2987[0];
var v$2989 = v$2987[1];
return v$2775([v$2988,v$2989]);
},function(a$2990){return function(p$3001){var v$3002 = p$3001[1];
return (v$3002 <= 0)?p$3001:[((v$608(a$2990)) + ((p$3001[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$3001[1] - 1)];
};
},function(w$3010){return function(s$3011){return pickle$0bitstream$1.outcw32$460(v$608(w$3010),s$3011);
};
},[1],function(v$3012){var v$3013 = v$3012[0];
var v$3014 = v$3012[1];
var v$3015 = pickle$0bitstream$1.getcw32$472(v$3013);
var v$3016 = v$3015[0];
var v$3017 = v$3015[1];
return [v$609(v$3016),[v$3017,v$3014]];
}]];
};
pickle$0pickle$1.word$727 = [0,[function(v$3103){return v$3103[0] == v$3103[1];
},function(a$3106){return function(p$3107){var v$3108 = p$3107[1];
return (v$3108 <= 0)?p$3107:[(a$3106 + ((p$3107[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$3107[1] - 1)];
};
},function(w$3110){return function(s$3111){return pickle$0bitstream$1.outcw$398(w$3110,s$3111);
};
},[4],function(v$3112){var v$3113 = v$3112[0];
var v$3114 = v$3112[1];
var v$3115 = pickle$0bitstream$1.getcw$410(v$3113);
return [v$3115[0],[v$3115[1],v$3114]];
}]];
pickle$0pickle$1.word32$728 = word32Gen$571(function(v$2780){return v$2780[0] == v$2780[1];
},"word32",[function(x$3120){return x$3120;
},function(x$3121){return x$3121;
}]);
pickle$0pickle$1.int$729 = word32Gen$571(function(v$2781){return v$2781[0] == v$2781[1];
},"int",[function(i$3122){return SmlPrims.i32_to_w32(i$3122);
},function(x$3126){return basis$0Int32$1.fromLarge$91(basis$0Word32$1.toLargeIntX$94(x$3126));
}]);
pickle$0pickle$1.int32$730 = word32Gen$571(function(v$2782){return v$2782[0] == v$2782[1];
},"int32",[function(x$3130){return basis$0Word32$1.fromLargeInt$98(basis$0Int32$1.toLarge$87(x$3130));
},function(x$3134){return basis$0Int32$1.fromLarge$91(basis$0Word32$1.toLargeIntX$94(x$3134));
}]);
pickle$0pickle$1.char$731 = [0,[function(v$3141){return v$3141[0] == v$3141[1];
},function(a$3144){return function(p$3145){var v$3146 = p$3145[1];
return (v$3146 <= 0)?p$3145:[((SmlPrims.i32_to_w32(a$3144)) + ((p$3145[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$3145[1] - 1)];
};
},function(v$3148){return function(s$3149){return pickle$0bitstream$1.outc$242(v$3148,s$3149);
};
},[25],function(v$3150){var v$3151 = v$3150[0];
var v$3152 = v$3150[1];
var v$3153 = pickle$0bitstream$1.getc$243(v$3151);
return [v$3153[0],[v$3153[1],v$3152]];
}]];
pickle$0pickle$1.bool$732 = [0,[function(v$3164){return v$3164[0] == v$3164[1];
},function(a$3167){return function(p$3168){var v$3169 = p$3168[1];
return (v$3169 <= 0)?p$3168:[((SmlPrims.i32_to_w32(a$3167?1:0)) + ((p$3168[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$3168[1] - 1)];
};
},function(v$3171){return function(s$3172){return pickle$0bitstream$1.outw1$226([v$3171?1:0,s$3172]);
};
},[3],function(v$3173){var v$3174 = v$3173[0];
var v$3175 = v$3173[1];
var v$3176 = pickle$0bitstream$1.getw1$227(v$3174);
var v$3177 = v$3176[0];
var t$5447;
switch (v$3177) { case 0: {t$5447 = false;
 break; }default: {t$5447 = true;
} };
return [t$5447,[v$3176[1],v$3175]];
}]];
var mkTables$743 = function(hash$746,eq$749){var clearRef$750 = [false];
var t$5449 = reset_fun$94;
var t$5448;
var v$4778 = reset_fun$94[0];
t$5448 = (function(x$3184){v$4778(x$3184);
return (clearRef$750[0] = true,0);
});
(t$5449[0] = t$5448,0);
var count$753 = [0];
var t$5451 = reset_fun$94;
var t$5450;
var v$4784 = reset_fun$94[0];
t$5450 = (function(x$3192){v$4784(x$3192);
return (count$753[0] = 0,0);
});
(t$5451[0] = t$5450,0);
var T_to$760;
var v$4790 = exn$PickleExn$93;
var v$3212;
var t$5452;
var v$3213;
var nw$3214 = SmlPrims.i32_to_w32(10);
var fix$5453 = {};
fix$5453.$f = function(i$3216){lab$f: while (true) {if (i$3216 >= nw$3214) {return i$3216;
} else {var t$5454 = (i$3216 << (1 & 31)) & 4294967295;
var i$3216 = t$5454;
continue lab$f;
};
};
};
var f$3215 = fix$5453.$f;
v$3213 = (SmlPrims.chk_ovf_i32(f$3215(32)));
var v$3217 = null;
if ((0 <= v$3213)?(v$3213 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$5452 = (SmlPrims.wordTableInit(v$3213,v$3217));
v$3212 = [t$5452];
T_to$760 = [function(w$5107){return SmlPrims.w32_to_i32_X(w$5107);
},[0],v$4790,function(v$5108){return v$5108[0] == v$5108[1];
},v$3212];
var T_from$761;
var v$4798 = exn$PickleExn$93;
var v$3233;
var t$5455;
var v$3234;
var nw$3235 = SmlPrims.i32_to_w32(10);
var fix$5456 = {};
fix$5456.$f = function(i$3237){lab$f: while (true) {if (i$3237 >= nw$3235) {return i$3237;
} else {var t$5457 = (i$3237 << (1 & 31)) & 4294967295;
var i$3237 = t$5457;
continue lab$f;
};
};
};
var f$3236 = fix$5456.$f;
v$3234 = (SmlPrims.chk_ovf_i32(f$3236(32)));
var v$3238 = null;
if ((0 <= v$3234)?(v$3234 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$5455 = (SmlPrims.wordTableInit(v$3234,v$3238));
v$3233 = [t$5455];
T_from$761 = [function(x$5112){return SmlPrims.w32_to_i32_X(hash$746(x$5112));
},[0],v$4798,eq$749,v$3233];
return [T_from$761,T_to$760,function(v$3263){if (clearRef$750[0]) {var v$3265 = T_to$760[4];
var v$3266 = T_to$760[1];
var a$3267 = v$3265[0];
var v$3268 = SmlPrims.chk_ovf_i32(a$3267.length - 1);
var fix$5458 = {};
fix$5458.$loop = function(i$3270){lab$loop: while (true) {if (i$3270 > v$3268) {return 0;
} else {var v$3271 = null;
var v$3272 = a$3267.length;
if ((0 <= i$3270)?(i$3270 < v$3272):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
(a$3267[i$3270] = v$3271,0);
var t$5459 = SmlPrims.chk_ovf_i32(i$3270 + 1);
var i$3270 = t$5459;
continue lab$loop;
};
};
};
var loop$3269 = fix$5458.$loop;
loop$3269(0);
(v$3266[0] = 0,0);
var v$3274 = T_from$761[4];
var v$3275 = T_from$761[1];
var a$3276 = v$3274[0];
var v$3277 = SmlPrims.chk_ovf_i32(a$3276.length - 1);
var fix$5460 = {};
fix$5460.$loop = function(i$3279){lab$loop: while (true) {if (i$3279 > v$3277) {return 0;
} else {var v$3280 = null;
var v$3281 = a$3276.length;
if ((0 <= i$3279)?(i$3279 < v$3281):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
(a$3276[i$3279] = v$3280,0);
var t$5461 = SmlPrims.chk_ovf_i32(i$3279 + 1);
var i$3279 = t$5461;
continue lab$loop;
};
};
};
var loop$3278 = fix$5460.$loop;
loop$3278(0);
(v$3275[0] = 0,0);
return (clearRef$750[0] = false,0);
} else {return 0;
};
},function(v$3283){return [count$753[0],(count$753[0] = ((count$753[0] + 1) & 4294967295),0)][0];
}];
};
var shareGen0$779 = function(pp$782,pu$785){var v$873 = mkTables$743(function(v$3287){return ((pu$785[1][1](v$3287))([0,12]))[0];
},pu$785[1][0]);
var v$874 = v$873[3];
var v$875 = v$873[1];
var v$876 = v$873[0];
var v$877 = v$873[2];
return [0,[pu$785[1][0],pu$785[1][1],function(v$3313){return function(s$3314){v$877(0);
var v$3315 = (pickle$0Polyhash$1.peek$334(v$876[0],v$876[1],v$876[2],v$876[3],v$876[4]))(v$3313);
switch (v$3315[0]) { case 0: {var v$3317 = v$3315[1];
var s$3318 = pickle$0bitstream$1.outw1$226([0,s$3314]);
return pickle$0bitstream$1.outcw$398(v$3317,s$3318);
 break; }default: {var s$3319 = pickle$0bitstream$1.outw1$226([1,s$3314]);
var loc$3320 = v$874(0);
var res$3321 = (pu$785[1][2](v$3313))(s$3319);
switch (((pickle$0Polyhash$1.peek$334(v$876[0],v$876[1],v$876[2],v$876[3],v$876[4]))(v$3313))[0]) { case 0: {return res$3321;
 break; }default: {(pickle$0Polyhash$1.insert$172(v$876))([v$3313,loc$3320]);
return res$3321;
} };
} };
};
},[7,pu$785[1][3]],function(v$3326){var v$3327 = v$3326[0];
var v$3328 = v$3326[1];
v$877(0);
var v$3329 = pickle$0bitstream$1.getw1$227(v$3327);
var v$3330 = v$3329[0];
var v$3331 = v$3329[1];
if (v$3330 == 0) {var v$3332 = pickle$0bitstream$1.getcw$410(v$3331);
var v$3333 = v$3332[0];
var v$3334 = v$3332[1];
var v$3335 = (pickle$0Polyhash$1.peek$334(v$875[0],v$875[1],v$875[2],v$875[3],v$875[4]))(v$3333);
switch (v$3335[0]) { case 0: {return [v$3335[1],[v$3334,v$3328]];
 break; }default: {var s$3337 = "shareGen0.impossible, loc=" + (basis$0Word32$1.toString$439(v$3333));
var s$3339 = "Pickle." + s$3337;
basis$0General$1.print$163(s$3339 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$3339];
} };
} else {if (v$3330 == 1) {var loc$3342 = v$874(0);
var v$3343 = pu$785[1][4]([v$3331,v$3328]);
var v$3344 = v$3343[0];
var v$3345 = v$3343[1];
var v$3346 = v$3345[0];
var v$3347 = v$3345[1];
switch (((pickle$0Polyhash$1.peek$334(v$875[0],v$875[1],v$875[2],v$875[3],v$875[4]))(loc$3342))[0]) { case 1: {(pickle$0Polyhash$1.insert$172(v$875))([loc$3342,v$3344]);
 break; }default: {0;
} };
return [v$3344,[v$3346,v$3347]];
} else {basis$0General$1.print$163("Pickle.shareGen0.impossible2\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.shareGen0.impossible2"];
};
};
}]];
};
pickle$0pickle$1.shareGen$878 = function(a$881){var t_a$882 = a$881[1][3];
var warn$883 = function(v$885){var t$5467 = basis$0General$1.print$163;
var t$5466;
var t$5465;
var t$5464 = "Pickle warning: shareGen applied to ";
var t$5463;
var fix$5462 = {};
fix$5462.$arg = function(s$3382,t$3383,acc$3384){return [s$3382,["(",fix$5462.$pp(t$3383,[")",acc$3384])]];
};
fix$5462.$pp = function(v$3363,v$3364){switch (v$3363[0]) { case 7: {var v$3365 = v$3363[1];
return fix$5462.$arg("Share",v$3365,v$3364);
 break; }case 18: {return ["i",v$3364];
 break; }case 17: {return ["i31",v$3364];
 break; }case 16: {return ["i32",v$3364];
 break; }case 12: {return ["r",v$3364];
 break; }case 4: {return ["w",v$3364];
 break; }case 3: {return ["w1",v$3364];
 break; }case 0: {return ["w8",v$3364];
 break; }case 2: {return ["w31",v$3364];
 break; }case 1: {return ["w32",v$3364];
 break; }case 25: {return ["c",v$3364];
 break; }case 24: {return ["C0",v$3364];
 break; }case 23: {return ["C1",v$3364];
 break; }case 5: {return ["1",v$3364];
 break; }case 6: {return ["s",v$3364];
 break; }case 13: {var v$3366 = v$3363[1];
var v$3367 = v$3366[0];
var v$3368 = v$3366[1];
return ["(",fix$5462.$pp(v$3367,[",",fix$5462.$pp(v$3368,[")",v$3364])])];
 break; }case 11: {var v$3369 = v$3363[1];
return fix$5462.$arg("ref",v$3369,v$3364);
 break; }case 10: {var v$3370 = v$3363[1];
return fix$5462.$arg("ref0",v$3370,v$3364);
 break; }case 9: {var v$3371 = v$3363[1];
return fix$5462.$arg("ref1",v$3371,v$3364);
 break; }case 22: {var v$3372 = v$3363[1];
return fix$5462.$arg("conv",v$3372,v$3364);
 break; }case 14: {var v$3373 = v$3363[1];
return fix$5462.$arg("option",v$3373,v$3364);
 break; }case 15: {var v$3374 = v$3363[1];
return fix$5462.$arg("list",v$3374,v$3364);
 break; }case 20: {var v$3375 = v$3363[1];
var v$3376 = v$3375[0];
var v$3377 = v$3375[1];
return fix$5462.$arg("deco_" + v$3376,v$3377,v$3364);
 break; }case 8: {var v$3379 = v$3363[1];
return fix$5462.$arg("registerEq",v$3379,v$3364);
 break; }case 21: {var v$3380 = v$3363[1];
return ["data(",[basis$0Int32$1.toString$458(v$3380),[")",v$3364]]];
 break; }default: {var v$3381 = v$3363[1];
return ["enum(",[basis$0Int32$1.toString$458(v$3381),[")",v$3364]]];
} };
};
var arg$3361 = fix$5462.$arg;
var pp$3360 = fix$5462.$pp;
t$5463 = (SmlPrims.concat(pp$3360(t_a$882,null)));
t$5465 = (t$5464 + t$5463);
t$5466 = (t$5465 + "\n");
return t$5467(t$5466);
};
switch (t_a$882[0]) { case 7: {warn$883(0);
 break; }case 11: {warn$883(0);
 break; }case 10: {warn$883(0);
 break; }case 9: {warn$883(0);
 break; }case 21: {warn$883(0);
 break; }default: {var t$5468;
switch (t_a$882[0]) { case 18: {t$5468 = true;
 break; }case 17: {t$5468 = true;
 break; }case 4: {t$5468 = true;
 break; }case 3: {t$5468 = true;
 break; }case 0: {t$5468 = true;
 break; }case 2: {t$5468 = true;
 break; }case 25: {t$5468 = true;
 break; }case 5: {t$5468 = true;
 break; }default: {t$5468 = false;
} };
t$5468?(warn$883(0)):0;
} };
return shareGen0$779(function(v$908){return "no pp";
},a$881);
};
pickle$0pickle$1.string$909;
var x$3389 = [function(v$3428){return v$3428[0] == v$3428[1];
},function(s$3432){return function(p$3448){var v$3449 = p$3448[1];
if (v$3449 <= 0) {return p$3448;
} else {var v$3451 = p$3448[0];
var v$3452 = p$3448[1];
var t$5478;
var sz$3453 = s$3432.length;
var sz$3454 = (sz$3453 > 500)?500:sz$3453;
var fix$5479 = {};
fix$5479.$loop = function(v$3457,v$3458){lab$loop: while (true) {if (v$3457 >= sz$3454) {return v$3458;
} else {var t$5484 = SmlPrims.chk_ovf_i32(v$3457 + 1);
var t$5483;
var t$5482;
var t$5481;
var t$5480;
if ((v$3457 < 0)?true:(v$3457 >= s$3432.length)) {throw CompilerInitial.exn$Subscript$52;
} else {t$5480 = (s$3432.charCodeAt(v$3457));
};
t$5481 = t$5480;
t$5482 = (SmlPrims.i32_to_w32(t$5481));
t$5483 = ((t$5482 + ((v$3458 * 19) & 4294967295)) & 4294967295);
var t$5485 = t$5484;
var t$5486 = t$5483;
var v$3457 = t$5485;
var v$3458 = t$5486;
continue lab$loop;
};
};
};
var loop$3455 = fix$5479.$loop;
t$5478 = (loop$3455(0,v$3451));
return [t$5478,SmlPrims.chk_ovf_i32(v$3452 - 1)];
};
};
},function(st$3462){return function(s$3463){var sz$3464 = st$3462.length;
var s$3465 = pickle$0bitstream$1.outcw$398(SmlPrims.i32_to_w32(sz$3464),s$3463);
var stop$3472 = st$3462.length;
var fix$5473 = {};
fix$5473.$lr = function(v$3475,v$3476){lab$lr: while (true) {if (v$3475 < stop$3472) {var t$5475 = SmlPrims.chk_ovf_i32(v$3475 + 1);
var t$5474;
var v$4827 = st$3462.charCodeAt(v$3475);
t$5474 = (pickle$0bitstream$1.outc$242(v$4827,v$3476));
var t$5476 = t$5475;
var t$5477 = t$5474;
var v$3475 = t$5476;
var v$3476 = t$5477;
continue lab$lr;
} else {return v$3476;
};
};
};
var lr$3473 = fix$5473.$lr;
return lr$3473(0,s$3465);
};
},[6],function(v$3480){var v$3481 = v$3480[0];
var v$3482 = v$3480[1];
var v$3483 = pickle$0bitstream$1.getcw$410(v$3481);
var v$3484 = v$3483[0];
var v$3485 = v$3483[1];
var sz$3486 = SmlPrims.chk_ovf_i32(v$3484);
var fix$5469 = {};
fix$5469.$read = function(v$3489,v$5348,v$5349){lab$read: while (true) {switch (v$3489) { case 0: {return [SmlPrims.implode(basis$0List$1.rev$682(v$5349)),v$5348];
 break; }default: {var v$3494 = pickle$0bitstream$1.getc$243(v$5348);
var v$3495 = v$3494[0];
var v$3496 = v$3494[1];
var t$5470 = SmlPrims.chk_ovf_i32(v$3489 - 1);
var t$5471 = v$3496;
var t$5472 = [v$3495,v$5349];
var v$3489 = t$5470;
var v$5348 = t$5471;
var v$5349 = t$5472;
continue lab$read;
} };
};
};
var read$3487 = fix$5469.$read;
var v$3497 = read$3487(sz$3486,v$3485,null);
return [v$3497[0],[v$3497[1],v$3482]];
}];
var x$5121 = [0,x$3389];
pickle$0pickle$1.string$909 = (pickle$0pickle$1.shareGen$878(x$5121));
pickle$0pickle$1.pairGen0$983 = function(v$1051,v$1052){var hash_pair$988 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
return [0,[function(v$3517){var v$3518 = v$3517[0];
var v$3519 = v$3518[0];
var v$3520 = v$3518[1];
var v$3521 = v$3517[1];
var v$3522 = v$3521[0];
var v$3523 = v$3521[1];
return (v$1051[1][0]([v$3519,v$3522]))?(v$1052[1][0]([v$3520,v$3523])):false;
},function(v$3524){var v$3525 = v$3524[0];
var v$3526 = v$3524[1];
return function(p$3535){var v$3536 = p$3535[1];
if (v$3536 <= 0) {return p$3535;
} else {var p$3538;
var v$3539 = (v$1051[1][1](v$3525))(p$3535);
p$3538 = [(hash_pair$988 + ((v$3539[0] * 19) & 4294967295)) & 4294967295,v$3539[1]];
var f$3540 = v$1052[1][1](v$3526);
var v$3541 = p$3538[1];
if (v$3541 <= 0) {return p$3538;
} else {return f$3540(p$3538);
};
};
};
},function(v$3542){var v$3543 = v$3542[0];
var v$3544 = v$3542[1];
return function(os$3545){var os$3546 = (v$1051[1][2](v$3543))(os$3545);
return (v$1052[1][2](v$3544))(os$3546);
};
},[13,[v$1051[1][3],v$1052[1][3]]],function(is$3549){var v$3550 = v$1051[1][4](is$3549);
var v$3551 = v$3550[0];
var v$3552 = v$3550[1];
var v$3553 = v$1052[1][4](v$3552);
return [[v$3551,v$3553[0]],v$3553[1]];
}]];
};
pickle$0pickle$1.pairGen$1053 = function(pu$1056){return pickle$0pickle$1.shareGen$878(pickle$0pickle$1.pairGen0$983(pu$1056[0],pu$1056[1]));
};
pickle$0pickle$1.refEqGen$1057 = function(eq$1060,v_dummy$1063,pu$1066){var v$1151 = mkTables$743(function(x$3557){var v$5129 = x$3557[0];
return ((pu$1066[1][1](v$5129))([0,12]))[0];
},eq$1060);
var v$1152 = v$1151[3];
var v$1153 = v$1151[1];
var v$1154 = v$1151[0];
var v$1155 = v$1151[2];
var hash_ref$1072 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
return [0,[eq$1060,function(v$3595){var a$3596 = v$3595[0];
return function(p$3597){var v$3598 = p$3597[1];
if (v$3598 <= 0) {return p$3597;
} else {var v$3600 = (pu$1066[1][1](a$3596))(p$3597);
return [(hash_ref$1072 + ((v$3600[0] * 19) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(v$3600[1] - 1)];
};
};
},function(r$3601){var v$3602 = r$3601[0];
return function(s$3603){v$1155(0);
var v$3604 = (pickle$0Polyhash$1.peek$334(v$1154[0],v$1154[1],v$1154[2],v$1154[3],v$1154[4]))(r$3601);
switch (v$3604[0]) { case 0: {var v$3606 = v$3604[1];
var s$3607 = pickle$0bitstream$1.outw1$226([0,s$3603]);
return pickle$0bitstream$1.outcw2$424(v$3606,s$3607);
 break; }default: {var s$3608 = pickle$0bitstream$1.outw1$226([1,s$3603]);
var loc$3609 = v$1152(0);
(pickle$0Polyhash$1.insert$172(v$1154))([r$3601,loc$3609]);
return (pu$1066[1][2](v$3602))(s$3608);
} };
};
},[11,pu$1066[1][3]],function(v$3613){var v$3614 = v$3613[0];
var v$3615 = v$3613[1];
v$1155(0);
var v$3616 = pickle$0bitstream$1.getw1$227(v$3614);
var v$3617 = v$3616[0];
var v$3618 = v$3616[1];
if (v$3617 == 0) {var v$3619 = pickle$0bitstream$1.getcw2$438(v$3618);
var v$3620 = v$3619[0];
var v$3621 = v$3619[1];
var v$3622 = (pickle$0Polyhash$1.peek$334(v$1153[0],v$1153[1],v$1153[2],v$1153[3],v$1153[4]))(v$3620);
switch (v$3622[0]) { case 0: {return [v$3622[1],[v$3621,v$3615]];
 break; }default: {basis$0General$1.print$163("Pickle.ref.impossible\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.ref.impossible"];
} };
} else {var loc$3628 = v$1152(0);
var r$3629 = [v_dummy$1063];
(pickle$0Polyhash$1.insert$172(v$1153))([loc$3628,r$3629]);
var v$3633 = pu$1066[1][4]([v$3618,v$3615]);
var v$3634 = v$3633[0];
var v$3635 = v$3633[1];
var v$3636 = v$3635[0];
var v$3637 = v$3635[1];
(r$3629[0] = v$3634,0);
return [r$3629,[v$3636,v$3637]];
};
}]];
};
pickle$0pickle$1.refGen$1156 = function(v_dummy$1159,pu$1162){return pickle$0pickle$1.refEqGen$1057(function(v$3640){return v$3640[0] == v$3640[1];
},v_dummy$1159,pu$1162);
};
pickle$0pickle$1.ref0EqGen$1163 = function(eq$1166,pu$1169){var hash_ref$1175 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var typ$1186 = [10,pu$1169[1][3]];
var v$1259 = mkTables$743(function(x$3659){var v$5136 = x$3659[0];
return ((pu$1169[1][1](v$5136))([0,12]))[0];
},eq$1166);
var v$1260 = v$1259[3];
var v$1261 = v$1259[1];
var v$1262 = v$1259[0];
var v$1263 = v$1259[2];
return [0,[eq$1166,function(v$3687){var a$3688 = v$3687[0];
return function(p$3689){var v$3690 = p$3689[1];
if (v$3690 <= 0) {return p$3689;
} else {var v$3692 = (pu$1169[1][1](a$3688))(p$3689);
return [(hash_ref$1175 + ((v$3692[0] * 19) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(v$3692[1] - 1)];
};
};
},function(r$3693){var v$3694 = r$3693[0];
return function(s$3695){v$1263(0);
var v$3696 = (pickle$0Polyhash$1.peek$334(v$1262[0],v$1262[1],v$1262[2],v$1262[3],v$1262[4]))(r$3693);
switch (v$3696[0]) { case 0: {var v$3698 = v$3696[1];
var s$3699 = pickle$0bitstream$1.outw1$226([0,s$3695]);
return pickle$0bitstream$1.outcw2$424(v$3698,s$3699);
 break; }default: {var s$3700 = pickle$0bitstream$1.outw1$226([1,s$3695]);
var loc$3701 = v$1260(0);
(pickle$0Polyhash$1.insert$172(v$1262))([r$3693,loc$3701]);
return (pu$1169[1][2](v$3694))(s$3700);
} };
};
},typ$1186,function(v$3705){var v$3706 = v$3705[0];
var v$3707 = v$3705[1];
v$1263(0);
var v$3708 = pickle$0bitstream$1.getw1$227(v$3706);
var v$3709 = v$3708[0];
var v$3710 = v$3708[1];
if (v$3709 == 0) {var v$3711 = pickle$0bitstream$1.getcw2$438(v$3710);
var v$3712 = v$3711[0];
var v$3713 = v$3711[1];
var v$3714 = (pickle$0Polyhash$1.peek$334(v$1261[0],v$1261[1],v$1261[2],v$1261[3],v$1261[4]))(v$3712);
switch (v$3714[0]) { case 0: {return [v$3714[1],[v$3713,v$3707]];
 break; }default: {basis$0General$1.print$163("Pickle.ref.impossible\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.ref.impossible"];
} };
} else {var loc$3720 = v$1260(0);
var v$3721 = pu$1169[1][4]([v$3710,v$3707]);
var v$3722 = v$3721[0];
var v$3723 = v$3721[1];
var v$3724 = v$3723[0];
var v$3725 = v$3723[1];
var r$3726 = [v$3722];
(pickle$0Polyhash$1.insert$172(v$1261))([loc$3720,r$3726]);
return [r$3726,[v$3724,v$3725]];
};
}]];
};
pickle$0pickle$1.ref0Gen$1264 = function(pu$1267){return pickle$0pickle$1.ref0EqGen$1163(function(v$3731){return v$3731[0] == v$3731[1];
},pu$1267);
};
pickle$0pickle$1.ref0ShGen$1268 = function(pu$1271){return pickle$0pickle$1.ref0EqGen$1163(function(v$1279){var v$1280 = v$1279[0];
var v$1281 = v$1279[1];
var b$1276 = v$1281[0];
var a$1277 = v$1280[0];
return pu$1271[1][0]([a$1277,b$1276]);
},pu$1271);
};
pickle$0pickle$1.refOneGen$1282 = function(pu$1285){var hash_ref$1290 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
return [0,[function(v$3777){return v$3777[0] == v$3777[1];
},function(v$3781){var a$3782 = v$3781[0];
return function(p$3783){var v$3784 = p$3783[1];
if (v$3784 <= 0) {return p$3783;
} else {var v$3786 = (pu$1285[1][1](a$3782))(p$3783);
return [(hash_ref$1290 + ((v$3786[0] * 19) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(v$3786[1] - 1)];
};
};
},function(r$3787){var v$3788 = r$3787[0];
return pu$1285[1][2](v$3788);
},[9,pu$1285[1][3]],function(is$3790){var v$3791 = pu$1285[1][4](is$3790);
var v$3792 = v$3791[0];
var v$3793 = v$3791[1];
return [[v$3792],v$3793];
}]];
};
var dataGen0$1328 = function(typ$1331,v$1336){var v$1485 = v$1336[0];
var v$1486 = v$1336[1];
var v$1487 = v$1336[2];
var typ$1337;
switch (typ$1331[0]) { case 0: {typ$1337 = typ$1331[1];
 break; }default: {var t$5490;
var fix$5487 = {};
fix$5487.$acc = function(v$3805,v$3806){lab$acc: while (true) {if (v$3805 == null) {return v$3806;
} else {var v$3807 = v$3805;
var v$3808 = v$3807[1];
var t$5488 = v$3808;
var t$5489 = SmlPrims.chk_ovf_i32(v$3806 + 1);
var v$3805 = t$5488;
var v$3806 = t$5489;
continue lab$acc;
};
};
};
var acc$3804 = fix$5487.$acc;
t$5490 = (acc$3804(v$1487,0));
typ$1337 = [21,t$5490];
} };
var hash_data$1345 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var res$1346 = [[1]];
var ps$1347 = [[0]];
var fs_sz$1348;
var fix$5491 = {};
fix$5491.$acc = function(v$3813,v$3814){lab$acc: while (true) {if (v$3813 == null) {return v$3814;
} else {var v$3815 = v$3813;
var v$3816 = v$3815[1];
var t$5492 = v$3816;
var t$5493 = SmlPrims.chk_ovf_i32(v$3814 + 1);
var v$3813 = t$5492;
var v$3814 = t$5493;
continue lab$acc;
};
};
};
var acc$3812 = fix$5491.$acc;
fs_sz$1348 = (acc$3812(v$1487,0));
var fix$5494 = {};
fix$5494.$eq = function(v$1436,v$1437){var n$1431 = v$1486(v$1436);
return (n$1431 == (v$1486(v$1437)))?((fix$5494.$getPUPI(n$1431))[1][0]([v$1436,v$1437])):false;
};
fix$5494.$p = function(v$1356){if (fs_sz$1348 == 1) {return function(x$1363){return (fix$5494.$getPUPI(0))[1][2](x$1363);
};
} else {if (fs_sz$1348 <= 256) {var bits$1368;
var w$3866 = SmlPrims.i32_to_w32(fs_sz$1348);
var w$3867 = (w$3866 - 1) & 4294967295;
var fix$5498 = {};
fix$5498.$f = function(v$3870,v$3871){lab$f: while (true) {if (v$3870 == 0) {return v$3871;
} else {var t$5499 = v$3870 >>> 1;
var t$5500 = (v$3871 + 1) & 4294967295;
var v$3870 = t$5499;
var v$3871 = t$5500;
continue lab$f;
};
};
};
var f$3868 = fix$5498.$f;
bits$1368 = (f$3868(w$3867,0));
return function(v$1371){return function(s$1374){var i$1375 = v$1486(v$1371);
var s$1376 = pickle$0bitstream$1.outwN$152(bits$1368,[255 & i$1375,s$1374]);
return ((fix$5494.$getPUPI(i$1375))[1][2](v$1371))(s$1376);
};
};
} else {return function(v$1379){return function(s$1382){var i$1383 = v$1486(v$1379);
var s$1384 = pickle$0bitstream$1.outcw2$424(SmlPrims.i32_to_w32(i$1383),s$1382);
return ((fix$5494.$getPUPI(i$1383))[1][2](v$1379))(s$1384);
};
};
};
};
};
fix$5494.$up = function(v$1386){if (fs_sz$1348 == 1) {return function(x$1393){return (fix$5494.$getPUPI(0))[1][4](x$1393);
};
} else {if (fs_sz$1348 <= 256) {var bits$1398;
var w$3851 = SmlPrims.i32_to_w32(fs_sz$1348);
var w$3852 = (w$3851 - 1) & 4294967295;
var fix$5495 = {};
fix$5495.$f = function(v$3855,v$3856){lab$f: while (true) {if (v$3855 == 0) {return v$3856;
} else {var t$5496 = v$3855 >>> 1;
var t$5497 = (v$3856 + 1) & 4294967295;
var v$3855 = t$5496;
var v$3856 = t$5497;
continue lab$f;
};
};
};
var f$3853 = fix$5495.$f;
bits$1398 = (f$3853(w$3852,0));
return function(v$1402){var v$1409 = v$1402[0];
var v$1410 = v$1402[1];
var v$1406 = pickle$0bitstream$1.getwN$190(bits$1398,v$1409);
var v$1407 = v$1406[0];
var v$1408 = v$1406[1];
return (fix$5494.$getPUPI(v$1407))[1][4]([v$1408,v$1410]);
};
} else {return function(v$1414){var v$1421 = v$1414[0];
var v$1422 = v$1414[1];
var v$1418 = pickle$0bitstream$1.getcw2$438(v$1421);
var v$1419 = v$1418[0];
var v$1420 = v$1418[1];
return (fix$5494.$getPUPI(SmlPrims.chk_ovf_i32(v$1419)))[1][4]([v$1420,v$1422]);
};
};
};
};
fix$5494.$getPUP = function(v$1439){var v$1444 = res$1346[0];
switch (v$1444[0]) { case 1: {var pup$1449 = shareGen0$779(function(v$3844){return "Con" + (basis$0Int32$1.toString$458(v$1486(v$3844)));
},[0,[function(v$5350){return fix$5494.$eq(v$5350[0],v$5350[1]);
},function(v$5371){return function(v$5372){return fix$5494.$h(v$5371,v$5372);
};
},fix$5494.$p(0),typ$1337,fix$5494.$up(0)]]);
(res$1346[0] = [0,pup$1449],0);
return pup$1449;
 break; }default: {return v$1444[1];
} };
};
fix$5494.$getPUPI = function(i$1460){var v$1467 = ps$1347[0];
switch (v$1467[0]) { case 0: {(ps$1347[0] = [1],0);
var ps0$1470 = basis$0List$1.map$697(function(f$1473){return f$1473(fix$5494.$getPUP(0));
},v$1487);
var psv$1474 = basis$0Vector$1$3.fromList$230(ps0$1470);
(ps$1347[0] = [2,psv$1474],0);
var v$3832 = psv$1474.length;
if ((0 <= i$1460)?(i$1460 < v$3832):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return psv$1474[i$1460];
 break; }case 2: {var v$1469 = v$1467[1];
var v$3836 = v$1469.length;
if ((0 <= i$1460)?(i$1460 < v$3836):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$1469[i$1460];
 break; }default: {var s$3837 = "dataGen.Caching: " + v$1485;
var s$3838 = "Pickle." + s$3837;
basis$0General$1.print$163(s$3838 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$3838];
} };
};
fix$5494.$h = function(v$1479,p$3818){var v$3819 = p$3818[1];
if (v$3819 <= 0) {return p$3818;
} else {var i$5144 = v$1486(v$1479);
var h_arg$5145 = (fix$5494.$getPUPI(i$5144))[1][1];
var w$5146 = SmlPrims.i32_to_w32(i$5144);
var v$5147;
var v$5148 = (h_arg$5145(v$1479))(p$3818);
v$5147 = [(hash_data$1345 + ((v$5148[0] * 19) & 4294967295)) & 4294967295,v$5148[1]];
return [(w$5146 + ((v$5147[0] * 19) & 4294967295)) & 4294967295,v$5147[1]];
};
};
var eq$1352 = fix$5494.$eq;
var p$1354 = fix$5494.$p;
var up$1353 = fix$5494.$up;
var getPUP$1351 = fix$5494.$getPUP;
var getPUPI$1350 = fix$5494.$getPUPI;
var h$1349 = fix$5494.$h;
return getPUP$1351(0);
};
pickle$0pickle$1.dataGen$1488 = function(a$1491){return dataGen0$1328([1],a$1491);
};
pickle$0pickle$1.data2Gen$1492 = function(v$1685,v$1686,v$1687,v$1688,v$1689,v$1690){var aHashData$1501 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var bHashData$1502 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var aRes$1503 = [[1]];
var bRes$1504 = [[1]];
var aPs$1505 = [[0]];
var bPs$1506 = [[0]];
var fix$5501 = {};
fix$5501.$aEq = function(v$1552,v$1553){var n$1547 = v$1686(v$1552);
return (n$1547 == (v$1686(v$1553)))?((fix$5501.$aGetPUPI(n$1547))[1][0]([v$1552,v$1553])):false;
};
fix$5501.$aH = function(v$1671,p$3955){var v$3956 = p$3955[1];
if (v$3956 <= 0) {return p$3955;
} else {var i$5156 = v$1686(v$1671);
var h_arg$5157 = (fix$5501.$aGetPUPI(i$5156))[1][1];
var w$5158 = SmlPrims.i32_to_w32(i$5156);
var v$5159;
var v$5160 = (h_arg$5157(v$1671))(p$3955);
v$5159 = [(aHashData$1501 + ((v$5160[0] * 19) & 4294967295)) & 4294967295,v$5160[1]];
return [(w$5158 + ((v$5159[0] * 19) & 4294967295)) & 4294967295,v$5159[1]];
};
};
fix$5501.$aP = function(v$1521,s$1524){var i$1525 = v$1686(v$1521);
var s$1526 = pickle$0bitstream$1.outcw$398(SmlPrims.i32_to_w32(i$1525),s$1524);
return ((fix$5501.$aGetPUPI(i$1525))[1][2](v$1521))(s$1526);
};
fix$5501.$aGetPUPI = function(i$1577){var v$1584 = aPs$1505[0];
switch (v$1584[0]) { case 0: {(aPs$1505[0] = [1],0);
var ps0$1587 = basis$0List$1.map$697(function(f$1590){return f$1590([fix$5501.$aGetPUP(0),fix$5501.$bGetPUP(0)]);
},v$1687);
var psv$1591 = basis$0Vector$1$3.fromList$230(ps0$1587);
(aPs$1505[0] = [2,psv$1591],0);
var v$3944 = psv$1591.length;
if ((0 <= i$1577)?(i$1577 < v$3944):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return psv$1591[i$1577];
 break; }case 2: {var v$1586 = v$1584[1];
var v$3948 = v$1586.length;
if ((0 <= i$1577)?(i$1577 < v$3948):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$1586[i$1577];
 break; }default: {var s$3949 = "dataGen2.Caching.a: " + v$1685;
var s$3950 = "Pickle." + s$3949;
basis$0General$1.print$163(s$3950 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$3950];
} };
};
fix$5501.$aUp = function(v$1537,v$1538){var v$1534 = pickle$0bitstream$1.getcw$410(v$1537);
var v$1535 = v$1534[0];
var v$1536 = v$1534[1];
return (fix$5501.$aGetPUPI(SmlPrims.chk_ovf_i32(v$1535)))[1][4]([v$1536,v$1538]);
};
fix$5501.$aGetPUP = function(v$1555){var v$1560 = aRes$1503[0];
switch (v$1560[0]) { case 1: {var typ$1561;
var t$5509;
var fix$5506 = {};
fix$5506.$acc = function(v$3928,v$3929){lab$acc: while (true) {if (v$3928 == null) {return v$3929;
} else {var v$3930 = v$3928;
var v$3931 = v$3930[1];
var t$5507 = v$3931;
var t$5508 = SmlPrims.chk_ovf_i32(v$3929 + 1);
var v$3928 = t$5507;
var v$3929 = t$5508;
continue lab$acc;
};
};
};
var acc$3927 = fix$5506.$acc;
t$5509 = (acc$3927(v$1687,0));
typ$1561 = [21,t$5509];
var pup$1566 = shareGen0$779(function(v$3933){return "Con" + (basis$0Int32$1.toString$458(v$1686(v$3933)));
},[0,[function(v$5353){return fix$5501.$aEq(v$5353[0],v$5353[1]);
},function(v$5377){return function(v$5378){return fix$5501.$aH(v$5377,v$5378);
};
},function(v$5379){return function(v$5380){return fix$5501.$aP(v$5379,v$5380);
};
},typ$1561,function(v$5354){return fix$5501.$aUp(v$5354[0],v$5354[1]);
}]]);
(aRes$1503[0] = [0,pup$1566],0);
return pup$1566;
 break; }default: {return v$1560[1];
} };
};
fix$5501.$bEq = function(v$1627,v$1628){var n$1622 = v$1689(v$1627);
return (n$1622 == (v$1689(v$1628)))?((fix$5501.$bGetPUPI(n$1622))[1][0]([v$1627,v$1628])):false;
};
fix$5501.$bP = function(v$1596,s$1599){var i$1600 = v$1689(v$1596);
var s$1601 = pickle$0bitstream$1.outcw$398(SmlPrims.i32_to_w32(i$1600),s$1599);
return ((fix$5501.$bGetPUPI(i$1600))[1][2](v$1596))(s$1601);
};
fix$5501.$bUp = function(v$1612,v$1613){var v$1609 = pickle$0bitstream$1.getcw$410(v$1612);
var v$1610 = v$1609[0];
var v$1611 = v$1609[1];
return (fix$5501.$bGetPUPI(SmlPrims.chk_ovf_i32(v$1610)))[1][4]([v$1611,v$1613]);
};
fix$5501.$bGetPUP = function(v$1630){var v$1635 = bRes$1504[0];
switch (v$1635[0]) { case 1: {var typ$1636;
var t$5505;
var fix$5502 = {};
fix$5502.$acc = function(v$3911,v$3912){lab$acc: while (true) {if (v$3911 == null) {return v$3912;
} else {var v$3913 = v$3911;
var v$3914 = v$3913[1];
var t$5503 = v$3914;
var t$5504 = SmlPrims.chk_ovf_i32(v$3912 + 1);
var v$3911 = t$5503;
var v$3912 = t$5504;
continue lab$acc;
};
};
};
var acc$3910 = fix$5502.$acc;
t$5505 = (acc$3910(v$1690,0));
typ$1636 = [21,t$5505];
var pup$1641 = shareGen0$779(function(v$3916){return "Con" + (basis$0Int32$1.toString$458(v$1689(v$3916)));
},[0,[function(v$5351){return fix$5501.$bEq(v$5351[0],v$5351[1]);
},function(v$5373){return function(v$5374){return fix$5501.$bH(v$5373,v$5374);
};
},function(v$5375){return function(v$5376){return fix$5501.$bP(v$5375,v$5376);
};
},typ$1636,function(v$5352){return fix$5501.$bUp(v$5352[0],v$5352[1]);
}]]);
(bRes$1504[0] = [0,pup$1641],0);
return pup$1641;
 break; }default: {return v$1635[1];
} };
};
fix$5501.$bGetPUPI = function(i$1652){var v$1659 = bPs$1506[0];
switch (v$1659[0]) { case 0: {(bPs$1506[0] = [1],0);
var ps0$1662 = basis$0List$1.map$697(function(f$1665){return f$1665([fix$5501.$aGetPUP(0),fix$5501.$bGetPUP(0)]);
},v$1690);
var psv$1666 = basis$0Vector$1$3.fromList$230(ps0$1662);
(bPs$1506[0] = [2,psv$1666],0);
var v$3898 = psv$1666.length;
if ((0 <= i$1652)?(i$1652 < v$3898):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return psv$1666[i$1652];
 break; }case 2: {var v$1661 = v$1659[1];
var v$3902 = v$1661.length;
if ((0 <= i$1652)?(i$1652 < v$3902):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$1661[i$1652];
 break; }default: {var s$3903 = "dataGen2.Caching.b: " + v$1688;
var s$3904 = "Pickle." + s$3903;
basis$0General$1.print$163(s$3904 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$3904];
} };
};
fix$5501.$bH = function(v$1679,p$3884){var v$3885 = p$3884[1];
if (v$3885 <= 0) {return p$3884;
} else {var i$5150 = v$1689(v$1679);
var h_arg$5151 = (fix$5501.$bGetPUPI(i$5150))[1][1];
var w$5152 = SmlPrims.i32_to_w32(i$5150);
var v$5153;
var v$5154 = (h_arg$5151(v$1679))(p$3884);
v$5153 = [(bHashData$1502 + ((v$5154[0] * 19) & 4294967295)) & 4294967295,v$5154[1]];
return [(w$5152 + ((v$5153[0] * 19) & 4294967295)) & 4294967295,v$5153[1]];
};
};
var aEq$1516 = fix$5501.$aEq;
var aH$1508 = fix$5501.$aH;
var aP$1518 = fix$5501.$aP;
var aGetPUPI$1514 = fix$5501.$aGetPUPI;
var aUp$1517 = fix$5501.$aUp;
var aGetPUP$1515 = fix$5501.$aGetPUP;
var bEq$1511 = fix$5501.$bEq;
var bP$1513 = fix$5501.$bP;
var bUp$1512 = fix$5501.$bUp;
var bGetPUP$1510 = fix$5501.$bGetPUP;
var bGetPUPI$1509 = fix$5501.$bGetPUPI;
var bH$1507 = fix$5501.$bH;
return [aGetPUP$1515(0),bGetPUP$1510(0)];
};
pickle$0pickle$1.data3Gen$1691 = function(v$1979,v$1980,v$1981,v$1982,v$1983,v$1984,v$1985,v$1986,v$1987){var aHashData$1703 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var bHashData$1704 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var cHashData$1705 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var aRes$1706 = [[1]];
var bRes$1707 = [[1]];
var cRes$1708 = [[1]];
var aPs$1709 = [[0]];
var bPs$1710 = [[0]];
var cPs$1711 = [[0]];
var fix$5510 = {};
fix$5510.$bEq = function(v$1838,v$1839){var n$1833 = v$1983(v$1838);
return (n$1833 == (v$1983(v$1839)))?((fix$5510.$bGetPUPI(n$1833))[1][0]([v$1838,v$1839])):false;
};
fix$5510.$bH = function(v$1965,p$4087){var v$4088 = p$4087[1];
if (v$4088 <= 0) {return p$4087;
} else {var i$5178 = v$1983(v$1965);
var h_arg$5179 = (fix$5510.$bGetPUPI(i$5178))[1][1];
var w$5180 = SmlPrims.i32_to_w32(i$5178);
var v$5181;
var v$5182 = (h_arg$5179(v$1965))(p$4087);
v$5181 = [(bHashData$1704 + ((v$5182[0] * 19) & 4294967295)) & 4294967295,v$5182[1]];
return [(w$5180 + ((v$5181[0] * 19) & 4294967295)) & 4294967295,v$5181[1]];
};
};
fix$5510.$bP = function(v$1807,s$1810){var i$1811 = v$1983(v$1807);
var s$1812 = pickle$0bitstream$1.outcw$398(SmlPrims.i32_to_w32(i$1811),s$1810);
return ((fix$5510.$bGetPUPI(i$1811))[1][2](v$1807))(s$1812);
};
fix$5510.$aEq = function(v$1763,v$1764){var n$1758 = v$1980(v$1763);
return (n$1758 == (v$1980(v$1764)))?((fix$5510.$aGetPUPI(n$1758))[1][0]([v$1763,v$1764])):false;
};
fix$5510.$aH = function(v$1957,p$4074){var v$4075 = p$4074[1];
if (v$4075 <= 0) {return p$4074;
} else {var i$5172 = v$1980(v$1957);
var h_arg$5173 = (fix$5510.$aGetPUPI(i$5172))[1][1];
var w$5174 = SmlPrims.i32_to_w32(i$5172);
var v$5175;
var v$5176 = (h_arg$5173(v$1957))(p$4074);
v$5175 = [(aHashData$1703 + ((v$5176[0] * 19) & 4294967295)) & 4294967295,v$5176[1]];
return [(w$5174 + ((v$5175[0] * 19) & 4294967295)) & 4294967295,v$5175[1]];
};
};
fix$5510.$aP = function(v$1732,s$1735){var i$1736 = v$1980(v$1732);
var s$1737 = pickle$0bitstream$1.outcw$398(SmlPrims.i32_to_w32(i$1736),s$1735);
return ((fix$5510.$aGetPUPI(i$1736))[1][2](v$1732))(s$1737);
};
fix$5510.$aGetPUPI = function(i$1788){var v$1795 = aPs$1709[0];
switch (v$1795[0]) { case 0: {(aPs$1709[0] = [1],0);
var ps0$1798 = basis$0List$1.map$697(function(f$1801){return f$1801([fix$5510.$aGetPUP(0),fix$5510.$bGetPUP(0),fix$5510.$cGetPUP(0)]);
},v$1981);
var psv$1802 = basis$0Vector$1$3.fromList$230(ps0$1798);
(aPs$1709[0] = [2,psv$1802],0);
var v$4063 = psv$1802.length;
if ((0 <= i$1788)?(i$1788 < v$4063):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return psv$1802[i$1788];
 break; }case 2: {var v$1797 = v$1795[1];
var v$4067 = v$1797.length;
if ((0 <= i$1788)?(i$1788 < v$4067):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$1797[i$1788];
 break; }default: {var s$4068 = "dataGen3.Caching.a: " + v$1979;
var s$4069 = "Pickle." + s$4068;
basis$0General$1.print$163(s$4069 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$4069];
} };
};
fix$5510.$aUp = function(v$1748,v$1749){var v$1745 = pickle$0bitstream$1.getcw$410(v$1748);
var v$1746 = v$1745[0];
var v$1747 = v$1745[1];
return (fix$5510.$aGetPUPI(SmlPrims.chk_ovf_i32(v$1746)))[1][4]([v$1747,v$1749]);
};
fix$5510.$aGetPUP = function(v$1766){var v$1771 = aRes$1706[0];
switch (v$1771[0]) { case 1: {var typ$1772;
var t$5522;
var fix$5519 = {};
fix$5519.$acc = function(v$4047,v$4048){lab$acc: while (true) {if (v$4047 == null) {return v$4048;
} else {var v$4049 = v$4047;
var v$4050 = v$4049[1];
var t$5520 = v$4050;
var t$5521 = SmlPrims.chk_ovf_i32(v$4048 + 1);
var v$4047 = t$5520;
var v$4048 = t$5521;
continue lab$acc;
};
};
};
var acc$4046 = fix$5519.$acc;
t$5522 = (acc$4046(v$1981,0));
typ$1772 = [21,t$5522];
var pup$1777 = shareGen0$779(function(v$4052){return "Con" + (basis$0Int32$1.toString$458(v$1980(v$4052)));
},[0,[function(v$5359){return fix$5510.$aEq(v$5359[0],v$5359[1]);
},function(v$5389){return function(v$5390){return fix$5510.$aH(v$5389,v$5390);
};
},function(v$5391){return function(v$5392){return fix$5510.$aP(v$5391,v$5392);
};
},typ$1772,function(v$5360){return fix$5510.$aUp(v$5360[0],v$5360[1]);
}]]);
(aRes$1706[0] = [0,pup$1777],0);
return pup$1777;
 break; }default: {return v$1771[1];
} };
};
fix$5510.$bGetPUPI = function(i$1863){var v$1870 = bPs$1710[0];
switch (v$1870[0]) { case 0: {(bPs$1710[0] = [1],0);
var ps0$1873 = basis$0List$1.map$697(function(f$1876){return f$1876([fix$5510.$aGetPUP(0),fix$5510.$bGetPUP(0),fix$5510.$cGetPUP(0)]);
},v$1984);
var psv$1877 = basis$0Vector$1$3.fromList$230(ps0$1873);
(bPs$1710[0] = [2,psv$1877],0);
var v$4034 = psv$1877.length;
if ((0 <= i$1863)?(i$1863 < v$4034):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return psv$1877[i$1863];
 break; }case 2: {var v$1872 = v$1870[1];
var v$4038 = v$1872.length;
if ((0 <= i$1863)?(i$1863 < v$4038):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$1872[i$1863];
 break; }default: {var s$4039 = "dataGen3.Caching.b: " + v$1982;
var s$4040 = "Pickle." + s$4039;
basis$0General$1.print$163(s$4040 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$4040];
} };
};
fix$5510.$bUp = function(v$1823,v$1824){var v$1820 = pickle$0bitstream$1.getcw$410(v$1823);
var v$1821 = v$1820[0];
var v$1822 = v$1820[1];
return (fix$5510.$bGetPUPI(SmlPrims.chk_ovf_i32(v$1821)))[1][4]([v$1822,v$1824]);
};
fix$5510.$bGetPUP = function(v$1841){var v$1846 = bRes$1707[0];
switch (v$1846[0]) { case 1: {var typ$1847;
var t$5518;
var fix$5515 = {};
fix$5515.$acc = function(v$4018,v$4019){lab$acc: while (true) {if (v$4018 == null) {return v$4019;
} else {var v$4020 = v$4018;
var v$4021 = v$4020[1];
var t$5516 = v$4021;
var t$5517 = SmlPrims.chk_ovf_i32(v$4019 + 1);
var v$4018 = t$5516;
var v$4019 = t$5517;
continue lab$acc;
};
};
};
var acc$4017 = fix$5515.$acc;
t$5518 = (acc$4017(v$1984,0));
typ$1847 = [21,t$5518];
var pup$1852 = shareGen0$779(function(v$4023){return "Con" + (basis$0Int32$1.toString$458(v$1983(v$4023)));
},[0,[function(v$5357){return fix$5510.$bEq(v$5357[0],v$5357[1]);
},function(v$5385){return function(v$5386){return fix$5510.$bH(v$5385,v$5386);
};
},function(v$5387){return function(v$5388){return fix$5510.$bP(v$5387,v$5388);
};
},typ$1847,function(v$5358){return fix$5510.$bUp(v$5358[0],v$5358[1]);
}]]);
(bRes$1707[0] = [0,pup$1852],0);
return pup$1852;
 break; }default: {return v$1846[1];
} };
};
fix$5510.$cEq = function(v$1913,v$1914){var n$1908 = v$1986(v$1913);
return (n$1908 == (v$1986(v$1914)))?((fix$5510.$cGetPUPI(n$1908))[1][0]([v$1913,v$1914])):false;
};
fix$5510.$cP = function(v$1882,s$1885){var i$1886 = v$1986(v$1882);
var s$1887 = pickle$0bitstream$1.outcw$398(SmlPrims.i32_to_w32(i$1886),s$1885);
return ((fix$5510.$cGetPUPI(i$1886))[1][2](v$1882))(s$1887);
};
fix$5510.$cUp = function(v$1898,v$1899){var v$1895 = pickle$0bitstream$1.getcw$410(v$1898);
var v$1896 = v$1895[0];
var v$1897 = v$1895[1];
return (fix$5510.$cGetPUPI(SmlPrims.chk_ovf_i32(v$1896)))[1][4]([v$1897,v$1899]);
};
fix$5510.$cGetPUP = function(v$1916){var v$1921 = cRes$1708[0];
switch (v$1921[0]) { case 1: {var typ$1922;
var t$5514;
var fix$5511 = {};
fix$5511.$acc = function(v$4001,v$4002){lab$acc: while (true) {if (v$4001 == null) {return v$4002;
} else {var v$4003 = v$4001;
var v$4004 = v$4003[1];
var t$5512 = v$4004;
var t$5513 = SmlPrims.chk_ovf_i32(v$4002 + 1);
var v$4001 = t$5512;
var v$4002 = t$5513;
continue lab$acc;
};
};
};
var acc$4000 = fix$5511.$acc;
t$5514 = (acc$4000(v$1987,0));
typ$1922 = [21,t$5514];
var pup$1927 = shareGen0$779(function(v$4006){return "Con" + (basis$0Int32$1.toString$458(v$1986(v$4006)));
},[0,[function(v$5355){return fix$5510.$cEq(v$5355[0],v$5355[1]);
},function(v$5381){return function(v$5382){return fix$5510.$cH(v$5381,v$5382);
};
},function(v$5383){return function(v$5384){return fix$5510.$cP(v$5383,v$5384);
};
},typ$1922,function(v$5356){return fix$5510.$cUp(v$5356[0],v$5356[1]);
}]]);
(cRes$1708[0] = [0,pup$1927],0);
return pup$1927;
 break; }default: {return v$1921[1];
} };
};
fix$5510.$cGetPUPI = function(i$1938){var v$1945 = cPs$1711[0];
switch (v$1945[0]) { case 0: {(cPs$1711[0] = [1],0);
var ps0$1948 = basis$0List$1.map$697(function(f$1951){return f$1951([fix$5510.$aGetPUP(0),fix$5510.$bGetPUP(0),fix$5510.$cGetPUP(0)]);
},v$1987);
var psv$1952 = basis$0Vector$1$3.fromList$230(ps0$1948);
(cPs$1711[0] = [2,psv$1952],0);
var v$3988 = psv$1952.length;
if ((0 <= i$1938)?(i$1938 < v$3988):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return psv$1952[i$1938];
 break; }case 2: {var v$1947 = v$1945[1];
var v$3992 = v$1947.length;
if ((0 <= i$1938)?(i$1938 < v$3992):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$1947[i$1938];
 break; }default: {var s$3993 = "dataGen3.Caching.c: " + v$1985;
var s$3994 = "Pickle." + s$3993;
basis$0General$1.print$163(s$3994 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$3994];
} };
};
fix$5510.$cH = function(v$1973,p$3974){var v$3975 = p$3974[1];
if (v$3975 <= 0) {return p$3974;
} else {var i$5166 = v$1986(v$1973);
var h_arg$5167 = (fix$5510.$cGetPUPI(i$5166))[1][1];
var w$5168 = SmlPrims.i32_to_w32(i$5166);
var v$5169;
var v$5170 = (h_arg$5167(v$1973))(p$3974);
v$5169 = [(cHashData$1705 + ((v$5170[0] * 19) & 4294967295)) & 4294967295,v$5170[1]];
return [(w$5168 + ((v$5169[0] * 19) & 4294967295)) & 4294967295,v$5169[1]];
};
};
var bEq$1722 = fix$5510.$bEq;
var bH$1713 = fix$5510.$bH;
var bP$1724 = fix$5510.$bP;
var aEq$1727 = fix$5510.$aEq;
var aH$1714 = fix$5510.$aH;
var aP$1729 = fix$5510.$aP;
var aGetPUPI$1725 = fix$5510.$aGetPUPI;
var aUp$1728 = fix$5510.$aUp;
var aGetPUP$1726 = fix$5510.$aGetPUP;
var bGetPUPI$1720 = fix$5510.$bGetPUPI;
var bUp$1723 = fix$5510.$bUp;
var bGetPUP$1721 = fix$5510.$bGetPUP;
var cEq$1717 = fix$5510.$cEq;
var cP$1719 = fix$5510.$cP;
var cUp$1718 = fix$5510.$cUp;
var cGetPUP$1716 = fix$5510.$cGetPUP;
var cGetPUPI$1715 = fix$5510.$cGetPUPI;
var cH$1712 = fix$5510.$cH;
return [aGetPUP$1726(0),bGetPUP$1721(0),cGetPUP$1716(0)];
};
pickle$0pickle$1.con0$1988 = function(b$1991,v$1993){return [0,[function(v$4099){return true;
},function(v$4100){return function(p$4101){return p$4101;
};
},function(v$4102){return function(s$4103){return s$4103;
};
},[24],function(is$4104){return [b$1991,is$4104];
}]];
};
pickle$0pickle$1.con1$2014 = function(con$2017,decon$2020,pu$2023){return [0,[function(v$4112){var v$4113 = v$4112[0];
var v$4114 = v$4112[1];
return pu$2023[1][0]([decon$2020(v$4113),decon$2020(v$4114)]);
},function(b$4115){return function(p$4118){var v$4119 = p$4118[1];
return (v$4119 <= 0)?p$4118:((pu$2023[1][1](decon$2020(b$4115)))(p$4118));
};
},function(b$4121){return pu$2023[1][2](decon$2020(b$4121));
},[23],function(is$4122){var v$4123 = pu$2023[1][4](is$4122);
var v$4124 = v$4123[0];
var v$4125 = v$4123[1];
return [con$2017(v$4124),v$4125];
}]];
};
pickle$0pickle$1.newHash$2053 = function(f$2056,pu$2059){return [0,[pu$2059[1][0],function(x$4131){var x$5216 = f$2056(x$4131);
var x$5217 = SmlPrims.i32_to_w32(x$5216);
return function(p$5218){var v$5219 = p$5218[1];
return (v$5219 <= 0)?p$5218:[(x$5217 + ((p$5218[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$5218[1] - 1)];
};
},pu$2059[1][2],pu$2059[1][3],pu$2059[1][4]]];
};
pickle$0pickle$1.maybeNewHash$2065 = function(f$2068,pu$2071){return [0,[pu$2071[1][0],function(a$4158){return function(p$4165){var v$4166 = p$4165[1];
if (v$4166 <= 0) {return p$4165;
} else {var v$4168 = f$2068(a$4158);
switch (v$4168[0]) { case 0: {return [((SmlPrims.i32_to_w32(v$4168[1])) + ((p$4165[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$4165[1] - 1)];
 break; }default: {return (pu$2071[1][1](a$4158))(p$4165);
} };
};
};
},pu$2071[1][2],pu$2071[1][3],pu$2071[1][4]]];
};
pickle$0pickle$1.combHash$2090 = function(f$2093,pu$2096){return [0,[pu$2096[1][0],function(a$4183){return function(p$4192){var v$4193 = p$4192[1];
if (v$4193 <= 0) {return p$4192;
} else {var p$4195 = [((SmlPrims.i32_to_w32(f$2093(a$4183))) + ((p$4192[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$4192[1] - 1)];
var f$4196 = pu$2096[1][1](a$4183);
var v$4197 = p$4195[1];
if (v$4197 <= 0) {return p$4195;
} else {return f$4196(p$4195);
};
};
};
},pu$2096[1][2],pu$2096[1][3],pu$2096[1][4]]];
};
pickle$0pickle$1.listGen$2109 = function(pu_a$2112){var x$4202;
var f_nil$2121;
var b$4218 = null;
f_nil$2121 = (function(v$4219){return [0,[function(v$4220){return true;
},function(v$4221){return function(p$4222){return p$4222;
};
},function(v$4223){return function(s$4224){return s$4224;
};
},[24],function(is$4225){return [b$4218,is$4225];
}]];
});
x$4202 = (dataGen0$1328([0,[15,pu_a$2112[1][3]]],["list",function(v$4231){return (v$4231 == null)?0:1;
},[f_nil$2121,[function(pu$4232){var pu$5244 = pickle$0pickle$1.pairGen0$983(pu_a$2112,pu$4232);
return [0,[function(v$5245){var v$5246 = v$5245[0];
var v$5247 = v$5245[1];
var t$5531 = pu$5244[1][0];
var t$5530;
var t$5529;
if (v$5246 == null) {basis$0General$1.print$163("Pickle.cons\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.cons"];
} else {t$5529 = v$5246;
};
var t$5528;
if (v$5247 == null) {basis$0General$1.print$163("Pickle.cons\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.cons"];
} else {t$5528 = v$5247;
};
t$5530 = [t$5529,t$5528];
return t$5531(t$5530);
},function(b$5248){return function(p$5249){var v$5250 = p$5249[1];
if (v$5250 <= 0) {return p$5249;
} else {var t$5527;
var t$5526 = pu$5244[1][1];
var t$5525;
if (b$5248 == null) {basis$0General$1.print$163("Pickle.cons\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.cons"];
} else {t$5525 = b$5248;
};
t$5527 = (t$5526(t$5525));
return t$5527(p$5249);
};
};
},function(b$5251){var t$5524 = pu$5244[1][2];
var t$5523;
if (b$5251 == null) {basis$0General$1.print$163("Pickle.cons\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.cons"];
} else {t$5523 = b$5251;
};
return t$5524(t$5523);
},[23],function(is$5252){var v$5253 = pu$5244[1][4](is$5252);
return [v$5253[0],v$5253[1]];
}]];
},null]]]));
return [0,[x$4202[1][0],function(a$5258){return function(p$5259){var v$5260 = p$5259[1];
if (v$5260 <= 0) {return p$5259;
} else {var p$5261;
var t$5537;
var t$5536;
var t$5535;
var fix$5532 = {};
fix$5532.$acc = function(v$5263,v$5264){lab$acc: while (true) {if (v$5263 == null) {return v$5264;
} else {var v$5265 = v$5263;
var v$5266 = v$5265[1];
var t$5533 = v$5266;
var t$5534 = SmlPrims.chk_ovf_i32(v$5264 + 1);
var v$5263 = t$5533;
var v$5264 = t$5534;
continue lab$acc;
};
};
};
var acc$5262 = fix$5532.$acc;
t$5535 = (acc$5262(a$5258,0));
t$5536 = (SmlPrims.i32_to_w32(t$5535));
t$5537 = ((t$5536 + ((p$5259[0] * 65599) & 4294967295)) & 4294967295);
p$5261 = [t$5537,SmlPrims.chk_ovf_i32(p$5259[1] - 1)];
var f$5267 = x$4202[1][1](a$5258);
var v$5268 = p$5261[1];
if (v$5268 <= 0) {return p$5261;
} else {return f$5267(p$5261);
};
};
};
},x$4202[1][2],x$4202[1][3],x$4202[1][4]]];
};
pickle$0pickle$1.optionGen$2134 = function(pu_a$2137){var fun_NONE$2146;
var b$4239 = [1];
fun_NONE$2146 = (function(v$4240){return [0,[function(v$4241){return true;
},function(v$4242){return function(p$4243){return p$4243;
};
},function(v$4244){return function(s$4245){return s$4245;
};
},[24],function(is$4246){return [b$4239,is$4246];
}]];
});
return dataGen0$1328([0,[14,pu_a$2137[1][3]]],["option",function(v$4252){switch (v$4252[0]) { case 1: {return 0;
 break; }default: {return 1;
} };
},[fun_NONE$2146,[function(v$4253){return [0,[function(v$5274){var v$5275 = v$5274[0];
var v$5276 = v$5274[1];
var t$5546 = pu_a$2137[1][0];
var t$5545;
var t$5544;
switch (v$5275[0]) { case 0: {t$5544 = v$5275[1];
 break; }default: {basis$0General$1.print$163("Pickle.option\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.option"];
} };
var t$5543;
switch (v$5276[0]) { case 0: {t$5543 = v$5276[1];
 break; }default: {basis$0General$1.print$163("Pickle.option\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.option"];
} };
t$5545 = [t$5544,t$5543];
return t$5546(t$5545);
},function(b$5277){return function(p$5278){var v$5279 = p$5278[1];
if (v$5279 <= 0) {return p$5278;
} else {var t$5542;
var t$5541 = pu_a$2137[1][1];
var t$5540;
switch (b$5277[0]) { case 0: {t$5540 = b$5277[1];
 break; }default: {basis$0General$1.print$163("Pickle.option\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.option"];
} };
t$5542 = (t$5541(t$5540));
return t$5542(p$5278);
};
};
},function(b$5280){var t$5539 = pu_a$2137[1][2];
var t$5538;
switch (b$5280[0]) { case 0: {t$5538 = b$5280[1];
 break; }default: {basis$0General$1.print$163("Pickle.option\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.option"];
} };
return t$5539(t$5538);
},[23],function(is$5281){var v$5282 = pu_a$2137[1][4](is$5281);
return [[0,v$5282[0]],v$5282[1]];
}]];
},null]]]);
};
pickle$0pickle$1.enumGen$2158 = function(v$2790,v$2162){var v$2261 = v$2162[1];
var v$2248;
var fix$5547 = {};
fix$5547.$foldl = function(v$4270,v$4271){lab$foldl: while (true) {if (v$4271 == null) {return v$4270;
} else {var v$4272 = v$4271;
var v$4273 = v$4272[0];
var v$4274 = v$4272[1];
var t$5548;
var v$4279 = v$4270[0];
var v$4280 = v$4270[1];
t$5548 = [[[v$4273,SmlPrims.i32_to_w32(v$4280)],v$4279],SmlPrims.chk_ovf_i32(v$4280 + 1)];
var t$5549 = t$5548;
var t$5550 = v$4274;
var v$4270 = t$5549;
var v$4271 = t$5550;
continue lab$foldl;
};
};
};
var foldl$4269 = fix$5547.$foldl;
var v$5393 = [null,0];
v$2248 = (foldl$4269(v$5393,v$2261));
var v$2249 = v$2248[0];
var hash_enum$2218 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var t$5576;
var t$5575 = function(v$4390){var v$4391 = v$4390[0];
var v$4392 = v$4390[1];
return v$2790([v$4391,v$4392]);
};
var t$5574 = function(v$4393){return function(p$4419){var v$4420 = p$4419[1];
if (v$4420 <= 0) {return p$4419;
} else {var t$5573;
var t$5572 = hash_enum$2218;
var t$5571;
var t$5570;
var t$5569;
var fix$5566 = {};
fix$5566.$lookupw = function(v$4424,v$4425){lab$lookupw: while (true) {if (v$4424 == null) {basis$0General$1.print$163("Pickle.enumGen.unknown constructor\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.enumGen.unknown constructor"];
} else {var v$4431 = v$4424;
var v$4432 = v$4431[0];
var v$4433 = v$4432[0];
var v$4434 = v$4432[1];
var v$4435 = v$4431[1];
if (v$2790([v$4433,v$4425])) {return v$4434;
} else {var t$5567 = v$4435;
var t$5568 = v$4425;
var v$4424 = t$5567;
var v$4425 = t$5568;
continue lab$lookupw;
};
};
};
};
var lookupw$4423 = fix$5566.$lookupw;
t$5569 = (lookupw$4423(v$2249,v$4393));
t$5570 = ((t$5569 + ((p$4419[0] * 19) & 4294967295)) & 4294967295);
t$5571 = ((t$5570 * 19) & 4294967295);
t$5573 = ((t$5572 + t$5571) & 4294967295);
return [t$5573,p$4419[1]];
};
};
};
var t$5565 = function(v$4440){return function(s$4441){var t$5564 = pickle$0bitstream$1.outcw$398;
var t$5563;
var fix$5560 = {};
fix$5560.$lookupw = function(v$4443,v$4444){lab$lookupw: while (true) {if (v$4443 == null) {basis$0General$1.print$163("Pickle.enumGen.unknown constructor\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.enumGen.unknown constructor"];
} else {var v$4451 = v$4443;
var v$4452 = v$4451[0];
var v$4453 = v$4452[0];
var v$4454 = v$4452[1];
var v$4455 = v$4451[1];
if (v$2790([v$4453,v$4444])) {return v$4454;
} else {var t$5561 = v$4455;
var t$5562 = v$4444;
var v$4443 = t$5561;
var v$4444 = t$5562;
continue lab$lookupw;
};
};
};
};
var lookupw$4442 = fix$5560.$lookupw;
t$5563 = (lookupw$4442(v$2249,v$4440));
return t$5564(t$5563,s$4441);
};
};
var t$5559;
var t$5558;
var fix$5555 = {};
fix$5555.$acc = function(v$4463,v$4464){lab$acc: while (true) {if (v$4463 == null) {return v$4464;
} else {var v$4465 = v$4463;
var v$4466 = v$4465[1];
var t$5556 = v$4466;
var t$5557 = SmlPrims.chk_ovf_i32(v$4464 + 1);
var v$4463 = t$5556;
var v$4464 = t$5557;
continue lab$acc;
};
};
};
var acc$4462 = fix$5555.$acc;
t$5558 = (acc$4462(v$2261,0));
t$5559 = [19,t$5558];
t$5576 = [t$5575,t$5574,t$5565,t$5559,function(v$4467){var v$4468 = v$4467[0];
var v$4469 = v$4467[1];
var v$4470 = pickle$0bitstream$1.getcw$410(v$4468);
var v$4471 = v$4470[0];
var v$4472 = v$4470[1];
var t$5554;
var fix$5551 = {};
fix$5551.$lookupv = function(v$4474,v$4475){lab$lookupv: while (true) {if (v$4474 == null) {basis$0General$1.print$163("Pickle.enumGen.unknown constructor tag\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.enumGen.unknown constructor tag"];
} else {var v$4482 = v$4474;
var v$4483 = v$4482[0];
var v$4484 = v$4483[0];
var v$4485 = v$4483[1];
var v$4486 = v$4482[1];
if (v$4485 == v$4475) {return v$4484;
} else {var t$5552 = v$4486;
var t$5553 = v$4475;
var v$4474 = t$5552;
var v$4475 = t$5553;
continue lab$lookupv;
};
};
};
};
var lookupv$4473 = fix$5551.$lookupv;
t$5554 = (lookupv$4473(v$2249,v$4471));
return [t$5554,[v$4472,v$4469]];
}];
return [0,t$5576];
};
pickle$0pickle$1.pickle$2262 = function(pu$2265,v$2268){reset_fun$94[0](0);
var os$2269;
var t$5577;
var t$4496 = Array(1024);
var fix$5578 = {};
fix$5578.$loop = function(j$4498){lab$loop: while (true) {if (j$4498 < 1024) {(t$4496[j$4498] = 0,0);
var t$5579 = SmlPrims.chk_ovf_i32(j$4498 + 1);
var j$4498 = t$5579;
continue lab$loop;
} else {return 0;
};
};
};
var loop$4497 = fix$5578.$loop;
loop$4497(0);
t$5577 = t$4496;
os$2269 = [t$5577,0];
var os$2270 = (pu$2265[1][2](v$2268))(os$2269);
return pickle$0bitstream$1.toString$495(os$2270[0],os$2270[1]);
};
pickle$0pickle$1.unpickle$2271 = function(pu$2274,s$2277){reset_fun$94[0](0);
var t$5587;
var t$5586 = pu$2274[1][4];
var t$5585;
var t$5584 = [s$2277,0];
var t$5580;
var v$5291 = exn$PickleExn$93;
var v$5292;
var t$5581;
var v$5293;
var nw$5294 = SmlPrims.i32_to_w32(10);
var fix$5582 = {};
fix$5582.$f = function(i$5296){lab$f: while (true) {if (i$5296 >= nw$5294) {return i$5296;
} else {var t$5583 = (i$5296 << (1 & 31)) & 4294967295;
var i$5296 = t$5583;
continue lab$f;
};
};
};
var f$5295 = fix$5582.$f;
v$5293 = (SmlPrims.chk_ovf_i32(f$5295(32)));
var v$5297 = null;
if ((0 <= v$5293)?(v$5293 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$5581 = (SmlPrims.wordTableInit(v$5293,v$5297));
v$5292 = [t$5581];
t$5580 = [function(x$5409){return SmlPrims.w32_to_i32_X(pickle$0eqhashdyn2$1.hash$130(12,x$5409));
},[0],v$5291,function(v$5361){return pickle$0eqhashdyn2$1.eq$119(v$5361[0],v$5361[1]);
},v$5292];
t$5585 = [t$5584,t$5580];
t$5587 = (t$5586(t$5585));
return t$5587[0];
};
pickle$0pickle$1.unpickle$$2282 = function(pu$2285,hce$2288,s$2291){reset_fun$94[0](0);
var v$2295 = pu$2285[1][4]([[s$2291,0],hce$2288]);
return [v$2295[0],v$2295[1][1]];
};
pickle$0pickle$1.convert0$2299 = function(v$2340,v$2341){return function(pu$2306){var hash_conv$2307 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
return [0,[function(v$4521){var v$4522 = v$4521[0];
var v$4523 = v$4521[1];
return pu$2306[1][0]([v$2341(v$4522),v$2341(v$4523)]);
},function(v$4524){return function(p$4533){var v$4534 = p$4533[1];
if (v$4534 <= 0) {return p$4533;
} else {var v$4536;
var t$5588;
var v$5029 = pu$2306[1][1];
t$5588 = (v$5029(v$2341(v$4524)));
v$4536 = (t$5588(p$4533));
return [(hash_conv$2307 + ((v$4536[0] * 19) & 4294967295)) & 4294967295,v$4536[1]];
};
};
},function(v$4540){return function(s$4541){return (pu$2306[1][2](v$2341(v$4540)))(s$4541);
};
},[22,pu$2306[1][3]],function(is$4543){var v$4544 = pu$2306[1][4](is$4543);
var v$4545 = v$4544[0];
var v$4546 = v$4544[1];
return [v$2340(v$4545),v$4546];
}]];
};
};
pickle$0pickle$1.convert$2342 = function(a$2345,b$2348){return pickle$0pickle$1.shareGen$878((pickle$0pickle$1.convert0$2299(a$2345[0],a$2345[1]))(b$2348));
};
pickle$0pickle$1.tup3Gen0$2349 = function(v$2374,v$2375,v$2376){return (pickle$0pickle$1.convert0$2299(function(v$4547){var v$4548 = v$4547[0];
var v$4549 = v$4547[1];
return [v$4548,v$4549[0],v$4549[1]];
},function(v$4550){return [v$4550[0],[v$4550[1],v$4550[2]]];
}))(pickle$0pickle$1.pairGen0$983(v$2374,pickle$0pickle$1.pairGen0$983(v$2375,v$2376)));
};
pickle$0pickle$1.tup4Gen0$2377 = function(v$2408,v$2409,v$2410,v$2411){return (pickle$0pickle$1.convert0$2299(function(v$4551){var v$4552 = v$4551[0];
var v$4553 = v$4552[0];
var v$4554 = v$4552[1];
var v$4555 = v$4551[1];
return [v$4553,v$4554,v$4555[0],v$4555[1]];
},function(v$4556){return [[v$4556[0],v$4556[1]],[v$4556[2],v$4556[3]]];
}))(pickle$0pickle$1.pairGen0$983(pickle$0pickle$1.pairGen0$983(v$2408,v$2409),pickle$0pickle$1.pairGen0$983(v$2410,v$2411)));
};
pickle$0pickle$1.tup3Gen$2412 = function(v$5362,v$5363,v$5364){return pickle$0pickle$1.shareGen$878((pickle$0pickle$1.convert0$2299(function(v$4561){var v$4562 = v$4561[0];
var v$4563 = v$4561[1];
return [v$4562,v$4563[0],v$4563[1]];
},function(v$4564){return [v$4564[0],[v$4564[1],v$4564[2]]];
}))(pickle$0pickle$1.pairGen0$983(v$5362,pickle$0pickle$1.pairGen0$983(v$5363,v$5364))));
};
pickle$0pickle$1.tup4Gen$2416 = function(v$5365,v$5366,v$5367,v$5368){return pickle$0pickle$1.shareGen$878((pickle$0pickle$1.convert0$2299(function(v$4570){var v$4571 = v$4570[0];
var v$4572 = v$4571[0];
var v$4573 = v$4571[1];
var v$4574 = v$4570[1];
return [v$4572,v$4573,v$4574[0],v$4574[1]];
},function(v$4575){return [[v$4575[0],v$4575[1]],[v$4575[2],v$4575[3]]];
}))(pickle$0pickle$1.pairGen0$983(pickle$0pickle$1.pairGen0$983(v$5365,v$5366),pickle$0pickle$1.pairGen0$983(v$5367,v$5368))));
};
pickle$0pickle$1.vectorGen$2420 = function(pu$2423){var v$5412;
var e$4579 = null;
v$5412 = (function(a$4580){var n$4581 = a$4580.length;
var fix$5589 = {};
fix$5589.$rl = function(v$4584,v$4585){lab$rl: while (true) {if (v$4584 >= 0) {var t$5590 = SmlPrims.chk_ovf_i32(v$4584 - 1);
var t$5591 = [a$4580[v$4584],v$4585];
var v$4584 = t$5590;
var v$4585 = t$5591;
continue lab$rl;
} else {return v$4585;
};
};
};
var rl$4582 = fix$5589.$rl;
return rl$4582(SmlPrims.chk_ovf_i32(n$4581 - 1),e$4579);
});
var b$4577 = pickle$0pickle$1.listGen$2109(pu$2423);
return pickle$0pickle$1.shareGen$878((pickle$0pickle$1.convert0$2299(function(v$5420){return basis$0Vector$1$3.fromList$230(v$5420);
},v$5412))(b$4577));
};
pickle$0pickle$1.real$2425 = pickle$0pickle$1.shareGen$878((pickle$0pickle$1.convert0$2299(function(s$5417){var v$5418 = basis$0Real$1.fromString$497(s$5417);
switch (v$5418[0]) { case 0: {return v$5418[1];
 break; }default: {basis$0General$1.print$163("Pickle.real.impossible\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.real.impossible"];
} };
},function(v$5421){return basis$0Real$1.toString$153(v$5421);
}))(pickle$0pickle$1.string$909));
pickle$0pickle$1.time$2436 = pickle$0pickle$1.shareGen$878((pickle$0pickle$1.convert0$2299(function(v$5422){return basis$0Time$1.fromReal$113(v$5422);
},function(v$5419){return (v$5419[0] - (-2147483648)) + (v$5419[1] / 1000000.0);
}))(pickle$0pickle$1.real$2425));
pickle$0pickle$1.unit$2437 = [0,[function(v$4601){return true;
},function(v$4602){return function(p$4607){var v$4608 = p$4607[1];
return (v$4608 <= 0)?p$4607:[(23 + ((p$4607[0] * 19) & 4294967295)) & 4294967295,p$4607[1]];
};
},function(v$4610){return function(x$4611){return x$4611;
};
},[5],function(is$4612){return [0,is$4612];
}]];
pickle$0pickle$1.cache$2484 = function(s$2487){var C$5312 = [[0]];
return function(f$5313){return function(a$5314){var v$5315 = C$5312[0];
switch (v$5315[0]) { case 2: {return v$5315[1];
 break; }case 0: {(C$5312[0] = [1],0);
var v$5316 = f$5313(a$5314);
switch (C$5312[0][0]) { case 1: {(C$5312[0] = [2,v$5316],0);
return v$5316;
 break; }default: {basis$0General$1.print$163("Pickle.cacheNew impossible\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.cacheNew impossible"];
} };
 break; }default: {var s$5317 = "recursive cache appearance for " + s$2487;
var s$5318 = "Pickle." + s$5317;
basis$0General$1.print$163(s$5318 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$5318];
} };
};
};
};
pickle$0pickle$1.cache2$2488 = function(s$2491){var C$5320 = [[0]];
return function(f$5321){return function(a$5322){var v$5323 = C$5320[0];
switch (v$5323[0]) { case 2: {return v$5323[1];
 break; }case 0: {(C$5320[0] = [1],0);
var v$5324 = f$5321(a$5322);
switch (C$5320[0][0]) { case 1: {(C$5320[0] = [2,v$5324],0);
return v$5324;
 break; }default: {basis$0General$1.print$163("Pickle.cacheNew impossible\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.cacheNew impossible"];
} };
 break; }default: {var s$5325 = "recursive cache appearance for " + s$2491;
var s$5326 = "Pickle." + s$5325;
basis$0General$1.print$163(s$5326 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$5326];
} };
};
};
};
pickle$0pickle$1.registerEq$2492 = function(eq$2495,key$2498,debug_str$2501,vs$2504,pu$2507){var h$2508;
var v$5052 = exn$PickleExn$93;
var v$4632;
var t$5592;
var v$4633;
var nw$4634 = SmlPrims.i32_to_w32(10);
var fix$5593 = {};
fix$5593.$f = function(i$4636){lab$f: while (true) {if (i$4636 >= nw$4634) {return i$4636;
} else {var t$5594 = (i$4636 << (1 & 31)) & 4294967295;
var i$4636 = t$5594;
continue lab$f;
};
};
};
var f$4635 = fix$5593.$f;
v$4633 = (SmlPrims.chk_ovf_i32(f$4635(32)));
var v$4637 = null;
if ((0 <= v$4633)?(v$4633 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$5592 = (SmlPrims.wordTableInit(v$4633,v$4637));
v$4632 = [t$5592];
h$2508 = [key$2498,[0],v$5052,eq$2495,v$4632];
var fix$5595 = {};
fix$5595.$foldl = function(v$4646,v$4647){lab$foldl: while (true) {if (v$4647 == null) {return v$4646;
} else {var v$4648 = v$4647;
var v$4649 = v$4648[0];
var v$4650 = v$4648[1];
var t$5596;
(pickle$0Polyhash$1.insert$172(h$2508))([v$4649,v$4646]);
t$5596 = ((v$4646 + 1) & 4294967295);
var t$5597 = t$5596;
var t$5598 = v$4650;
var v$4646 = t$5597;
var v$4647 = t$5598;
continue lab$foldl;
};
};
};
var foldl$4645 = fix$5595.$foldl;
foldl$4645(1,vs$2504);
var v$2517 = basis$0Vector$1$3.fromList$230(vs$2504);
return [0,[pu$2507[1][0],pu$2507[1][1],function(v$4669){return function(s$4670){var v$4671 = (pickle$0Polyhash$1.peek$334(h$2508[0],h$2508[1],h$2508[2],h$2508[3],h$2508[4]))(v$4669);
switch (v$4671[0]) { case 0: {var v$4672 = v$4671[1];
return pickle$0bitstream$1.outcw$398(v$4672,s$4670);
 break; }default: {var s$4673 = pickle$0bitstream$1.outcw$398(0,s$4670);
return (pu$2507[1][2](v$4669))(s$4673);
} };
};
},[8,pu$2507[1][3]],function(v$4675){var v$4676 = v$4675[0];
var v$4677 = v$4675[1];
var v$4678 = pickle$0bitstream$1.getcw$410(v$4676);
var v$4679 = v$4678[0];
var v$4680 = v$4678[1];
if (v$4679 == 0) {return pu$2507[1][4]([v$4680,v$4677]);
} else {var t$5599;
var i$4682 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$4679)) - 1);
var v$4686 = v$2517.length;
if ((0 <= i$4682)?(i$4682 < v$4686):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
t$5599 = v$2517[i$4682];
return [t$5599,[v$4680,v$4677]];
};
}]];
};
pickle$0pickle$1.register$2560 = function(s$2563,vs$2566,pu$2569){return pickle$0pickle$1.registerEq$2492(pu$2569[1][0],function(v$2572){return SmlPrims.w32_to_i32_X(((pu$2569[1][1](v$2572))([0,12]))[0]);
},s$2563,vs$2566,pu$2569);
};
pickle$0pickle$1.hashConsEq$2577 = function(eq$2580,pu$2583){var hash$2584 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var v$2607 = pickle$0eqhashdyn2$1.new$64(function(v$2612){return function(d$2615){return ((pu$2583[1][1](v$2612))([hash$2584,d$2615]))[0];
};
},eq$2580);
var v$2608 = v$2607[0];
var v$2609 = v$2607[1];
return [0,[eq$2580,pu$2583[1][1],pu$2583[1][2],pu$2583[1][3],function(is$4700){var v$4701 = pu$2583[1][4](is$4700);
var v$4702 = v$4701[0];
var v$4703 = v$4701[1];
var d$4704;
var hce$4705 = v$4703[1];
var d$4706 = v$2608(v$4702);
var v$4707 = (pickle$0Polyhash$1.peek$334(hce$4705[0],hce$4705[1],hce$4705[2],hce$4705[3],hce$4705[4]))(d$4706);
switch (v$4707[0]) { case 0: {d$4704 = v$4707[1];
 break; }default: {(pickle$0Polyhash$1.insert$172(hce$4705))([d$4706,d$4706]);
d$4704 = d$4706;
} };
return [v$2609(d$4704),v$4703];
}]];
};
pickle$0pickle$1.hashCons$2620 = function(pu$2623){return pickle$0pickle$1.hashConsEq$2577(pu$2623[1][0],pu$2623);
};
pickle$0pickle$1.nameGen$2624 = function(s$2627,pu$2630){return [0,[pu$2630[1][0],pu$2630[1][1],pu$2630[1][2],[20,[s$2627,pu$2630[1][3]]],pu$2630[1][4]]];
};
pickle$0pickle$1.comment$2636 = function(str$2639,pu$2642){return pu$2642;
};
pickle$0pickle$1.checkUnpickle$2659 = function(f$2662,pu$2665){return pu$2665;
};
pickle$0pickle$1.debugUnpickle$2683 = function(s$2686,pu$2689){return pu$2689;
};
return 0;
})();
