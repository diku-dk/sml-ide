if ((typeof(pickle$0pickle$1)) == "undefined") {pickle$0pickle$1 = {};
};
(function(){pickle$0pickle$1.eq_cache$2733 = function(v$2737,v$2734){var v$2735 = v$2734[0];
var v$2736 = v$2734[1];
switch (v$2735[0]) { case 0: {switch (v$2736[0]) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$2736[0]) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$2736[0]) { case 2: {var v$2738 = v$2735[1];
var v$2739 = v$2736[1];
return v$2737([v$2738,v$2739]);
 break; }default: {return false;
} };
 break; } };
};
var fix$5471 = {};
fix$5471.$eq_typ = function(v$2742,v$2743){lab$eq_typ: while (true) {switch (v$2742[0]) { case 0: {switch (v$2743[0]) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$2743[0]) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$2743[0]) { case 2: {return true;
 break; }default: {return false;
} };
 break; }case 3: {switch (v$2743[0]) { case 3: {return true;
 break; }default: {return false;
} };
 break; }case 4: {switch (v$2743[0]) { case 4: {return true;
 break; }default: {return false;
} };
 break; }case 5: {switch (v$2743[0]) { case 5: {return true;
 break; }default: {return false;
} };
 break; }case 6: {switch (v$2743[0]) { case 6: {return true;
 break; }default: {return false;
} };
 break; }case 7: {switch (v$2743[0]) { case 7: {var v$2744 = v$2742[1];
var v$2745 = v$2743[1];
var t$5490 = v$2744;
var t$5491 = v$2745;
var v$2742 = t$5490;
var v$2743 = t$5491;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 8: {switch (v$2743[0]) { case 8: {var v$2746 = v$2742[1];
var v$2747 = v$2743[1];
var t$5488 = v$2746;
var t$5489 = v$2747;
var v$2742 = t$5488;
var v$2743 = t$5489;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 9: {switch (v$2743[0]) { case 9: {var v$2748 = v$2742[1];
var v$2749 = v$2743[1];
var t$5486 = v$2748;
var t$5487 = v$2749;
var v$2742 = t$5486;
var v$2743 = t$5487;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 10: {switch (v$2743[0]) { case 10: {var v$2750 = v$2742[1];
var v$2751 = v$2743[1];
var t$5484 = v$2750;
var t$5485 = v$2751;
var v$2742 = t$5484;
var v$2743 = t$5485;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 11: {switch (v$2743[0]) { case 11: {var v$2752 = v$2742[1];
var v$2753 = v$2743[1];
var t$5482 = v$2752;
var t$5483 = v$2753;
var v$2742 = t$5482;
var v$2743 = t$5483;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 12: {switch (v$2743[0]) { case 12: {return true;
 break; }default: {return false;
} };
 break; }case 13: {switch (v$2743[0]) { case 13: {var v$2754 = v$2742[1];
var v$2755 = v$2743[1];
if (fix$5471.$eq_typ(v$2754[0],v$2755[0])) {var t$5480 = v$2754[1];
var t$5481 = v$2755[1];
var v$2742 = t$5480;
var v$2743 = t$5481;
continue lab$eq_typ;
} else {return false;
};
 break; }default: {return false;
} };
 break; }case 14: {switch (v$2743[0]) { case 14: {var v$2757 = v$2742[1];
var v$2758 = v$2743[1];
var t$5478 = v$2757;
var t$5479 = v$2758;
var v$2742 = t$5478;
var v$2743 = t$5479;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 15: {switch (v$2743[0]) { case 15: {var v$2759 = v$2742[1];
var v$2760 = v$2743[1];
var t$5476 = v$2759;
var t$5477 = v$2760;
var v$2742 = t$5476;
var v$2743 = t$5477;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 16: {switch (v$2743[0]) { case 16: {return true;
 break; }default: {return false;
} };
 break; }case 17: {switch (v$2743[0]) { case 17: {return true;
 break; }default: {return false;
} };
 break; }case 18: {switch (v$2743[0]) { case 18: {return true;
 break; }default: {return false;
} };
 break; }case 19: {switch (v$2743[0]) { case 19: {return v$2742[1] == v$2743[1];
 break; }default: {return false;
} };
 break; }case 20: {switch (v$2743[0]) { case 20: {var v$2764 = v$2742[1];
var v$2765 = v$2743[1];
if (v$2764[0] == v$2765[0]) {var t$5474 = v$2764[1];
var t$5475 = v$2765[1];
var v$2742 = t$5474;
var v$2743 = t$5475;
continue lab$eq_typ;
} else {return false;
};
 break; }default: {return false;
} };
 break; }case 21: {switch (v$2743[0]) { case 21: {return v$2742[1] == v$2743[1];
 break; }default: {return false;
} };
 break; }case 22: {switch (v$2743[0]) { case 22: {var v$2771 = v$2742[1];
var v$2772 = v$2743[1];
var t$5472 = v$2771;
var t$5473 = v$2772;
var v$2742 = t$5472;
var v$2743 = t$5473;
continue lab$eq_typ;
 break; }default: {return false;
} };
 break; }case 23: {switch (v$2743[0]) { case 23: {return true;
 break; }default: {return false;
} };
 break; }case 24: {switch (v$2743[0]) { case 24: {return true;
 break; }default: {return false;
} };
 break; }case 25: {switch (v$2743[0]) { case 25: {return true;
 break; }default: {return false;
} };
 break; } };
};
};
pickle$0pickle$1.eq_typ$2740 = fix$5471.$eq_typ;
var en$PickleExn$93 = new String("PickleExn");
var exn$PickleExn$93 = [en$PickleExn$93];
var reset_fun$94 = [function(x$2797){return x$2797;
}];
var hashCount$237 = [100];
pickle$0pickle$1.empty_hce$446 = function(v$2908){var v$4773 = exn$PickleExn$93;
var v$2920;
var t$5492;
var v$2921;
var nw$2922 = SmlPrims.i32_to_w32(10);
var fix$5493 = {};
fix$5493.$f = function(i$2924){lab$f: while (true) {if (i$2924 >= nw$2922) {return i$2924;
} else {var t$5494 = (i$2924 << (1 & 31)) & 4294967295;
var i$2924 = t$5494;
continue lab$f;
};
};
};
var f$2923 = fix$5493.$f;
v$2921 = (SmlPrims.chk_ovf_i32(f$2923(32)));
var v$2925 = null;
if ((0 <= v$2921)?(v$2921 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$5492 = (SmlPrims.wordTableInit(v$2921,v$2925));
v$2920 = [t$5492];
return [function(x$5439){return SmlPrims.w32_to_i32_X(pickle$0eqhashdyn2$1.hash$130(12,x$5439));
},[0],v$4773,function(v$5380){return pickle$0eqhashdyn2$1.eq$119(v$5380[0],v$5380[1]);
},v$2920];
};
[0];
pickle$0pickle$1.debug$531 = function(str$534,pu$537){return pu$537;
};
var word32Gen$571 = function(v$2775,s$574,v$578){var v$608 = v$578[0];
var v$609 = v$578[1];
return [0,[function(v$2999){var v$3000 = v$2999[0];
var v$3001 = v$2999[1];
return v$2775([v$3000,v$3001]);
},function(a$3002){return function(p$3013){var v$3014 = p$3013[1];
return (v$3014 <= 0)?p$3013:[((v$608(a$3002)) + ((p$3013[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$3013[1] - 1)];
};
},function(w$3022){return function(s$3023){return pickle$0bitstream$1.outcw32$460(v$608(w$3022),s$3023);
};
},[1],function(v$3024){var v$3025 = v$3024[0];
var v$3026 = v$3024[1];
var v$3027 = pickle$0bitstream$1.getcw32$472(v$3025);
var v$3028 = v$3027[0];
var v$3029 = v$3027[1];
return [v$609(v$3028),[v$3029,v$3026]];
}]];
};
pickle$0pickle$1.word$727 = [0,[function(v$3121){return v$3121[0] == v$3121[1];
},function(a$3124){return function(p$3125){var v$3126 = p$3125[1];
return (v$3126 <= 0)?p$3125:[(a$3124 + ((p$3125[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$3125[1] - 1)];
};
},function(w$3128){return function(s$3129){return pickle$0bitstream$1.outcw$398(w$3128,s$3129);
};
},[4],function(v$3130){var v$3131 = v$3130[0];
var v$3132 = v$3130[1];
var v$3133 = pickle$0bitstream$1.getcw$410(v$3131);
return [v$3133[0],[v$3133[1],v$3132]];
}]];
pickle$0pickle$1.word32$728 = word32Gen$571(function(v$2780){return v$2780[0] == v$2780[1];
},"word32",[function(x$3138){return x$3138;
},function(x$3139){return x$3139;
}]);
pickle$0pickle$1.int$729 = word32Gen$571(function(v$2781){return v$2781[0] == v$2781[1];
},"int",[function(i$3140){return SmlPrims.i32_to_w32(i$3140);
},function(x$3144){return basis$0Int32$1.fromLarge$91(basis$0Word32$1.toLargeIntX$94(x$3144));
}]);
pickle$0pickle$1.int32$730 = word32Gen$571(function(v$2782){return v$2782[0] == v$2782[1];
},"int32",[function(x$3148){return basis$0Word32$1.fromLargeInt$98(basis$0Int32$1.toLarge$87(x$3148));
},function(x$3152){return basis$0Int32$1.fromLarge$91(basis$0Word32$1.toLargeIntX$94(x$3152));
}]);
pickle$0pickle$1.char$731 = [0,[function(v$3159){return v$3159[0] == v$3159[1];
},function(a$3162){return function(p$3163){var v$3164 = p$3163[1];
return (v$3164 <= 0)?p$3163:[((SmlPrims.i32_to_w32(a$3162)) + ((p$3163[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$3163[1] - 1)];
};
},function(v$3166){return function(s$3167){var v$5441 = [v$3166,s$3167];
return pickle$0bitstream$1.outwN$152(8,v$5441);
};
},[25],function(v$3169){var v$3170 = v$3169[0];
var v$3171 = v$3169[1];
var v$3172;
var v$3173 = pickle$0bitstream$1.getwN$190(8,v$3170);
v$3172 = [v$3173[0],v$3173[1]];
return [v$3172[0],[v$3172[1],v$3171]];
}]];
pickle$0pickle$1.bool$732 = [0,[function(v$3184){return v$3184[0] == v$3184[1];
},function(a$3187){return function(p$3188){var v$3189 = p$3188[1];
return (v$3189 <= 0)?p$3188:[((SmlPrims.i32_to_w32(a$3187?1:0)) + ((p$3188[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$3188[1] - 1)];
};
},function(v$3191){return function(s$3192){var v$5443 = [v$3191?1:0,s$3192];
return pickle$0bitstream$1.outwN$152(1,v$5443);
};
},[3],function(v$3193){var v$3194 = v$3193[0];
var v$3195 = v$3193[1];
var v$3196 = pickle$0bitstream$1.getwN$190(1,v$3194);
var v$3197 = v$3196[0];
var t$5495;
switch (v$3197) { case 0: {t$5495 = false;
 break; }default: {t$5495 = true;
} };
return [t$5495,[v$3196[1],v$3195]];
}]];
var mkTables$743 = function(hash$746,eq$749){var clearRef$750 = [false];
var t$5497 = reset_fun$94;
var t$5496;
var v$4809 = reset_fun$94[0];
t$5496 = (function(x$3204){v$4809(x$3204);
return (clearRef$750[0] = true,0);
});
(t$5497[0] = t$5496,0);
var count$753 = [0];
var t$5499 = reset_fun$94;
var t$5498;
var v$4815 = reset_fun$94[0];
t$5498 = (function(x$3212){v$4815(x$3212);
return (count$753[0] = 0,0);
});
(t$5499[0] = t$5498,0);
var T_to$760;
var v$4821 = exn$PickleExn$93;
var v$3232;
var t$5500;
var v$3233;
var nw$3234 = SmlPrims.i32_to_w32(10);
var fix$5501 = {};
fix$5501.$f = function(i$3236){lab$f: while (true) {if (i$3236 >= nw$3234) {return i$3236;
} else {var t$5502 = (i$3236 << (1 & 31)) & 4294967295;
var i$3236 = t$5502;
continue lab$f;
};
};
};
var f$3235 = fix$5501.$f;
v$3233 = (SmlPrims.chk_ovf_i32(f$3235(32)));
var v$3237 = null;
if ((0 <= v$3233)?(v$3233 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$5500 = (SmlPrims.wordTableInit(v$3233,v$3237));
v$3232 = [t$5500];
T_to$760 = [function(w$5140){return SmlPrims.w32_to_i32_X(w$5140);
},[0],v$4821,function(v$5141){return v$5141[0] == v$5141[1];
},v$3232];
var T_from$761;
var v$4829 = exn$PickleExn$93;
var v$3253;
var t$5503;
var v$3254;
var nw$3255 = SmlPrims.i32_to_w32(10);
var fix$5504 = {};
fix$5504.$f = function(i$3257){lab$f: while (true) {if (i$3257 >= nw$3255) {return i$3257;
} else {var t$5505 = (i$3257 << (1 & 31)) & 4294967295;
var i$3257 = t$5505;
continue lab$f;
};
};
};
var f$3256 = fix$5504.$f;
v$3254 = (SmlPrims.chk_ovf_i32(f$3256(32)));
var v$3258 = null;
if ((0 <= v$3254)?(v$3254 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$5503 = (SmlPrims.wordTableInit(v$3254,v$3258));
v$3253 = [t$5503];
T_from$761 = [function(x$5145){return SmlPrims.w32_to_i32_X(hash$746(x$5145));
},[0],v$4829,eq$749,v$3253];
return [T_from$761,T_to$760,function(v$3283){if (clearRef$750[0]) {var v$3285 = T_to$760[4];
var v$3286 = T_to$760[1];
var a$3287 = v$3285[0];
var v$3288 = SmlPrims.chk_ovf_i32(a$3287.length - 1);
var fix$5506 = {};
fix$5506.$loop = function(i$3290){lab$loop: while (true) {if (i$3290 > v$3288) {return 0;
} else {var v$3291 = null;
var v$3292 = a$3287.length;
if ((0 <= i$3290)?(i$3290 < v$3292):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
(a$3287[i$3290] = v$3291,0);
var t$5507 = SmlPrims.chk_ovf_i32(i$3290 + 1);
var i$3290 = t$5507;
continue lab$loop;
};
};
};
var loop$3289 = fix$5506.$loop;
loop$3289(0);
(v$3286[0] = 0,0);
var v$3294 = T_from$761[4];
var v$3295 = T_from$761[1];
var a$3296 = v$3294[0];
var v$3297 = SmlPrims.chk_ovf_i32(a$3296.length - 1);
var fix$5508 = {};
fix$5508.$loop = function(i$3299){lab$loop: while (true) {if (i$3299 > v$3297) {return 0;
} else {var v$3300 = null;
var v$3301 = a$3296.length;
if ((0 <= i$3299)?(i$3299 < v$3301):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
(a$3296[i$3299] = v$3300,0);
var t$5509 = SmlPrims.chk_ovf_i32(i$3299 + 1);
var i$3299 = t$5509;
continue lab$loop;
};
};
};
var loop$3298 = fix$5508.$loop;
loop$3298(0);
(v$3295[0] = 0,0);
return (clearRef$750[0] = false,0);
} else {return 0;
};
},function(v$3303){return [count$753[0],(count$753[0] = ((count$753[0] + 1) & 4294967295),0)][0];
}];
};
var shareGen0$779 = function(pp$782,pu$785){var v$873 = mkTables$743(function(v$3307){return ((pu$785[1][1](v$3307))([0,12]))[0];
},pu$785[1][0]);
var v$874 = v$873[3];
var v$875 = v$873[1];
var v$876 = v$873[0];
var v$877 = v$873[2];
return [0,[pu$785[1][0],pu$785[1][1],function(v$3333){return function(s$3334){v$877(0);
var v$3335 = (pickle$0Polyhash$1.peek$334(v$876[0],v$876[1],v$876[2],v$876[3],v$876[4]))(v$3333);
switch (v$3335[0]) { case 0: {var v$3337 = v$3335[1];
var s$3338;
var v$5445 = [0,s$3334];
s$3338 = (pickle$0bitstream$1.outwN$152(1,v$5445));
return pickle$0bitstream$1.outcw$398(v$3337,s$3338);
 break; }default: {var s$3339;
var v$5446 = [1,s$3334];
s$3339 = (pickle$0bitstream$1.outwN$152(1,v$5446));
var loc$3340 = v$874(0);
var res$3341 = (pu$785[1][2](v$3333))(s$3339);
switch (((pickle$0Polyhash$1.peek$334(v$876[0],v$876[1],v$876[2],v$876[3],v$876[4]))(v$3333))[0]) { case 0: {return res$3341;
 break; }default: {(pickle$0Polyhash$1.insert$172(v$876))([v$3333,loc$3340]);
return res$3341;
} };
} };
};
},[7,pu$785[1][3]],function(v$3346){var v$3347 = v$3346[0];
var v$3348 = v$3346[1];
v$877(0);
var v$3349 = pickle$0bitstream$1.getwN$190(1,v$3347);
var v$3350 = v$3349[0];
var v$3351 = v$3349[1];
if (v$3350 == 0) {var v$3352 = pickle$0bitstream$1.getcw$410(v$3351);
var v$3353 = v$3352[0];
var v$3354 = v$3352[1];
var v$3355 = (pickle$0Polyhash$1.peek$334(v$875[0],v$875[1],v$875[2],v$875[3],v$875[4]))(v$3353);
switch (v$3355[0]) { case 0: {return [v$3355[1],[v$3354,v$3348]];
 break; }default: {var s$3357 = "shareGen0.impossible, loc=" + (basis$0Word32$1.toString$439(v$3353));
var s$3359 = "Pickle." + s$3357;
basis$0General$1.print$163(s$3359 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$3359];
} };
} else {if (v$3350 == 1) {var loc$3362 = v$874(0);
var v$3363 = pu$785[1][4]([v$3351,v$3348]);
var v$3364 = v$3363[0];
var v$3365 = v$3363[1];
var v$3366 = v$3365[0];
var v$3367 = v$3365[1];
switch (((pickle$0Polyhash$1.peek$334(v$875[0],v$875[1],v$875[2],v$875[3],v$875[4]))(loc$3362))[0]) { case 1: {(pickle$0Polyhash$1.insert$172(v$875))([loc$3362,v$3364]);
 break; }default: {0;
} };
return [v$3364,[v$3366,v$3367]];
} else {basis$0General$1.print$163("Pickle.shareGen0.impossible2\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.shareGen0.impossible2"];
};
};
}]];
};
pickle$0pickle$1.shareGen$878 = function(a$881){var t_a$882 = a$881[1][3];
var warn$883 = function(v$885){var t$5515 = basis$0General$1.print$163;
var t$5514;
var t$5513;
var t$5512 = "Pickle warning: shareGen applied to ";
var t$5511;
var fix$5510 = {};
fix$5510.$arg = function(s$3402,t$3403,acc$3404){return [s$3402,["(",fix$5510.$pp(t$3403,[")",acc$3404])]];
};
fix$5510.$pp = function(v$3383,v$3384){switch (v$3383[0]) { case 7: {var v$3385 = v$3383[1];
return fix$5510.$arg("Share",v$3385,v$3384);
 break; }case 18: {return ["i",v$3384];
 break; }case 17: {return ["i31",v$3384];
 break; }case 16: {return ["i32",v$3384];
 break; }case 12: {return ["r",v$3384];
 break; }case 4: {return ["w",v$3384];
 break; }case 3: {return ["w1",v$3384];
 break; }case 0: {return ["w8",v$3384];
 break; }case 2: {return ["w31",v$3384];
 break; }case 1: {return ["w32",v$3384];
 break; }case 25: {return ["c",v$3384];
 break; }case 24: {return ["C0",v$3384];
 break; }case 23: {return ["C1",v$3384];
 break; }case 5: {return ["1",v$3384];
 break; }case 6: {return ["s",v$3384];
 break; }case 13: {var v$3386 = v$3383[1];
var v$3387 = v$3386[0];
var v$3388 = v$3386[1];
return ["(",fix$5510.$pp(v$3387,[",",fix$5510.$pp(v$3388,[")",v$3384])])];
 break; }case 11: {var v$3389 = v$3383[1];
return fix$5510.$arg("ref",v$3389,v$3384);
 break; }case 10: {var v$3390 = v$3383[1];
return fix$5510.$arg("ref0",v$3390,v$3384);
 break; }case 9: {var v$3391 = v$3383[1];
return fix$5510.$arg("ref1",v$3391,v$3384);
 break; }case 22: {var v$3392 = v$3383[1];
return fix$5510.$arg("conv",v$3392,v$3384);
 break; }case 14: {var v$3393 = v$3383[1];
return fix$5510.$arg("option",v$3393,v$3384);
 break; }case 15: {var v$3394 = v$3383[1];
return fix$5510.$arg("list",v$3394,v$3384);
 break; }case 20: {var v$3395 = v$3383[1];
var v$3396 = v$3395[0];
var v$3397 = v$3395[1];
return fix$5510.$arg("deco_" + v$3396,v$3397,v$3384);
 break; }case 8: {var v$3399 = v$3383[1];
return fix$5510.$arg("registerEq",v$3399,v$3384);
 break; }case 21: {var v$3400 = v$3383[1];
return ["data(",[basis$0Int32$1.toString$458(v$3400),[")",v$3384]]];
 break; }default: {var v$3401 = v$3383[1];
return ["enum(",[basis$0Int32$1.toString$458(v$3401),[")",v$3384]]];
} };
};
var arg$3381 = fix$5510.$arg;
var pp$3380 = fix$5510.$pp;
t$5511 = (SmlPrims.concat(pp$3380(t_a$882,null)));
t$5513 = (t$5512 + t$5511);
t$5514 = (t$5513 + "\n");
return t$5515(t$5514);
};
switch (t_a$882[0]) { case 7: {warn$883(0);
 break; }case 11: {warn$883(0);
 break; }case 10: {warn$883(0);
 break; }case 9: {warn$883(0);
 break; }case 21: {warn$883(0);
 break; }default: {var t$5516;
switch (t_a$882[0]) { case 18: {t$5516 = true;
 break; }case 17: {t$5516 = true;
 break; }case 4: {t$5516 = true;
 break; }case 3: {t$5516 = true;
 break; }case 0: {t$5516 = true;
 break; }case 2: {t$5516 = true;
 break; }case 25: {t$5516 = true;
 break; }case 5: {t$5516 = true;
 break; }default: {t$5516 = false;
} };
t$5516?(warn$883(0)):0;
} };
return shareGen0$779(function(v$908){return "no pp";
},a$881);
};
pickle$0pickle$1.string$909;
var x$3409 = [function(v$3451){return v$3451[0] == v$3451[1];
},function(s$3455){return function(p$3471){var v$3472 = p$3471[1];
if (v$3472 <= 0) {return p$3471;
} else {var v$3474 = p$3471[0];
var v$3475 = p$3471[1];
var t$5526;
var sz$3476 = s$3455.length;
var sz$3477 = (sz$3476 > 500)?500:sz$3476;
var fix$5527 = {};
fix$5527.$loop = function(v$3480,v$3481){lab$loop: while (true) {if (v$3480 >= sz$3477) {return v$3481;
} else {var t$5532 = SmlPrims.chk_ovf_i32(v$3480 + 1);
var t$5531;
var t$5530;
var t$5529;
var t$5528;
if ((v$3480 < 0)?true:(v$3480 >= s$3455.length)) {throw CompilerInitial.exn$Subscript$52;
} else {t$5528 = (s$3455.charCodeAt(v$3480));
};
t$5529 = t$5528;
t$5530 = (SmlPrims.i32_to_w32(t$5529));
t$5531 = ((t$5530 + ((v$3481 * 19) & 4294967295)) & 4294967295);
var t$5533 = t$5532;
var t$5534 = t$5531;
var v$3480 = t$5533;
var v$3481 = t$5534;
continue lab$loop;
};
};
};
var loop$3478 = fix$5527.$loop;
t$5526 = (loop$3478(0,v$3474));
return [t$5526,SmlPrims.chk_ovf_i32(v$3475 - 1)];
};
};
},function(st$3485){return function(s$3486){var sz$3487 = st$3485.length;
var s$3488 = pickle$0bitstream$1.outcw$398(SmlPrims.i32_to_w32(sz$3487),s$3486);
var stop$3496 = st$3485.length;
var fix$5521 = {};
fix$5521.$lr = function(v$3499,v$3500){lab$lr: while (true) {if (v$3499 < stop$3496) {var t$5523 = SmlPrims.chk_ovf_i32(v$3499 + 1);
var t$5522;
var v$4858 = st$3485.charCodeAt(v$3499);
var v$5448 = [v$4858,v$3500];
t$5522 = (pickle$0bitstream$1.outwN$152(8,v$5448));
var t$5524 = t$5523;
var t$5525 = t$5522;
var v$3499 = t$5524;
var v$3500 = t$5525;
continue lab$lr;
} else {return v$3500;
};
};
};
var lr$3497 = fix$5521.$lr;
return lr$3497(0,s$3488);
};
},[6],function(v$3505){var v$3506 = v$3505[0];
var v$3507 = v$3505[1];
var v$3508 = pickle$0bitstream$1.getcw$410(v$3506);
var v$3509 = v$3508[0];
var v$3510 = v$3508[1];
var sz$3511 = SmlPrims.chk_ovf_i32(v$3509);
var fix$5517 = {};
fix$5517.$read = function(v$3514,v$5381,v$5382){lab$read: while (true) {switch (v$3514) { case 0: {return [SmlPrims.implode(basis$0List$1.rev$682(v$5382)),v$5381];
 break; }default: {var v$3520;
var v$3521 = pickle$0bitstream$1.getwN$190(8,v$5381);
v$3520 = [v$3521[0],v$3521[1]];
var v$3522 = v$3520[0];
var v$3523 = v$3520[1];
var t$5518 = SmlPrims.chk_ovf_i32(v$3514 - 1);
var t$5519 = v$3523;
var t$5520 = [v$3522,v$5382];
var v$3514 = t$5518;
var v$5381 = t$5519;
var v$5382 = t$5520;
continue lab$read;
} };
};
};
var read$3512 = fix$5517.$read;
var v$3524 = read$3512(sz$3511,v$3510,null);
return [v$3524[0],[v$3524[1],v$3507]];
}];
var x$5154 = [0,x$3409];
pickle$0pickle$1.string$909 = (pickle$0pickle$1.shareGen$878(x$5154));
pickle$0pickle$1.pairGen0$983 = function(v$1051,v$1052){var hash_pair$988 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
return [0,[function(v$3544){var v$3545 = v$3544[0];
var v$3546 = v$3545[0];
var v$3547 = v$3545[1];
var v$3548 = v$3544[1];
var v$3549 = v$3548[0];
var v$3550 = v$3548[1];
return (v$1051[1][0]([v$3546,v$3549]))?(v$1052[1][0]([v$3547,v$3550])):false;
},function(v$3551){var v$3552 = v$3551[0];
var v$3553 = v$3551[1];
return function(p$3562){var v$3563 = p$3562[1];
if (v$3563 <= 0) {return p$3562;
} else {var p$3565;
var v$3566 = (v$1051[1][1](v$3552))(p$3562);
p$3565 = [(hash_pair$988 + ((v$3566[0] * 19) & 4294967295)) & 4294967295,v$3566[1]];
var f$3567 = v$1052[1][1](v$3553);
var v$3568 = p$3565[1];
if (v$3568 <= 0) {return p$3565;
} else {return f$3567(p$3565);
};
};
};
},function(v$3569){var v$3570 = v$3569[0];
var v$3571 = v$3569[1];
return function(os$3572){var os$3573 = (v$1051[1][2](v$3570))(os$3572);
return (v$1052[1][2](v$3571))(os$3573);
};
},[13,[v$1051[1][3],v$1052[1][3]]],function(is$3576){var v$3577 = v$1051[1][4](is$3576);
var v$3578 = v$3577[0];
var v$3579 = v$3577[1];
var v$3580 = v$1052[1][4](v$3579);
return [[v$3578,v$3580[0]],v$3580[1]];
}]];
};
pickle$0pickle$1.pairGen$1053 = function(pu$1056){return pickle$0pickle$1.shareGen$878(pickle$0pickle$1.pairGen0$983(pu$1056[0],pu$1056[1]));
};
pickle$0pickle$1.refEqGen$1057 = function(eq$1060,v_dummy$1063,pu$1066){var v$1151 = mkTables$743(function(x$3584){var v$5162 = x$3584[0];
return ((pu$1066[1][1](v$5162))([0,12]))[0];
},eq$1060);
var v$1152 = v$1151[3];
var v$1153 = v$1151[1];
var v$1154 = v$1151[0];
var v$1155 = v$1151[2];
var hash_ref$1072 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
return [0,[eq$1060,function(v$3622){var a$3623 = v$3622[0];
return function(p$3624){var v$3625 = p$3624[1];
if (v$3625 <= 0) {return p$3624;
} else {var v$3627 = (pu$1066[1][1](a$3623))(p$3624);
return [(hash_ref$1072 + ((v$3627[0] * 19) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(v$3627[1] - 1)];
};
};
},function(r$3628){var v$3629 = r$3628[0];
return function(s$3630){v$1155(0);
var v$3631 = (pickle$0Polyhash$1.peek$334(v$1154[0],v$1154[1],v$1154[2],v$1154[3],v$1154[4]))(r$3628);
switch (v$3631[0]) { case 0: {var v$3633 = v$3631[1];
var s$3634;
var v$5450 = [0,s$3630];
s$3634 = (pickle$0bitstream$1.outwN$152(1,v$5450));
return pickle$0bitstream$1.outcw2$424(v$3633,s$3634);
 break; }default: {var s$3635;
var v$5451 = [1,s$3630];
s$3635 = (pickle$0bitstream$1.outwN$152(1,v$5451));
var loc$3636 = v$1152(0);
(pickle$0Polyhash$1.insert$172(v$1154))([r$3628,loc$3636]);
return (pu$1066[1][2](v$3629))(s$3635);
} };
};
},[11,pu$1066[1][3]],function(v$3640){var v$3641 = v$3640[0];
var v$3642 = v$3640[1];
v$1155(0);
var v$3643 = pickle$0bitstream$1.getwN$190(1,v$3641);
var v$3644 = v$3643[0];
var v$3645 = v$3643[1];
if (v$3644 == 0) {var v$3646 = pickle$0bitstream$1.getcw2$438(v$3645);
var v$3647 = v$3646[0];
var v$3648 = v$3646[1];
var v$3649 = (pickle$0Polyhash$1.peek$334(v$1153[0],v$1153[1],v$1153[2],v$1153[3],v$1153[4]))(v$3647);
switch (v$3649[0]) { case 0: {return [v$3649[1],[v$3648,v$3642]];
 break; }default: {basis$0General$1.print$163("Pickle.ref.impossible\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.ref.impossible"];
} };
} else {var loc$3655 = v$1152(0);
var r$3656 = [v_dummy$1063];
(pickle$0Polyhash$1.insert$172(v$1153))([loc$3655,r$3656]);
var v$3660 = pu$1066[1][4]([v$3645,v$3642]);
var v$3661 = v$3660[0];
var v$3662 = v$3660[1];
var v$3663 = v$3662[0];
var v$3664 = v$3662[1];
(r$3656[0] = v$3661,0);
return [r$3656,[v$3663,v$3664]];
};
}]];
};
pickle$0pickle$1.refGen$1156 = function(v_dummy$1159,pu$1162){return pickle$0pickle$1.refEqGen$1057(function(v$3667){return v$3667[0] == v$3667[1];
},v_dummy$1159,pu$1162);
};
pickle$0pickle$1.ref0EqGen$1163 = function(eq$1166,pu$1169){var hash_ref$1175 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var typ$1186 = [10,pu$1169[1][3]];
var v$1259 = mkTables$743(function(x$3686){var v$5169 = x$3686[0];
return ((pu$1169[1][1](v$5169))([0,12]))[0];
},eq$1166);
var v$1260 = v$1259[3];
var v$1261 = v$1259[1];
var v$1262 = v$1259[0];
var v$1263 = v$1259[2];
return [0,[eq$1166,function(v$3714){var a$3715 = v$3714[0];
return function(p$3716){var v$3717 = p$3716[1];
if (v$3717 <= 0) {return p$3716;
} else {var v$3719 = (pu$1169[1][1](a$3715))(p$3716);
return [(hash_ref$1175 + ((v$3719[0] * 19) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(v$3719[1] - 1)];
};
};
},function(r$3720){var v$3721 = r$3720[0];
return function(s$3722){v$1263(0);
var v$3723 = (pickle$0Polyhash$1.peek$334(v$1262[0],v$1262[1],v$1262[2],v$1262[3],v$1262[4]))(r$3720);
switch (v$3723[0]) { case 0: {var v$3725 = v$3723[1];
var s$3726;
var v$5453 = [0,s$3722];
s$3726 = (pickle$0bitstream$1.outwN$152(1,v$5453));
return pickle$0bitstream$1.outcw2$424(v$3725,s$3726);
 break; }default: {var s$3727;
var v$5454 = [1,s$3722];
s$3727 = (pickle$0bitstream$1.outwN$152(1,v$5454));
var loc$3728 = v$1260(0);
(pickle$0Polyhash$1.insert$172(v$1262))([r$3720,loc$3728]);
return (pu$1169[1][2](v$3721))(s$3727);
} };
};
},typ$1186,function(v$3732){var v$3733 = v$3732[0];
var v$3734 = v$3732[1];
v$1263(0);
var v$3735 = pickle$0bitstream$1.getwN$190(1,v$3733);
var v$3736 = v$3735[0];
var v$3737 = v$3735[1];
if (v$3736 == 0) {var v$3738 = pickle$0bitstream$1.getcw2$438(v$3737);
var v$3739 = v$3738[0];
var v$3740 = v$3738[1];
var v$3741 = (pickle$0Polyhash$1.peek$334(v$1261[0],v$1261[1],v$1261[2],v$1261[3],v$1261[4]))(v$3739);
switch (v$3741[0]) { case 0: {return [v$3741[1],[v$3740,v$3734]];
 break; }default: {basis$0General$1.print$163("Pickle.ref.impossible\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.ref.impossible"];
} };
} else {var loc$3747 = v$1260(0);
var v$3748 = pu$1169[1][4]([v$3737,v$3734]);
var v$3749 = v$3748[0];
var v$3750 = v$3748[1];
var v$3751 = v$3750[0];
var v$3752 = v$3750[1];
var r$3753 = [v$3749];
(pickle$0Polyhash$1.insert$172(v$1261))([loc$3747,r$3753]);
return [r$3753,[v$3751,v$3752]];
};
}]];
};
pickle$0pickle$1.ref0Gen$1264 = function(pu$1267){return pickle$0pickle$1.ref0EqGen$1163(function(v$3758){return v$3758[0] == v$3758[1];
},pu$1267);
};
pickle$0pickle$1.ref0ShGen$1268 = function(pu$1271){return pickle$0pickle$1.ref0EqGen$1163(function(v$1279){var v$1280 = v$1279[0];
var v$1281 = v$1279[1];
var b$1276 = v$1281[0];
var a$1277 = v$1280[0];
return pu$1271[1][0]([a$1277,b$1276]);
},pu$1271);
};
pickle$0pickle$1.refOneGen$1282 = function(pu$1285){var hash_ref$1290 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
return [0,[function(v$3804){return v$3804[0] == v$3804[1];
},function(v$3808){var a$3809 = v$3808[0];
return function(p$3810){var v$3811 = p$3810[1];
if (v$3811 <= 0) {return p$3810;
} else {var v$3813 = (pu$1285[1][1](a$3809))(p$3810);
return [(hash_ref$1290 + ((v$3813[0] * 19) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(v$3813[1] - 1)];
};
};
},function(r$3814){var v$3815 = r$3814[0];
return pu$1285[1][2](v$3815);
},[9,pu$1285[1][3]],function(is$3817){var v$3818 = pu$1285[1][4](is$3817);
var v$3819 = v$3818[0];
var v$3820 = v$3818[1];
return [[v$3819],v$3820];
}]];
};
var dataGen0$1328 = function(typ$1331,v$1336){var v$1485 = v$1336[0];
var v$1486 = v$1336[1];
var v$1487 = v$1336[2];
var typ$1337;
switch (typ$1331[0]) { case 0: {typ$1337 = typ$1331[1];
 break; }default: {var t$5538;
var fix$5535 = {};
fix$5535.$acc = function(v$3832,v$3833){lab$acc: while (true) {if (v$3832 == null) {return v$3833;
} else {var v$3834 = v$3832;
var v$3835 = v$3834[1];
var t$5536 = v$3835;
var t$5537 = SmlPrims.chk_ovf_i32(v$3833 + 1);
var v$3832 = t$5536;
var v$3833 = t$5537;
continue lab$acc;
};
};
};
var acc$3831 = fix$5535.$acc;
t$5538 = (acc$3831(v$1487,0));
typ$1337 = [21,t$5538];
} };
var hash_data$1345 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var res$1346 = [[1]];
var ps$1347 = [[0]];
var fs_sz$1348;
var fix$5539 = {};
fix$5539.$acc = function(v$3840,v$3841){lab$acc: while (true) {if (v$3840 == null) {return v$3841;
} else {var v$3842 = v$3840;
var v$3843 = v$3842[1];
var t$5540 = v$3843;
var t$5541 = SmlPrims.chk_ovf_i32(v$3841 + 1);
var v$3840 = t$5540;
var v$3841 = t$5541;
continue lab$acc;
};
};
};
var acc$3839 = fix$5539.$acc;
fs_sz$1348 = (acc$3839(v$1487,0));
var fix$5542 = {};
fix$5542.$eq = function(v$1436,v$1437){var n$1431 = v$1486(v$1436);
return (n$1431 == (v$1486(v$1437)))?((fix$5542.$getPUPI(n$1431))[1][0]([v$1436,v$1437])):false;
};
fix$5542.$p = function(v$1356){if (fs_sz$1348 == 1) {return function(x$1363){return (fix$5542.$getPUPI(0))[1][2](x$1363);
};
} else {if (fs_sz$1348 <= 256) {var bits$1368;
var w$3893 = SmlPrims.i32_to_w32(fs_sz$1348);
var w$3894 = (w$3893 - 1) & 4294967295;
var fix$5546 = {};
fix$5546.$f = function(v$3897,v$3898){lab$f: while (true) {if (v$3897 == 0) {return v$3898;
} else {var t$5547 = v$3897 >>> 1;
var t$5548 = (v$3898 + 1) & 4294967295;
var v$3897 = t$5547;
var v$3898 = t$5548;
continue lab$f;
};
};
};
var f$3895 = fix$5546.$f;
bits$1368 = (f$3895(w$3894,0));
return function(v$1371){return function(s$1374){var i$1375 = v$1486(v$1371);
var s$1376 = pickle$0bitstream$1.outwN$152(bits$1368,[255 & i$1375,s$1374]);
return ((fix$5542.$getPUPI(i$1375))[1][2](v$1371))(s$1376);
};
};
} else {return function(v$1379){return function(s$1382){var i$1383 = v$1486(v$1379);
var s$1384 = pickle$0bitstream$1.outcw2$424(SmlPrims.i32_to_w32(i$1383),s$1382);
return ((fix$5542.$getPUPI(i$1383))[1][2](v$1379))(s$1384);
};
};
};
};
};
fix$5542.$up = function(v$1386){if (fs_sz$1348 == 1) {return function(x$1393){return (fix$5542.$getPUPI(0))[1][4](x$1393);
};
} else {if (fs_sz$1348 <= 256) {var bits$1398;
var w$3878 = SmlPrims.i32_to_w32(fs_sz$1348);
var w$3879 = (w$3878 - 1) & 4294967295;
var fix$5543 = {};
fix$5543.$f = function(v$3882,v$3883){lab$f: while (true) {if (v$3882 == 0) {return v$3883;
} else {var t$5544 = v$3882 >>> 1;
var t$5545 = (v$3883 + 1) & 4294967295;
var v$3882 = t$5544;
var v$3883 = t$5545;
continue lab$f;
};
};
};
var f$3880 = fix$5543.$f;
bits$1398 = (f$3880(w$3879,0));
return function(v$1402){var v$1409 = v$1402[0];
var v$1410 = v$1402[1];
var v$1406 = pickle$0bitstream$1.getwN$190(bits$1398,v$1409);
var v$1407 = v$1406[0];
var v$1408 = v$1406[1];
return (fix$5542.$getPUPI(v$1407))[1][4]([v$1408,v$1410]);
};
} else {return function(v$1414){var v$1421 = v$1414[0];
var v$1422 = v$1414[1];
var v$1418 = pickle$0bitstream$1.getcw2$438(v$1421);
var v$1419 = v$1418[0];
var v$1420 = v$1418[1];
return (fix$5542.$getPUPI(SmlPrims.chk_ovf_i32(v$1419)))[1][4]([v$1420,v$1422]);
};
};
};
};
fix$5542.$getPUP = function(v$1439){var v$1444 = res$1346[0];
switch (v$1444[0]) { case 1: {var pup$1449 = shareGen0$779(function(v$3871){return "Con" + (basis$0Int32$1.toString$458(v$1486(v$3871)));
},[0,[function(v$5383){return fix$5542.$eq(v$5383[0],v$5383[1]);
},function(v$5404){return function(v$5405){return fix$5542.$h(v$5404,v$5405);
};
},fix$5542.$p(0),typ$1337,fix$5542.$up(0)]]);
(res$1346[0] = [0,pup$1449],0);
return pup$1449;
 break; }default: {return v$1444[1];
} };
};
fix$5542.$getPUPI = function(i$1460){var v$1467 = ps$1347[0];
switch (v$1467[0]) { case 0: {(ps$1347[0] = [1],0);
var ps0$1470 = basis$0List$1.map$697(function(f$1473){return f$1473(fix$5542.$getPUP(0));
},v$1487);
var psv$1474 = basis$0Vector$1$3.fromList$230(ps0$1470);
(ps$1347[0] = [2,psv$1474],0);
var v$3859 = psv$1474.length;
if ((0 <= i$1460)?(i$1460 < v$3859):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return psv$1474[i$1460];
 break; }case 2: {var v$1469 = v$1467[1];
var v$3863 = v$1469.length;
if ((0 <= i$1460)?(i$1460 < v$3863):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$1469[i$1460];
 break; }default: {var s$3864 = "dataGen.Caching: " + v$1485;
var s$3865 = "Pickle." + s$3864;
basis$0General$1.print$163(s$3865 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$3865];
} };
};
fix$5542.$h = function(v$1479,p$3845){var v$3846 = p$3845[1];
if (v$3846 <= 0) {return p$3845;
} else {var i$5177 = v$1486(v$1479);
var h_arg$5178 = (fix$5542.$getPUPI(i$5177))[1][1];
var w$5179 = SmlPrims.i32_to_w32(i$5177);
var v$5180;
var v$5181 = (h_arg$5178(v$1479))(p$3845);
v$5180 = [(hash_data$1345 + ((v$5181[0] * 19) & 4294967295)) & 4294967295,v$5181[1]];
return [(w$5179 + ((v$5180[0] * 19) & 4294967295)) & 4294967295,v$5180[1]];
};
};
var eq$1352 = fix$5542.$eq;
var p$1354 = fix$5542.$p;
var up$1353 = fix$5542.$up;
var getPUP$1351 = fix$5542.$getPUP;
var getPUPI$1350 = fix$5542.$getPUPI;
var h$1349 = fix$5542.$h;
return getPUP$1351(0);
};
pickle$0pickle$1.dataGen$1488 = function(a$1491){return dataGen0$1328([1],a$1491);
};
pickle$0pickle$1.data2Gen$1492 = function(v$1685,v$1686,v$1687,v$1688,v$1689,v$1690){var aHashData$1501 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var bHashData$1502 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var aRes$1503 = [[1]];
var bRes$1504 = [[1]];
var aPs$1505 = [[0]];
var bPs$1506 = [[0]];
var fix$5549 = {};
fix$5549.$aEq = function(v$1552,v$1553){var n$1547 = v$1686(v$1552);
return (n$1547 == (v$1686(v$1553)))?((fix$5549.$aGetPUPI(n$1547))[1][0]([v$1552,v$1553])):false;
};
fix$5549.$aH = function(v$1671,p$3982){var v$3983 = p$3982[1];
if (v$3983 <= 0) {return p$3982;
} else {var i$5189 = v$1686(v$1671);
var h_arg$5190 = (fix$5549.$aGetPUPI(i$5189))[1][1];
var w$5191 = SmlPrims.i32_to_w32(i$5189);
var v$5192;
var v$5193 = (h_arg$5190(v$1671))(p$3982);
v$5192 = [(aHashData$1501 + ((v$5193[0] * 19) & 4294967295)) & 4294967295,v$5193[1]];
return [(w$5191 + ((v$5192[0] * 19) & 4294967295)) & 4294967295,v$5192[1]];
};
};
fix$5549.$aP = function(v$1521,s$1524){var i$1525 = v$1686(v$1521);
var s$1526 = pickle$0bitstream$1.outcw$398(SmlPrims.i32_to_w32(i$1525),s$1524);
return ((fix$5549.$aGetPUPI(i$1525))[1][2](v$1521))(s$1526);
};
fix$5549.$aGetPUPI = function(i$1577){var v$1584 = aPs$1505[0];
switch (v$1584[0]) { case 0: {(aPs$1505[0] = [1],0);
var ps0$1587 = basis$0List$1.map$697(function(f$1590){return f$1590([fix$5549.$aGetPUP(0),fix$5549.$bGetPUP(0)]);
},v$1687);
var psv$1591 = basis$0Vector$1$3.fromList$230(ps0$1587);
(aPs$1505[0] = [2,psv$1591],0);
var v$3971 = psv$1591.length;
if ((0 <= i$1577)?(i$1577 < v$3971):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return psv$1591[i$1577];
 break; }case 2: {var v$1586 = v$1584[1];
var v$3975 = v$1586.length;
if ((0 <= i$1577)?(i$1577 < v$3975):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$1586[i$1577];
 break; }default: {var s$3976 = "dataGen2.Caching.a: " + v$1685;
var s$3977 = "Pickle." + s$3976;
basis$0General$1.print$163(s$3977 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$3977];
} };
};
fix$5549.$aUp = function(v$1537,v$1538){var v$1534 = pickle$0bitstream$1.getcw$410(v$1537);
var v$1535 = v$1534[0];
var v$1536 = v$1534[1];
return (fix$5549.$aGetPUPI(SmlPrims.chk_ovf_i32(v$1535)))[1][4]([v$1536,v$1538]);
};
fix$5549.$aGetPUP = function(v$1555){var v$1560 = aRes$1503[0];
switch (v$1560[0]) { case 1: {var typ$1561;
var t$5557;
var fix$5554 = {};
fix$5554.$acc = function(v$3955,v$3956){lab$acc: while (true) {if (v$3955 == null) {return v$3956;
} else {var v$3957 = v$3955;
var v$3958 = v$3957[1];
var t$5555 = v$3958;
var t$5556 = SmlPrims.chk_ovf_i32(v$3956 + 1);
var v$3955 = t$5555;
var v$3956 = t$5556;
continue lab$acc;
};
};
};
var acc$3954 = fix$5554.$acc;
t$5557 = (acc$3954(v$1687,0));
typ$1561 = [21,t$5557];
var pup$1566 = shareGen0$779(function(v$3960){return "Con" + (basis$0Int32$1.toString$458(v$1686(v$3960)));
},[0,[function(v$5386){return fix$5549.$aEq(v$5386[0],v$5386[1]);
},function(v$5410){return function(v$5411){return fix$5549.$aH(v$5410,v$5411);
};
},function(v$5412){return function(v$5413){return fix$5549.$aP(v$5412,v$5413);
};
},typ$1561,function(v$5387){return fix$5549.$aUp(v$5387[0],v$5387[1]);
}]]);
(aRes$1503[0] = [0,pup$1566],0);
return pup$1566;
 break; }default: {return v$1560[1];
} };
};
fix$5549.$bEq = function(v$1627,v$1628){var n$1622 = v$1689(v$1627);
return (n$1622 == (v$1689(v$1628)))?((fix$5549.$bGetPUPI(n$1622))[1][0]([v$1627,v$1628])):false;
};
fix$5549.$bP = function(v$1596,s$1599){var i$1600 = v$1689(v$1596);
var s$1601 = pickle$0bitstream$1.outcw$398(SmlPrims.i32_to_w32(i$1600),s$1599);
return ((fix$5549.$bGetPUPI(i$1600))[1][2](v$1596))(s$1601);
};
fix$5549.$bUp = function(v$1612,v$1613){var v$1609 = pickle$0bitstream$1.getcw$410(v$1612);
var v$1610 = v$1609[0];
var v$1611 = v$1609[1];
return (fix$5549.$bGetPUPI(SmlPrims.chk_ovf_i32(v$1610)))[1][4]([v$1611,v$1613]);
};
fix$5549.$bGetPUP = function(v$1630){var v$1635 = bRes$1504[0];
switch (v$1635[0]) { case 1: {var typ$1636;
var t$5553;
var fix$5550 = {};
fix$5550.$acc = function(v$3938,v$3939){lab$acc: while (true) {if (v$3938 == null) {return v$3939;
} else {var v$3940 = v$3938;
var v$3941 = v$3940[1];
var t$5551 = v$3941;
var t$5552 = SmlPrims.chk_ovf_i32(v$3939 + 1);
var v$3938 = t$5551;
var v$3939 = t$5552;
continue lab$acc;
};
};
};
var acc$3937 = fix$5550.$acc;
t$5553 = (acc$3937(v$1690,0));
typ$1636 = [21,t$5553];
var pup$1641 = shareGen0$779(function(v$3943){return "Con" + (basis$0Int32$1.toString$458(v$1689(v$3943)));
},[0,[function(v$5384){return fix$5549.$bEq(v$5384[0],v$5384[1]);
},function(v$5406){return function(v$5407){return fix$5549.$bH(v$5406,v$5407);
};
},function(v$5408){return function(v$5409){return fix$5549.$bP(v$5408,v$5409);
};
},typ$1636,function(v$5385){return fix$5549.$bUp(v$5385[0],v$5385[1]);
}]]);
(bRes$1504[0] = [0,pup$1641],0);
return pup$1641;
 break; }default: {return v$1635[1];
} };
};
fix$5549.$bGetPUPI = function(i$1652){var v$1659 = bPs$1506[0];
switch (v$1659[0]) { case 0: {(bPs$1506[0] = [1],0);
var ps0$1662 = basis$0List$1.map$697(function(f$1665){return f$1665([fix$5549.$aGetPUP(0),fix$5549.$bGetPUP(0)]);
},v$1690);
var psv$1666 = basis$0Vector$1$3.fromList$230(ps0$1662);
(bPs$1506[0] = [2,psv$1666],0);
var v$3925 = psv$1666.length;
if ((0 <= i$1652)?(i$1652 < v$3925):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return psv$1666[i$1652];
 break; }case 2: {var v$1661 = v$1659[1];
var v$3929 = v$1661.length;
if ((0 <= i$1652)?(i$1652 < v$3929):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$1661[i$1652];
 break; }default: {var s$3930 = "dataGen2.Caching.b: " + v$1688;
var s$3931 = "Pickle." + s$3930;
basis$0General$1.print$163(s$3931 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$3931];
} };
};
fix$5549.$bH = function(v$1679,p$3911){var v$3912 = p$3911[1];
if (v$3912 <= 0) {return p$3911;
} else {var i$5183 = v$1689(v$1679);
var h_arg$5184 = (fix$5549.$bGetPUPI(i$5183))[1][1];
var w$5185 = SmlPrims.i32_to_w32(i$5183);
var v$5186;
var v$5187 = (h_arg$5184(v$1679))(p$3911);
v$5186 = [(bHashData$1502 + ((v$5187[0] * 19) & 4294967295)) & 4294967295,v$5187[1]];
return [(w$5185 + ((v$5186[0] * 19) & 4294967295)) & 4294967295,v$5186[1]];
};
};
var aEq$1516 = fix$5549.$aEq;
var aH$1508 = fix$5549.$aH;
var aP$1518 = fix$5549.$aP;
var aGetPUPI$1514 = fix$5549.$aGetPUPI;
var aUp$1517 = fix$5549.$aUp;
var aGetPUP$1515 = fix$5549.$aGetPUP;
var bEq$1511 = fix$5549.$bEq;
var bP$1513 = fix$5549.$bP;
var bUp$1512 = fix$5549.$bUp;
var bGetPUP$1510 = fix$5549.$bGetPUP;
var bGetPUPI$1509 = fix$5549.$bGetPUPI;
var bH$1507 = fix$5549.$bH;
return [aGetPUP$1515(0),bGetPUP$1510(0)];
};
pickle$0pickle$1.data3Gen$1691 = function(v$1979,v$1980,v$1981,v$1982,v$1983,v$1984,v$1985,v$1986,v$1987){var aHashData$1703 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var bHashData$1704 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var cHashData$1705 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var aRes$1706 = [[1]];
var bRes$1707 = [[1]];
var cRes$1708 = [[1]];
var aPs$1709 = [[0]];
var bPs$1710 = [[0]];
var cPs$1711 = [[0]];
var fix$5558 = {};
fix$5558.$bEq = function(v$1838,v$1839){var n$1833 = v$1983(v$1838);
return (n$1833 == (v$1983(v$1839)))?((fix$5558.$bGetPUPI(n$1833))[1][0]([v$1838,v$1839])):false;
};
fix$5558.$bH = function(v$1965,p$4114){var v$4115 = p$4114[1];
if (v$4115 <= 0) {return p$4114;
} else {var i$5211 = v$1983(v$1965);
var h_arg$5212 = (fix$5558.$bGetPUPI(i$5211))[1][1];
var w$5213 = SmlPrims.i32_to_w32(i$5211);
var v$5214;
var v$5215 = (h_arg$5212(v$1965))(p$4114);
v$5214 = [(bHashData$1704 + ((v$5215[0] * 19) & 4294967295)) & 4294967295,v$5215[1]];
return [(w$5213 + ((v$5214[0] * 19) & 4294967295)) & 4294967295,v$5214[1]];
};
};
fix$5558.$bP = function(v$1807,s$1810){var i$1811 = v$1983(v$1807);
var s$1812 = pickle$0bitstream$1.outcw$398(SmlPrims.i32_to_w32(i$1811),s$1810);
return ((fix$5558.$bGetPUPI(i$1811))[1][2](v$1807))(s$1812);
};
fix$5558.$aEq = function(v$1763,v$1764){var n$1758 = v$1980(v$1763);
return (n$1758 == (v$1980(v$1764)))?((fix$5558.$aGetPUPI(n$1758))[1][0]([v$1763,v$1764])):false;
};
fix$5558.$aH = function(v$1957,p$4101){var v$4102 = p$4101[1];
if (v$4102 <= 0) {return p$4101;
} else {var i$5205 = v$1980(v$1957);
var h_arg$5206 = (fix$5558.$aGetPUPI(i$5205))[1][1];
var w$5207 = SmlPrims.i32_to_w32(i$5205);
var v$5208;
var v$5209 = (h_arg$5206(v$1957))(p$4101);
v$5208 = [(aHashData$1703 + ((v$5209[0] * 19) & 4294967295)) & 4294967295,v$5209[1]];
return [(w$5207 + ((v$5208[0] * 19) & 4294967295)) & 4294967295,v$5208[1]];
};
};
fix$5558.$aP = function(v$1732,s$1735){var i$1736 = v$1980(v$1732);
var s$1737 = pickle$0bitstream$1.outcw$398(SmlPrims.i32_to_w32(i$1736),s$1735);
return ((fix$5558.$aGetPUPI(i$1736))[1][2](v$1732))(s$1737);
};
fix$5558.$aGetPUPI = function(i$1788){var v$1795 = aPs$1709[0];
switch (v$1795[0]) { case 0: {(aPs$1709[0] = [1],0);
var ps0$1798 = basis$0List$1.map$697(function(f$1801){return f$1801([fix$5558.$aGetPUP(0),fix$5558.$bGetPUP(0),fix$5558.$cGetPUP(0)]);
},v$1981);
var psv$1802 = basis$0Vector$1$3.fromList$230(ps0$1798);
(aPs$1709[0] = [2,psv$1802],0);
var v$4090 = psv$1802.length;
if ((0 <= i$1788)?(i$1788 < v$4090):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return psv$1802[i$1788];
 break; }case 2: {var v$1797 = v$1795[1];
var v$4094 = v$1797.length;
if ((0 <= i$1788)?(i$1788 < v$4094):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$1797[i$1788];
 break; }default: {var s$4095 = "dataGen3.Caching.a: " + v$1979;
var s$4096 = "Pickle." + s$4095;
basis$0General$1.print$163(s$4096 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$4096];
} };
};
fix$5558.$aUp = function(v$1748,v$1749){var v$1745 = pickle$0bitstream$1.getcw$410(v$1748);
var v$1746 = v$1745[0];
var v$1747 = v$1745[1];
return (fix$5558.$aGetPUPI(SmlPrims.chk_ovf_i32(v$1746)))[1][4]([v$1747,v$1749]);
};
fix$5558.$aGetPUP = function(v$1766){var v$1771 = aRes$1706[0];
switch (v$1771[0]) { case 1: {var typ$1772;
var t$5570;
var fix$5567 = {};
fix$5567.$acc = function(v$4074,v$4075){lab$acc: while (true) {if (v$4074 == null) {return v$4075;
} else {var v$4076 = v$4074;
var v$4077 = v$4076[1];
var t$5568 = v$4077;
var t$5569 = SmlPrims.chk_ovf_i32(v$4075 + 1);
var v$4074 = t$5568;
var v$4075 = t$5569;
continue lab$acc;
};
};
};
var acc$4073 = fix$5567.$acc;
t$5570 = (acc$4073(v$1981,0));
typ$1772 = [21,t$5570];
var pup$1777 = shareGen0$779(function(v$4079){return "Con" + (basis$0Int32$1.toString$458(v$1980(v$4079)));
},[0,[function(v$5392){return fix$5558.$aEq(v$5392[0],v$5392[1]);
},function(v$5422){return function(v$5423){return fix$5558.$aH(v$5422,v$5423);
};
},function(v$5424){return function(v$5425){return fix$5558.$aP(v$5424,v$5425);
};
},typ$1772,function(v$5393){return fix$5558.$aUp(v$5393[0],v$5393[1]);
}]]);
(aRes$1706[0] = [0,pup$1777],0);
return pup$1777;
 break; }default: {return v$1771[1];
} };
};
fix$5558.$bGetPUPI = function(i$1863){var v$1870 = bPs$1710[0];
switch (v$1870[0]) { case 0: {(bPs$1710[0] = [1],0);
var ps0$1873 = basis$0List$1.map$697(function(f$1876){return f$1876([fix$5558.$aGetPUP(0),fix$5558.$bGetPUP(0),fix$5558.$cGetPUP(0)]);
},v$1984);
var psv$1877 = basis$0Vector$1$3.fromList$230(ps0$1873);
(bPs$1710[0] = [2,psv$1877],0);
var v$4061 = psv$1877.length;
if ((0 <= i$1863)?(i$1863 < v$4061):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return psv$1877[i$1863];
 break; }case 2: {var v$1872 = v$1870[1];
var v$4065 = v$1872.length;
if ((0 <= i$1863)?(i$1863 < v$4065):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$1872[i$1863];
 break; }default: {var s$4066 = "dataGen3.Caching.b: " + v$1982;
var s$4067 = "Pickle." + s$4066;
basis$0General$1.print$163(s$4067 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$4067];
} };
};
fix$5558.$bUp = function(v$1823,v$1824){var v$1820 = pickle$0bitstream$1.getcw$410(v$1823);
var v$1821 = v$1820[0];
var v$1822 = v$1820[1];
return (fix$5558.$bGetPUPI(SmlPrims.chk_ovf_i32(v$1821)))[1][4]([v$1822,v$1824]);
};
fix$5558.$bGetPUP = function(v$1841){var v$1846 = bRes$1707[0];
switch (v$1846[0]) { case 1: {var typ$1847;
var t$5566;
var fix$5563 = {};
fix$5563.$acc = function(v$4045,v$4046){lab$acc: while (true) {if (v$4045 == null) {return v$4046;
} else {var v$4047 = v$4045;
var v$4048 = v$4047[1];
var t$5564 = v$4048;
var t$5565 = SmlPrims.chk_ovf_i32(v$4046 + 1);
var v$4045 = t$5564;
var v$4046 = t$5565;
continue lab$acc;
};
};
};
var acc$4044 = fix$5563.$acc;
t$5566 = (acc$4044(v$1984,0));
typ$1847 = [21,t$5566];
var pup$1852 = shareGen0$779(function(v$4050){return "Con" + (basis$0Int32$1.toString$458(v$1983(v$4050)));
},[0,[function(v$5390){return fix$5558.$bEq(v$5390[0],v$5390[1]);
},function(v$5418){return function(v$5419){return fix$5558.$bH(v$5418,v$5419);
};
},function(v$5420){return function(v$5421){return fix$5558.$bP(v$5420,v$5421);
};
},typ$1847,function(v$5391){return fix$5558.$bUp(v$5391[0],v$5391[1]);
}]]);
(bRes$1707[0] = [0,pup$1852],0);
return pup$1852;
 break; }default: {return v$1846[1];
} };
};
fix$5558.$cEq = function(v$1913,v$1914){var n$1908 = v$1986(v$1913);
return (n$1908 == (v$1986(v$1914)))?((fix$5558.$cGetPUPI(n$1908))[1][0]([v$1913,v$1914])):false;
};
fix$5558.$cP = function(v$1882,s$1885){var i$1886 = v$1986(v$1882);
var s$1887 = pickle$0bitstream$1.outcw$398(SmlPrims.i32_to_w32(i$1886),s$1885);
return ((fix$5558.$cGetPUPI(i$1886))[1][2](v$1882))(s$1887);
};
fix$5558.$cUp = function(v$1898,v$1899){var v$1895 = pickle$0bitstream$1.getcw$410(v$1898);
var v$1896 = v$1895[0];
var v$1897 = v$1895[1];
return (fix$5558.$cGetPUPI(SmlPrims.chk_ovf_i32(v$1896)))[1][4]([v$1897,v$1899]);
};
fix$5558.$cGetPUP = function(v$1916){var v$1921 = cRes$1708[0];
switch (v$1921[0]) { case 1: {var typ$1922;
var t$5562;
var fix$5559 = {};
fix$5559.$acc = function(v$4028,v$4029){lab$acc: while (true) {if (v$4028 == null) {return v$4029;
} else {var v$4030 = v$4028;
var v$4031 = v$4030[1];
var t$5560 = v$4031;
var t$5561 = SmlPrims.chk_ovf_i32(v$4029 + 1);
var v$4028 = t$5560;
var v$4029 = t$5561;
continue lab$acc;
};
};
};
var acc$4027 = fix$5559.$acc;
t$5562 = (acc$4027(v$1987,0));
typ$1922 = [21,t$5562];
var pup$1927 = shareGen0$779(function(v$4033){return "Con" + (basis$0Int32$1.toString$458(v$1986(v$4033)));
},[0,[function(v$5388){return fix$5558.$cEq(v$5388[0],v$5388[1]);
},function(v$5414){return function(v$5415){return fix$5558.$cH(v$5414,v$5415);
};
},function(v$5416){return function(v$5417){return fix$5558.$cP(v$5416,v$5417);
};
},typ$1922,function(v$5389){return fix$5558.$cUp(v$5389[0],v$5389[1]);
}]]);
(cRes$1708[0] = [0,pup$1927],0);
return pup$1927;
 break; }default: {return v$1921[1];
} };
};
fix$5558.$cGetPUPI = function(i$1938){var v$1945 = cPs$1711[0];
switch (v$1945[0]) { case 0: {(cPs$1711[0] = [1],0);
var ps0$1948 = basis$0List$1.map$697(function(f$1951){return f$1951([fix$5558.$aGetPUP(0),fix$5558.$bGetPUP(0),fix$5558.$cGetPUP(0)]);
},v$1987);
var psv$1952 = basis$0Vector$1$3.fromList$230(ps0$1948);
(cPs$1711[0] = [2,psv$1952],0);
var v$4015 = psv$1952.length;
if ((0 <= i$1938)?(i$1938 < v$4015):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return psv$1952[i$1938];
 break; }case 2: {var v$1947 = v$1945[1];
var v$4019 = v$1947.length;
if ((0 <= i$1938)?(i$1938 < v$4019):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
return v$1947[i$1938];
 break; }default: {var s$4020 = "dataGen3.Caching.c: " + v$1985;
var s$4021 = "Pickle." + s$4020;
basis$0General$1.print$163(s$4021 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$4021];
} };
};
fix$5558.$cH = function(v$1973,p$4001){var v$4002 = p$4001[1];
if (v$4002 <= 0) {return p$4001;
} else {var i$5199 = v$1986(v$1973);
var h_arg$5200 = (fix$5558.$cGetPUPI(i$5199))[1][1];
var w$5201 = SmlPrims.i32_to_w32(i$5199);
var v$5202;
var v$5203 = (h_arg$5200(v$1973))(p$4001);
v$5202 = [(cHashData$1705 + ((v$5203[0] * 19) & 4294967295)) & 4294967295,v$5203[1]];
return [(w$5201 + ((v$5202[0] * 19) & 4294967295)) & 4294967295,v$5202[1]];
};
};
var bEq$1722 = fix$5558.$bEq;
var bH$1713 = fix$5558.$bH;
var bP$1724 = fix$5558.$bP;
var aEq$1727 = fix$5558.$aEq;
var aH$1714 = fix$5558.$aH;
var aP$1729 = fix$5558.$aP;
var aGetPUPI$1725 = fix$5558.$aGetPUPI;
var aUp$1728 = fix$5558.$aUp;
var aGetPUP$1726 = fix$5558.$aGetPUP;
var bGetPUPI$1720 = fix$5558.$bGetPUPI;
var bUp$1723 = fix$5558.$bUp;
var bGetPUP$1721 = fix$5558.$bGetPUP;
var cEq$1717 = fix$5558.$cEq;
var cP$1719 = fix$5558.$cP;
var cUp$1718 = fix$5558.$cUp;
var cGetPUP$1716 = fix$5558.$cGetPUP;
var cGetPUPI$1715 = fix$5558.$cGetPUPI;
var cH$1712 = fix$5558.$cH;
return [aGetPUP$1726(0),bGetPUP$1721(0),cGetPUP$1716(0)];
};
pickle$0pickle$1.con0$1988 = function(b$1991,v$1993){return [0,[function(v$4126){return true;
},function(v$4127){return function(p$4128){return p$4128;
};
},function(v$4129){return function(s$4130){return s$4130;
};
},[24],function(is$4131){return [b$1991,is$4131];
}]];
};
pickle$0pickle$1.con1$2014 = function(con$2017,decon$2020,pu$2023){return [0,[function(v$4139){var v$4140 = v$4139[0];
var v$4141 = v$4139[1];
return pu$2023[1][0]([decon$2020(v$4140),decon$2020(v$4141)]);
},function(b$4142){return function(p$4145){var v$4146 = p$4145[1];
return (v$4146 <= 0)?p$4145:((pu$2023[1][1](decon$2020(b$4142)))(p$4145));
};
},function(b$4148){return pu$2023[1][2](decon$2020(b$4148));
},[23],function(is$4149){var v$4150 = pu$2023[1][4](is$4149);
var v$4151 = v$4150[0];
var v$4152 = v$4150[1];
return [con$2017(v$4151),v$4152];
}]];
};
pickle$0pickle$1.newHash$2053 = function(f$2056,pu$2059){return [0,[pu$2059[1][0],function(x$4158){var x$5249 = f$2056(x$4158);
var x$5250 = SmlPrims.i32_to_w32(x$5249);
return function(p$5251){var v$5252 = p$5251[1];
return (v$5252 <= 0)?p$5251:[(x$5250 + ((p$5251[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$5251[1] - 1)];
};
},pu$2059[1][2],pu$2059[1][3],pu$2059[1][4]]];
};
pickle$0pickle$1.maybeNewHash$2065 = function(f$2068,pu$2071){return [0,[pu$2071[1][0],function(a$4185){return function(p$4192){var v$4193 = p$4192[1];
if (v$4193 <= 0) {return p$4192;
} else {var v$4195 = f$2068(a$4185);
switch (v$4195[0]) { case 0: {return [((SmlPrims.i32_to_w32(v$4195[1])) + ((p$4192[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$4192[1] - 1)];
 break; }default: {return (pu$2071[1][1](a$4185))(p$4192);
} };
};
};
},pu$2071[1][2],pu$2071[1][3],pu$2071[1][4]]];
};
pickle$0pickle$1.combHash$2090 = function(f$2093,pu$2096){return [0,[pu$2096[1][0],function(a$4210){return function(p$4219){var v$4220 = p$4219[1];
if (v$4220 <= 0) {return p$4219;
} else {var p$4222 = [((SmlPrims.i32_to_w32(f$2093(a$4210))) + ((p$4219[0] * 65599) & 4294967295)) & 4294967295,SmlPrims.chk_ovf_i32(p$4219[1] - 1)];
var f$4223 = pu$2096[1][1](a$4210);
var v$4224 = p$4222[1];
if (v$4224 <= 0) {return p$4222;
} else {return f$4223(p$4222);
};
};
};
},pu$2096[1][2],pu$2096[1][3],pu$2096[1][4]]];
};
pickle$0pickle$1.listGen$2109 = function(pu_a$2112){var x$4229;
var f_nil$2121;
var b$4245 = null;
f_nil$2121 = (function(v$4246){return [0,[function(v$4247){return true;
},function(v$4248){return function(p$4249){return p$4249;
};
},function(v$4250){return function(s$4251){return s$4251;
};
},[24],function(is$4252){return [b$4245,is$4252];
}]];
});
x$4229 = (dataGen0$1328([0,[15,pu_a$2112[1][3]]],["list",function(v$4258){return (v$4258 == null)?0:1;
},[f_nil$2121,[function(pu$4259){var pu$5277 = pickle$0pickle$1.pairGen0$983(pu_a$2112,pu$4259);
return [0,[function(v$5278){var v$5279 = v$5278[0];
var v$5280 = v$5278[1];
var t$5579 = pu$5277[1][0];
var t$5578;
var t$5577;
if (v$5279 == null) {basis$0General$1.print$163("Pickle.cons\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.cons"];
} else {t$5577 = v$5279;
};
var t$5576;
if (v$5280 == null) {basis$0General$1.print$163("Pickle.cons\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.cons"];
} else {t$5576 = v$5280;
};
t$5578 = [t$5577,t$5576];
return t$5579(t$5578);
},function(b$5281){return function(p$5282){var v$5283 = p$5282[1];
if (v$5283 <= 0) {return p$5282;
} else {var t$5575;
var t$5574 = pu$5277[1][1];
var t$5573;
if (b$5281 == null) {basis$0General$1.print$163("Pickle.cons\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.cons"];
} else {t$5573 = b$5281;
};
t$5575 = (t$5574(t$5573));
return t$5575(p$5282);
};
};
},function(b$5284){var t$5572 = pu$5277[1][2];
var t$5571;
if (b$5284 == null) {basis$0General$1.print$163("Pickle.cons\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.cons"];
} else {t$5571 = b$5284;
};
return t$5572(t$5571);
},[23],function(is$5285){var v$5286 = pu$5277[1][4](is$5285);
return [v$5286[0],v$5286[1]];
}]];
},null]]]));
return [0,[x$4229[1][0],function(a$5291){return function(p$5292){var v$5293 = p$5292[1];
if (v$5293 <= 0) {return p$5292;
} else {var p$5294;
var t$5585;
var t$5584;
var t$5583;
var fix$5580 = {};
fix$5580.$acc = function(v$5296,v$5297){lab$acc: while (true) {if (v$5296 == null) {return v$5297;
} else {var v$5298 = v$5296;
var v$5299 = v$5298[1];
var t$5581 = v$5299;
var t$5582 = SmlPrims.chk_ovf_i32(v$5297 + 1);
var v$5296 = t$5581;
var v$5297 = t$5582;
continue lab$acc;
};
};
};
var acc$5295 = fix$5580.$acc;
t$5583 = (acc$5295(a$5291,0));
t$5584 = (SmlPrims.i32_to_w32(t$5583));
t$5585 = ((t$5584 + ((p$5292[0] * 65599) & 4294967295)) & 4294967295);
p$5294 = [t$5585,SmlPrims.chk_ovf_i32(p$5292[1] - 1)];
var f$5300 = x$4229[1][1](a$5291);
var v$5301 = p$5294[1];
if (v$5301 <= 0) {return p$5294;
} else {return f$5300(p$5294);
};
};
};
},x$4229[1][2],x$4229[1][3],x$4229[1][4]]];
};
pickle$0pickle$1.optionGen$2134 = function(pu_a$2137){var fun_NONE$2146;
var b$4266 = [1];
fun_NONE$2146 = (function(v$4267){return [0,[function(v$4268){return true;
},function(v$4269){return function(p$4270){return p$4270;
};
},function(v$4271){return function(s$4272){return s$4272;
};
},[24],function(is$4273){return [b$4266,is$4273];
}]];
});
return dataGen0$1328([0,[14,pu_a$2137[1][3]]],["option",function(v$4279){switch (v$4279[0]) { case 1: {return 0;
 break; }default: {return 1;
} };
},[fun_NONE$2146,[function(v$4280){return [0,[function(v$5307){var v$5308 = v$5307[0];
var v$5309 = v$5307[1];
var t$5594 = pu_a$2137[1][0];
var t$5593;
var t$5592;
switch (v$5308[0]) { case 0: {t$5592 = v$5308[1];
 break; }default: {basis$0General$1.print$163("Pickle.option\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.option"];
} };
var t$5591;
switch (v$5309[0]) { case 0: {t$5591 = v$5309[1];
 break; }default: {basis$0General$1.print$163("Pickle.option\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.option"];
} };
t$5593 = [t$5592,t$5591];
return t$5594(t$5593);
},function(b$5310){return function(p$5311){var v$5312 = p$5311[1];
if (v$5312 <= 0) {return p$5311;
} else {var t$5590;
var t$5589 = pu_a$2137[1][1];
var t$5588;
switch (b$5310[0]) { case 0: {t$5588 = b$5310[1];
 break; }default: {basis$0General$1.print$163("Pickle.option\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.option"];
} };
t$5590 = (t$5589(t$5588));
return t$5590(p$5311);
};
};
},function(b$5313){var t$5587 = pu_a$2137[1][2];
var t$5586;
switch (b$5313[0]) { case 0: {t$5586 = b$5313[1];
 break; }default: {basis$0General$1.print$163("Pickle.option\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.option"];
} };
return t$5587(t$5586);
},[23],function(is$5314){var v$5315 = pu_a$2137[1][4](is$5314);
return [[0,v$5315[0]],v$5315[1]];
}]];
},null]]]);
};
pickle$0pickle$1.enumGen$2158 = function(v$2790,v$2162){var v$2261 = v$2162[1];
var v$2248;
var fix$5595 = {};
fix$5595.$foldl = function(v$4297,v$4298){lab$foldl: while (true) {if (v$4298 == null) {return v$4297;
} else {var v$4299 = v$4298;
var v$4300 = v$4299[0];
var v$4301 = v$4299[1];
var t$5596;
var v$4306 = v$4297[0];
var v$4307 = v$4297[1];
t$5596 = [[[v$4300,SmlPrims.i32_to_w32(v$4307)],v$4306],SmlPrims.chk_ovf_i32(v$4307 + 1)];
var t$5597 = t$5596;
var t$5598 = v$4301;
var v$4297 = t$5597;
var v$4298 = t$5598;
continue lab$foldl;
};
};
};
var foldl$4296 = fix$5595.$foldl;
var v$5426 = [null,0];
v$2248 = (foldl$4296(v$5426,v$2261));
var v$2249 = v$2248[0];
var hash_enum$2218 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var t$5624;
var t$5623 = function(v$4417){var v$4418 = v$4417[0];
var v$4419 = v$4417[1];
return v$2790([v$4418,v$4419]);
};
var t$5622 = function(v$4420){return function(p$4446){var v$4447 = p$4446[1];
if (v$4447 <= 0) {return p$4446;
} else {var t$5621;
var t$5620 = hash_enum$2218;
var t$5619;
var t$5618;
var t$5617;
var fix$5614 = {};
fix$5614.$lookupw = function(v$4451,v$4452){lab$lookupw: while (true) {if (v$4451 == null) {basis$0General$1.print$163("Pickle.enumGen.unknown constructor\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.enumGen.unknown constructor"];
} else {var v$4458 = v$4451;
var v$4459 = v$4458[0];
var v$4460 = v$4459[0];
var v$4461 = v$4459[1];
var v$4462 = v$4458[1];
if (v$2790([v$4460,v$4452])) {return v$4461;
} else {var t$5615 = v$4462;
var t$5616 = v$4452;
var v$4451 = t$5615;
var v$4452 = t$5616;
continue lab$lookupw;
};
};
};
};
var lookupw$4450 = fix$5614.$lookupw;
t$5617 = (lookupw$4450(v$2249,v$4420));
t$5618 = ((t$5617 + ((p$4446[0] * 19) & 4294967295)) & 4294967295);
t$5619 = ((t$5618 * 19) & 4294967295);
t$5621 = ((t$5620 + t$5619) & 4294967295);
return [t$5621,p$4446[1]];
};
};
};
var t$5613 = function(v$4467){return function(s$4468){var t$5612 = pickle$0bitstream$1.outcw$398;
var t$5611;
var fix$5608 = {};
fix$5608.$lookupw = function(v$4470,v$4471){lab$lookupw: while (true) {if (v$4470 == null) {basis$0General$1.print$163("Pickle.enumGen.unknown constructor\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.enumGen.unknown constructor"];
} else {var v$4478 = v$4470;
var v$4479 = v$4478[0];
var v$4480 = v$4479[0];
var v$4481 = v$4479[1];
var v$4482 = v$4478[1];
if (v$2790([v$4480,v$4471])) {return v$4481;
} else {var t$5609 = v$4482;
var t$5610 = v$4471;
var v$4470 = t$5609;
var v$4471 = t$5610;
continue lab$lookupw;
};
};
};
};
var lookupw$4469 = fix$5608.$lookupw;
t$5611 = (lookupw$4469(v$2249,v$4467));
return t$5612(t$5611,s$4468);
};
};
var t$5607;
var t$5606;
var fix$5603 = {};
fix$5603.$acc = function(v$4490,v$4491){lab$acc: while (true) {if (v$4490 == null) {return v$4491;
} else {var v$4492 = v$4490;
var v$4493 = v$4492[1];
var t$5604 = v$4493;
var t$5605 = SmlPrims.chk_ovf_i32(v$4491 + 1);
var v$4490 = t$5604;
var v$4491 = t$5605;
continue lab$acc;
};
};
};
var acc$4489 = fix$5603.$acc;
t$5606 = (acc$4489(v$2261,0));
t$5607 = [19,t$5606];
t$5624 = [t$5623,t$5622,t$5613,t$5607,function(v$4494){var v$4495 = v$4494[0];
var v$4496 = v$4494[1];
var v$4497 = pickle$0bitstream$1.getcw$410(v$4495);
var v$4498 = v$4497[0];
var v$4499 = v$4497[1];
var t$5602;
var fix$5599 = {};
fix$5599.$lookupv = function(v$4501,v$4502){lab$lookupv: while (true) {if (v$4501 == null) {basis$0General$1.print$163("Pickle.enumGen.unknown constructor tag\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.enumGen.unknown constructor tag"];
} else {var v$4509 = v$4501;
var v$4510 = v$4509[0];
var v$4511 = v$4510[0];
var v$4512 = v$4510[1];
var v$4513 = v$4509[1];
if (v$4512 == v$4502) {return v$4511;
} else {var t$5600 = v$4513;
var t$5601 = v$4502;
var v$4501 = t$5600;
var v$4502 = t$5601;
continue lab$lookupv;
};
};
};
};
var lookupv$4500 = fix$5599.$lookupv;
t$5602 = (lookupv$4500(v$2249,v$4498));
return [t$5602,[v$4499,v$4496]];
}];
return [0,t$5624];
};
pickle$0pickle$1.pickle$2262 = function(pu$2265,v$2268){reset_fun$94[0](0);
var os$2269;
var t$5625;
var t$4523 = Array(1024);
var fix$5626 = {};
fix$5626.$loop = function(j$4525){lab$loop: while (true) {if (j$4525 < 1024) {(t$4523[j$4525] = 0,0);
var t$5627 = SmlPrims.chk_ovf_i32(j$4525 + 1);
var j$4525 = t$5627;
continue lab$loop;
} else {return 0;
};
};
};
var loop$4524 = fix$5626.$loop;
loop$4524(0);
t$5625 = t$4523;
os$2269 = [t$5625,0];
var os$2270 = (pu$2265[1][2](v$2268))(os$2269);
return pickle$0bitstream$1.toString$495(os$2270[0],os$2270[1]);
};
pickle$0pickle$1.unpickle$2271 = function(pu$2274,s$2277){reset_fun$94[0](0);
var t$5635;
var t$5634 = pu$2274[1][4];
var t$5633;
var t$5632 = [s$2277,0];
var t$5628;
var v$5324 = exn$PickleExn$93;
var v$5325;
var t$5629;
var v$5326;
var nw$5327 = SmlPrims.i32_to_w32(10);
var fix$5630 = {};
fix$5630.$f = function(i$5329){lab$f: while (true) {if (i$5329 >= nw$5327) {return i$5329;
} else {var t$5631 = (i$5329 << (1 & 31)) & 4294967295;
var i$5329 = t$5631;
continue lab$f;
};
};
};
var f$5328 = fix$5630.$f;
v$5326 = (SmlPrims.chk_ovf_i32(f$5328(32)));
var v$5330 = null;
if ((0 <= v$5326)?(v$5326 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$5629 = (SmlPrims.wordTableInit(v$5326,v$5330));
v$5325 = [t$5629];
t$5628 = [function(x$5457){return SmlPrims.w32_to_i32_X(pickle$0eqhashdyn2$1.hash$130(12,x$5457));
},[0],v$5324,function(v$5394){return pickle$0eqhashdyn2$1.eq$119(v$5394[0],v$5394[1]);
},v$5325];
t$5633 = [t$5632,t$5628];
t$5635 = (t$5634(t$5633));
return t$5635[0];
};
pickle$0pickle$1.unpickle$$2282 = function(pu$2285,hce$2288,s$2291){reset_fun$94[0](0);
var v$2295 = pu$2285[1][4]([[s$2291,0],hce$2288]);
return [v$2295[0],v$2295[1][1]];
};
pickle$0pickle$1.convert0$2299 = function(v$2340,v$2341){return function(pu$2306){var hash_conv$2307 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
return [0,[function(v$4548){var v$4549 = v$4548[0];
var v$4550 = v$4548[1];
return pu$2306[1][0]([v$2341(v$4549),v$2341(v$4550)]);
},function(v$4551){return function(p$4560){var v$4561 = p$4560[1];
if (v$4561 <= 0) {return p$4560;
} else {var v$4563;
var t$5636;
var v$5062 = pu$2306[1][1];
t$5636 = (v$5062(v$2341(v$4551)));
v$4563 = (t$5636(p$4560));
return [(hash_conv$2307 + ((v$4563[0] * 19) & 4294967295)) & 4294967295,v$4563[1]];
};
};
},function(v$4567){return function(s$4568){return (pu$2306[1][2](v$2341(v$4567)))(s$4568);
};
},[22,pu$2306[1][3]],function(is$4570){var v$4571 = pu$2306[1][4](is$4570);
var v$4572 = v$4571[0];
var v$4573 = v$4571[1];
return [v$2340(v$4572),v$4573];
}]];
};
};
pickle$0pickle$1.convert$2342 = function(a$2345,b$2348){return pickle$0pickle$1.shareGen$878((pickle$0pickle$1.convert0$2299(a$2345[0],a$2345[1]))(b$2348));
};
pickle$0pickle$1.tup3Gen0$2349 = function(v$2374,v$2375,v$2376){return (pickle$0pickle$1.convert0$2299(function(v$4574){var v$4575 = v$4574[0];
var v$4576 = v$4574[1];
return [v$4575,v$4576[0],v$4576[1]];
},function(v$4577){return [v$4577[0],[v$4577[1],v$4577[2]]];
}))(pickle$0pickle$1.pairGen0$983(v$2374,pickle$0pickle$1.pairGen0$983(v$2375,v$2376)));
};
pickle$0pickle$1.tup4Gen0$2377 = function(v$2408,v$2409,v$2410,v$2411){return (pickle$0pickle$1.convert0$2299(function(v$4578){var v$4579 = v$4578[0];
var v$4580 = v$4579[0];
var v$4581 = v$4579[1];
var v$4582 = v$4578[1];
return [v$4580,v$4581,v$4582[0],v$4582[1]];
},function(v$4583){return [[v$4583[0],v$4583[1]],[v$4583[2],v$4583[3]]];
}))(pickle$0pickle$1.pairGen0$983(pickle$0pickle$1.pairGen0$983(v$2408,v$2409),pickle$0pickle$1.pairGen0$983(v$2410,v$2411)));
};
pickle$0pickle$1.tup3Gen$2412 = function(v$5395,v$5396,v$5397){return pickle$0pickle$1.shareGen$878((pickle$0pickle$1.convert0$2299(function(v$4588){var v$4589 = v$4588[0];
var v$4590 = v$4588[1];
return [v$4589,v$4590[0],v$4590[1]];
},function(v$4591){return [v$4591[0],[v$4591[1],v$4591[2]]];
}))(pickle$0pickle$1.pairGen0$983(v$5395,pickle$0pickle$1.pairGen0$983(v$5396,v$5397))));
};
pickle$0pickle$1.tup4Gen$2416 = function(v$5398,v$5399,v$5400,v$5401){return pickle$0pickle$1.shareGen$878((pickle$0pickle$1.convert0$2299(function(v$4597){var v$4598 = v$4597[0];
var v$4599 = v$4598[0];
var v$4600 = v$4598[1];
var v$4601 = v$4597[1];
return [v$4599,v$4600,v$4601[0],v$4601[1]];
},function(v$4602){return [[v$4602[0],v$4602[1]],[v$4602[2],v$4602[3]]];
}))(pickle$0pickle$1.pairGen0$983(pickle$0pickle$1.pairGen0$983(v$5398,v$5399),pickle$0pickle$1.pairGen0$983(v$5400,v$5401))));
};
pickle$0pickle$1.vectorGen$2420 = function(pu$2423){var v$5460;
var e$4606 = null;
v$5460 = (function(a$4607){var n$4608 = a$4607.length;
var fix$5637 = {};
fix$5637.$rl = function(v$4611,v$4612){lab$rl: while (true) {if (v$4611 >= 0) {var t$5638 = SmlPrims.chk_ovf_i32(v$4611 - 1);
var t$5639 = [a$4607[v$4611],v$4612];
var v$4611 = t$5638;
var v$4612 = t$5639;
continue lab$rl;
} else {return v$4612;
};
};
};
var rl$4609 = fix$5637.$rl;
return rl$4609(SmlPrims.chk_ovf_i32(n$4608 - 1),e$4606);
});
var b$4604 = pickle$0pickle$1.listGen$2109(pu$2423);
return pickle$0pickle$1.shareGen$878((pickle$0pickle$1.convert0$2299(function(v$5468){return basis$0Vector$1$3.fromList$230(v$5468);
},v$5460))(b$4604));
};
pickle$0pickle$1.real$2425 = pickle$0pickle$1.shareGen$878((pickle$0pickle$1.convert0$2299(function(s$5465){var v$5466 = basis$0Real$1.fromString$504(s$5465);
switch (v$5466[0]) { case 0: {return v$5466[1];
 break; }default: {basis$0General$1.print$163("Pickle.real.impossible\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.real.impossible"];
} };
},function(v$5469){return basis$0Real$1.toString$160(v$5469);
}))(pickle$0pickle$1.string$909));
pickle$0pickle$1.time$2436 = pickle$0pickle$1.shareGen$878((pickle$0pickle$1.convert0$2299(function(v$5470){return basis$0Time$1.fromReal$113(v$5470);
},function(v$5467){return (v$5467[0] - (-2147483648)) + (v$5467[1] / 1000000.0);
}))(pickle$0pickle$1.real$2425));
pickle$0pickle$1.unit$2437 = [0,[function(v$4628){return true;
},function(v$4629){return function(p$4634){var v$4635 = p$4634[1];
return (v$4635 <= 0)?p$4634:[(23 + ((p$4634[0] * 19) & 4294967295)) & 4294967295,p$4634[1]];
};
},function(v$4637){return function(x$4638){return x$4638;
};
},[5],function(is$4639){return [0,is$4639];
}]];
pickle$0pickle$1.cache$2484 = function(s$2487){var C$5345 = [[0]];
return function(f$5346){return function(a$5347){var v$5348 = C$5345[0];
switch (v$5348[0]) { case 2: {return v$5348[1];
 break; }case 0: {(C$5345[0] = [1],0);
var v$5349 = f$5346(a$5347);
switch (C$5345[0][0]) { case 1: {(C$5345[0] = [2,v$5349],0);
return v$5349;
 break; }default: {basis$0General$1.print$163("Pickle.cacheNew impossible\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.cacheNew impossible"];
} };
 break; }default: {var s$5350 = "recursive cache appearance for " + s$2487;
var s$5351 = "Pickle." + s$5350;
basis$0General$1.print$163(s$5351 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$5351];
} };
};
};
};
pickle$0pickle$1.cache2$2488 = function(s$2491){var C$5353 = [[0]];
return function(f$5354){return function(a$5355){var v$5356 = C$5353[0];
switch (v$5356[0]) { case 2: {return v$5356[1];
 break; }case 0: {(C$5353[0] = [1],0);
var v$5357 = f$5354(a$5355);
switch (C$5353[0][0]) { case 1: {(C$5353[0] = [2,v$5357],0);
return v$5357;
 break; }default: {basis$0General$1.print$163("Pickle.cacheNew impossible\n");
throw [basis$0Initial$1.en$Fail$54,"Pickle.cacheNew impossible"];
} };
 break; }default: {var s$5358 = "recursive cache appearance for " + s$2491;
var s$5359 = "Pickle." + s$5358;
basis$0General$1.print$163(s$5359 + "\n");
throw [basis$0Initial$1.en$Fail$54,s$5359];
} };
};
};
};
pickle$0pickle$1.registerEq$2492 = function(eq$2495,key$2498,debug_str$2501,vs$2504,pu$2507){var h$2508;
var v$5085 = exn$PickleExn$93;
var v$4659;
var t$5640;
var v$4660;
var nw$4661 = SmlPrims.i32_to_w32(10);
var fix$5641 = {};
fix$5641.$f = function(i$4663){lab$f: while (true) {if (i$4663 >= nw$4661) {return i$4663;
} else {var t$5642 = (i$4663 << (1 & 31)) & 4294967295;
var i$4663 = t$5642;
continue lab$f;
};
};
};
var f$4662 = fix$5641.$f;
v$4660 = (SmlPrims.chk_ovf_i32(f$4662(32)));
var v$4664 = null;
if ((0 <= v$4660)?(v$4660 <= 123456789):false) {0;
} else {throw CompilerInitial.exn$Size$53;
};
t$5640 = (SmlPrims.wordTableInit(v$4660,v$4664));
v$4659 = [t$5640];
h$2508 = [key$2498,[0],v$5085,eq$2495,v$4659];
var fix$5643 = {};
fix$5643.$foldl = function(v$4673,v$4674){lab$foldl: while (true) {if (v$4674 == null) {return v$4673;
} else {var v$4675 = v$4674;
var v$4676 = v$4675[0];
var v$4677 = v$4675[1];
var t$5644;
(pickle$0Polyhash$1.insert$172(h$2508))([v$4676,v$4673]);
t$5644 = ((v$4673 + 1) & 4294967295);
var t$5645 = t$5644;
var t$5646 = v$4677;
var v$4673 = t$5645;
var v$4674 = t$5646;
continue lab$foldl;
};
};
};
var foldl$4672 = fix$5643.$foldl;
foldl$4672(1,vs$2504);
var v$2517 = basis$0Vector$1$3.fromList$230(vs$2504);
return [0,[pu$2507[1][0],pu$2507[1][1],function(v$4696){return function(s$4697){var v$4698 = (pickle$0Polyhash$1.peek$334(h$2508[0],h$2508[1],h$2508[2],h$2508[3],h$2508[4]))(v$4696);
switch (v$4698[0]) { case 0: {var v$4699 = v$4698[1];
return pickle$0bitstream$1.outcw$398(v$4699,s$4697);
 break; }default: {var s$4700 = pickle$0bitstream$1.outcw$398(0,s$4697);
return (pu$2507[1][2](v$4696))(s$4700);
} };
};
},[8,pu$2507[1][3]],function(v$4702){var v$4703 = v$4702[0];
var v$4704 = v$4702[1];
var v$4705 = pickle$0bitstream$1.getcw$410(v$4703);
var v$4706 = v$4705[0];
var v$4707 = v$4705[1];
if (v$4706 == 0) {return pu$2507[1][4]([v$4707,v$4704]);
} else {var t$5647;
var i$4709 = SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$4706)) - 1);
var v$4713 = v$2517.length;
if ((0 <= i$4709)?(i$4709 < v$4713):false) {0;
} else {throw CompilerInitial.exn$Subscript$52;
};
t$5647 = v$2517[i$4709];
return [t$5647,[v$4707,v$4704]];
};
}]];
};
pickle$0pickle$1.register$2560 = function(s$2563,vs$2566,pu$2569){return pickle$0pickle$1.registerEq$2492(pu$2569[1][0],function(v$2572){return SmlPrims.w32_to_i32_X(((pu$2569[1][1](v$2572))([0,12]))[0]);
},s$2563,vs$2566,pu$2569);
};
pickle$0pickle$1.hashConsEq$2577 = function(eq$2580,pu$2583){var hash$2584 = [hashCount$237[0],(hashCount$237[0] = ((hashCount$237[0] + 1) & 4294967295),0)][0];
var v$2607 = pickle$0eqhashdyn2$1.new$64(function(v$2612){return function(d$2615){return ((pu$2583[1][1](v$2612))([hash$2584,d$2615]))[0];
};
},eq$2580);
var v$2608 = v$2607[0];
var v$2609 = v$2607[1];
return [0,[eq$2580,pu$2583[1][1],pu$2583[1][2],pu$2583[1][3],function(is$4727){var v$4728 = pu$2583[1][4](is$4727);
var v$4729 = v$4728[0];
var v$4730 = v$4728[1];
var d$4731;
var hce$4732 = v$4730[1];
var d$4733 = v$2608(v$4729);
var v$4734 = (pickle$0Polyhash$1.peek$334(hce$4732[0],hce$4732[1],hce$4732[2],hce$4732[3],hce$4732[4]))(d$4733);
switch (v$4734[0]) { case 0: {d$4731 = v$4734[1];
 break; }default: {(pickle$0Polyhash$1.insert$172(hce$4732))([d$4733,d$4733]);
d$4731 = d$4733;
} };
return [v$2609(d$4731),v$4730];
}]];
};
pickle$0pickle$1.hashCons$2620 = function(pu$2623){return pickle$0pickle$1.hashConsEq$2577(pu$2623[1][0],pu$2623);
};
pickle$0pickle$1.nameGen$2624 = function(s$2627,pu$2630){return [0,[pu$2630[1][0],pu$2630[1][1],pu$2630[1][2],[20,[s$2627,pu$2630[1][3]]],pu$2630[1][4]]];
};
pickle$0pickle$1.comment$2636 = function(str$2639,pu$2642){return pu$2642;
};
pickle$0pickle$1.checkUnpickle$2659 = function(f$2662,pu$2665){return pu$2665;
};
pickle$0pickle$1.debugUnpickle$2683 = function(s$2686,pu$2689){return pu$2689;
};
return 0;
})();
