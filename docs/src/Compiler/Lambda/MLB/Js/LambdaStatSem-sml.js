if ((typeof(compiler0$0LambdaStatSem$1)) == "undefined") {compiler0$0LambdaStatSem$1 = {};
};
(function(){var letrec_polymorphism_only$63 = [false];
var tag_values$64 = tools$0Flags$1$6.is_on0$5161("tag_values");
var ftv_Type$155 = function(Type$158){var fix$5054 = {};
fix$5054.$f = function(v$180,v$4967){switch (v$180[0]) { case 0: {var v$191 = v$180[1];
return tools$0NatSet$1.insert$636(v$191,v$4967);
 break; }case 3: {var v$186 = v$180[1];
var v$187 = v$186[0];
var v$188 = v$186[1];
var b$2422;
var fix$5058 = {};
fix$5058.$foldl = function(v$2434,v$2435){lab$foldl: while (true) {if (v$2435 == null) {return v$2434;
} else {var v$2436 = v$2435;
var v$2437 = v$2436[0];
var v$2438 = v$2436[1];
var t$5059 = fix$5054.$f(v$2437,v$2434);
var t$5060 = v$2438;
var v$2434 = t$5059;
var v$2435 = t$5060;
continue lab$foldl;
};
};
};
var foldl$2433 = fix$5058.$foldl;
b$2422 = (foldl$2433(v$4967,v$187));
var fix$5061 = {};
fix$5061.$foldl = function(v$2425,v$2426){lab$foldl: while (true) {if (v$2426 == null) {return v$2425;
} else {var v$2427 = v$2426;
var v$2428 = v$2427[0];
var v$2429 = v$2427[1];
var t$5062 = fix$5054.$f(v$2428,v$2425);
var t$5063 = v$2429;
var v$2425 = t$5062;
var v$2426 = t$5063;
continue lab$foldl;
};
};
};
var foldl$2424 = fix$5061.$foldl;
return foldl$2424(b$2422,v$188);
 break; }case 2: {var v$182 = v$180[1];
var v$183 = v$182[0];
var fix$5055 = {};
fix$5055.$foldl = function(v$2443,v$2444){lab$foldl: while (true) {if (v$2444 == null) {return v$2443;
} else {var v$2445 = v$2444;
var v$2446 = v$2445[0];
var v$2447 = v$2445[1];
var t$5056 = fix$5054.$f(v$2446,v$2443);
var t$5057 = v$2447;
var v$2443 = t$5056;
var v$2444 = t$5057;
continue lab$foldl;
};
};
};
var foldl$2442 = fix$5055.$foldl;
return foldl$2442(v$4967,v$183);
 break; }default: {var v$193 = v$180[1];
var fix$5064 = {};
fix$5064.$foldl = function(v$2452,v$2453){lab$foldl: while (true) {if (v$2453 == null) {return v$2452;
} else {var v$2454 = v$2453;
var v$2455 = v$2454[0];
var v$2456 = v$2454[1];
var t$5065 = fix$5054.$f(v$2455,v$2452);
var t$5066 = v$2456;
var v$2452 = t$5065;
var v$2453 = t$5066;
continue lab$foldl;
};
};
};
var foldl$2451 = fix$5064.$foldl;
return foldl$2451(v$4967,v$193);
} };
};
var f$159 = fix$5054.$f;
return f$159(Type$158,null);
};
compiler0$0LambdaStatSem$1.empty$210 = [compiler_objects$0Con$1$2.empty$348(0),compiler_objects$0Excon$1$2.empty$320(0),null,compiler_objects$0Lvars$1$2.empty$502(0),special_objects$0TyName$1$2.empty$1217(0)];
var initial_con_env$216;
var typescheme_TRUE$217;
var Type$2457 = [2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]];
typescheme_TRUE$217 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2457)),Type$2457];
var typescheme_FALSE$218;
var Type$2458 = [2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]];
typescheme_FALSE$218 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2458)),Type$2458];
var typescheme_NIL$219;
var tyvar$220 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$2459 = [2,[[[0,tyvar$220],null],special_objects$0TyName$1$1.tyName_LIST$272]];
typescheme_NIL$219 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2459)),Type$2459];
var typescheme_CONS$221;
var tyvar$222 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$2460 = [3,[[[1,[[0,tyvar$222],[[2,[[[0,tyvar$222],null],special_objects$0TyName$1$1.tyName_LIST$272]],null]]],null],[[2,[[[0,tyvar$222],null],special_objects$0TyName$1$1.tyName_LIST$272]],null]]];
typescheme_CONS$221 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2460)),Type$2460];
var typescheme_QUOTE$223;
var tyvar$224 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$2461 = [3,[[[2,[null,special_objects$0TyName$1$1.tyName_STRING$264]],null],[[2,[[[0,tyvar$224],null],special_objects$0TyName$1$1.tyName_FRAG$276]],null]]];
typescheme_QUOTE$223 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2461)),Type$2461];
var typescheme_ANTIQUOTE$225;
var tyvar$226 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$2462 = [3,[[[0,tyvar$226],null],[[2,[[[0,tyvar$226],null],special_objects$0TyName$1$1.tyName_FRAG$276]],null]]];
typescheme_ANTIQUOTE$225 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2462)),Type$2462];
var typescheme_INTINF$227;
var Type$2463 = [3,[[[1,[[2,[[[2,[null,special_objects$0TyName$1$1.tyName_INT31$216]],null],special_objects$0TyName$1$1.tyName_LIST$272]],[[2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]],null]]],null],[[2,[null,special_objects$0TyName$1$1.tyName_INTINF$232]],null]]];
typescheme_INTINF$227 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2463)),Type$2463];
initial_con_env$216 = (compiler_objects$0Con$1$2.fromList$663([[compiler_objects$0Con$1$1.con_TRUE$127,typescheme_TRUE$217],[[compiler_objects$0Con$1$1.con_FALSE$128,typescheme_FALSE$218],[[compiler_objects$0Con$1$1.con_NIL$129,typescheme_NIL$219],[[compiler_objects$0Con$1$1.con_CONS$130,typescheme_CONS$221],[[compiler_objects$0Con$1$1.con_QUOTE$131,typescheme_QUOTE$223],[[compiler_objects$0Con$1$1.con_ANTIQUOTE$132,typescheme_ANTIQUOTE$225],[[compiler_objects$0Con$1$1.con_INTINF$133,typescheme_INTINF$227],null]]]]]]]));
var initial_tyname_env$228 = special_objects$0TyName$1$2.fromList$1532([[special_objects$0TyName$1$1.tyName_BOOL$212,[compiler_objects$0Con$1$1.con_TRUE$127,[compiler_objects$0Con$1$1.con_FALSE$128,null]]],[[special_objects$0TyName$1$1.tyName_INT31$216,null],[[special_objects$0TyName$1$1.tyName_INT32$220,null],[[special_objects$0TyName$1$1.tyName_INT63$224,null],[[special_objects$0TyName$1$1.tyName_INT64$228,null],[[special_objects$0TyName$1$1.tyName_INTINF$232,[compiler_objects$0Con$1$1.con_INTINF$133,null]],[[special_objects$0TyName$1$1.tyName_WORD8$236,null],[[special_objects$0TyName$1$1.tyName_WORD31$240,null],[[special_objects$0TyName$1$1.tyName_WORD32$244,null],[[special_objects$0TyName$1$1.tyName_WORD63$248,null],[[special_objects$0TyName$1$1.tyName_WORD64$252,null],[[special_objects$0TyName$1$1.tyName_REAL$256,null],[[special_objects$0TyName$1$1.tyName_F64$260,null],[[special_objects$0TyName$1$1.tyName_STRING$264,null],[[special_objects$0TyName$1$1.tyName_CHAR$268,null],[[special_objects$0TyName$1$1.tyName_LIST$272,[compiler_objects$0Con$1$1.con_NIL$129,[compiler_objects$0Con$1$1.con_CONS$130,null]]],[[special_objects$0TyName$1$1.tyName_FRAG$276,[compiler_objects$0Con$1$1.con_QUOTE$131,[compiler_objects$0Con$1$1.con_ANTIQUOTE$132,null]]],[[special_objects$0TyName$1$1.tyName_CHARARRAY$292,null],[[special_objects$0TyName$1$1.tyName_FOREIGNPTR$296,null],[[special_objects$0TyName$1$1.tyName_ARRAY$284,null],[[special_objects$0TyName$1$1.tyName_VECTOR$288,null],[[special_objects$0TyName$1$1.tyName_REF$280,null],[[special_objects$0TyName$1$1.tyName_EXN$300,null],null]]]]]]]]]]]]]]]]]]]]]]]);
var initial_excon_env$230 = compiler_objects$0Excon$1$2.fromList$635([[compiler_objects$0Excon$1$1.ex_DIV$117,[1]],[[compiler_objects$0Excon$1$1.ex_MATCH$118,[1]],[[compiler_objects$0Excon$1$1.ex_BIND$119,[1]],[[compiler_objects$0Excon$1$1.ex_OVERFLOW$120,[1]],[[compiler_objects$0Excon$1$1.ex_INTERRUPT$121,[1]],[[compiler_objects$0Excon$1$1.ex_SUBSCRIPT$122,[1]],[[compiler_objects$0Excon$1$1.ex_SIZE$123,[1]],null]]]]]]]);
var ftv_initial$231 = compiler_objects$0Con$1$2.fold$774(function(v$235){var v$236 = v$235[0];
var v$237 = v$235[1];
var t$5070 = tools$0NatSet$1.union$664;
var t$5069;
var v$2465 = v$236[0];
var v$2466 = v$236[1];
t$5069 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$2466),tools$0NatSet$1.fromList$614(v$2465)));
return t$5070(t$5069,v$237);
},compiler_objects$0Lvars$1$2.fold$928(function(v$241){var v$242 = v$241[0];
var v$243 = v$241[1];
var t$5068 = tools$0NatSet$1.union$664;
var t$5067;
var v$2468 = v$242[0];
var v$2469 = v$242[1];
t$5067 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$2469),tools$0NatSet$1.fromList$614(v$2468)));
return t$5068(t$5067,v$243);
},compiler_objects$0Excon$1$2.fold$746(function(v$250){var v$251 = v$250[0];
switch (v$251[0]) { case 0: {var v$253 = v$251[1];
var v$254 = v$250[1];
return tools$0NatSet$1.union$664(ftv_Type$155(v$253),v$254);
 break; }default: {return v$250[1];
} };
},null,initial_excon_env$230),compiler_objects$0Lvars$1$2.empty$502(0)),initial_con_env$216);
compiler0$0LambdaStatSem$1.initial$256 = [initial_con_env$216,initial_excon_env$230,ftv_initial$231,compiler_objects$0Lvars$1$2.empty$502(0),initial_tyname_env$228];
compiler0$0LambdaStatSem$1.plus$262 = function(v$280,v$4968){var v$281 = v$280[2];
var v$282 = v$280[0];
var v$283 = v$280[4];
var v$284 = v$280[3];
var v$285 = v$280[1];
var v$287 = v$4968[2];
var v$288 = v$4968[0];
var v$289 = v$4968[4];
var v$290 = v$4968[3];
var v$291 = v$4968[1];
var v$275 = tools$0NatSet$1.union$664(v$281,v$287);
var v$276 = compiler_objects$0Con$1$2.plus$549(v$282,v$288);
var v$277 = special_objects$0TyName$1$2.plus$1418(v$283,v$289);
var v$278 = compiler_objects$0Lvars$1$2.plus$703(v$284,v$290);
return [v$276,compiler_objects$0Excon$1$2.plus$521(v$285,v$291),v$275,v$278,v$277];
};
compiler0$0LambdaStatSem$1.layout_env$590 = function(v$602,v$605,v$4969,v$604,v$603){var t$5071;
var v$599 = [0,"; "];
t$5071 = [[(((compiler_objects$0Con$1$2.layoutMap$980(" -> ","}",", ","ConEnv: {"))(function(con$2596){return [1,con$2596[1]];
}))(function(v$2597){var v$2598 = v$2597[0];
var v$2599 = v$2597[1];
var t$5078;
var v$2600 = [2,"."];
var t$5082;
var t$5081;
var t$5080;
var t$5079;
var v$2607 = [0,","];
t$5079 = [basis$0List$1.map$697(function(x$4756){var v$4757 = compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(x$4756);
return [1,v$4757];
},v$2598),v$2607,")",0,"("];
t$5080 = [0,t$5079];
t$5081 = [t$5080,[compiler_objects$0LambdaExp$1$4.layoutType$2973(v$2599),null]];
t$5082 = t$5081;
t$5078 = [t$5082,v$2600,"",0,"\\/"];
return [0,t$5078];
}))(v$602),[(((special_objects$0TyName$1$2.layoutMap$1849(" -> ","}",", ","TyNameEnv: {"))(function(tyname$2609){return [1,special_objects$0TyName$1$1.pr_TyName$333(tyname$2609[0],tyname$2609[1],tyname$2609[2],tyname$2609[3],tyname$2609[4],tyname$2609[5])];
}))(function(cons$2610){var t$5077;
var v$2611 = [0,","];
t$5077 = [basis$0List$1.map$697(function(con$2612){return [1,con$2612[1]];
},cons$2610),v$2611,"]",0,"["];
return [0,t$5077];
}))(v$603),[(((compiler_objects$0Lvars$1$2.layoutMap$1134(" -> ","}",", ","LvarEnv: {"))(function(lvar$2614){return [1,compiler_objects$0Lvars$1$1.pr_lvar$78(lvar$2614[0],lvar$2614[1],lvar$2614[2],lvar$2614[3],lvar$2614[4],lvar$2614[5])];
}))(function(v$2615){var v$2616 = v$2615[0];
var v$2617 = v$2615[1];
var t$5072;
var v$2618 = [2,"."];
var t$5076;
var t$5075;
var t$5074;
var t$5073;
var v$2625 = [0,","];
t$5073 = [basis$0List$1.map$697(function(x$4760){var v$4761 = compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(x$4760);
return [1,v$4761];
},v$2616),v$2625,")",0,"("];
t$5074 = [0,t$5073];
t$5075 = [t$5074,[compiler_objects$0LambdaExp$1$4.layoutType$2973(v$2617),null]];
t$5076 = t$5075;
t$5072 = [t$5076,v$2618,"",0,"\\/"];
return [0,t$5072];
}))(v$604),[(((compiler_objects$0Excon$1$2.layoutMap$952(" -> ","}",", ","ExConEnv: {"))(function(excon$2627){return [1,excon$2627[1]];
}))(function(v$2628){switch (v$2628[0]) { case 0: {var v$2629 = v$2628[1];
return compiler_objects$0LambdaExp$1$4.layoutType$2973(v$2629);
 break; }default: {return [1,"NONE"];
} };
}))(v$605),null]]]],v$599,"]",2,"LambdaStatEnv: ["];
return [0,t$5071];
};
compiler0$0LambdaStatSem$1.restrict$606 = function(v$696,v$4970){var v$697 = v$696[2];
var v$698 = v$696[0];
var v$699 = v$696[4];
var v$700 = v$696[3];
var v$701 = v$696[1];
var v$703 = v$4970[0];
var v$704 = v$4970[3];
var v$705 = v$4970[2];
var v$706 = v$4970[1];
if (tools$0NatSet$1.isEmpty$598(v$697)) {0;
} else {basis$0General$1.print$163("Restrict: Problem with set of free type variables\n");
basis$0General$1.print$163("not being empty. Here is the environment: \n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5042){return basis$0General$1.print$163(v$5042);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
basis$0General$1.print$163("Non-empty set is:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5043){return basis$0General$1.print$163(v$5043);
},((tools$0NatSet$1.layoutSet$740("}",",","{"))(function(x$2649){var v$4763 = compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(x$2649);
return [1,v$4763];
}))(v$697),tools$0Flags$1$1.colwidth$100[0]]);
tools$0Crash$1.impossible$59("LambdaStatSem.restrict.ftvset not empty");
};
var con_env1$647;
try {con_env1$647 = (compiler_objects$0Con$1$2.restrict$900(function(v$2652){return v$2652[1];
},v$698,v$703));
} catch(v$5083) {con_env1$647 = ((function(v$651){var t$5084 = v$651;
if (t$5084[0] == compiler_objects$0Con$1$2.en$Restrict$899) {var s$648 = v$651[1];
var s$2653 = "Problem with constructor environment; constructor " + s$648;
basis$0General$1.print$163(s$2653 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5044){return basis$0General$1.print$163(v$5044);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$651;
};
})(v$5083));
};
var tyname_env1$658;
try {tyname_env1$658 = (special_objects$0TyName$1$2.restrict$1769(function(v$4971){return special_objects$0TyName$1$1.pr_TyName$333(v$4971[0],v$4971[1],v$4971[2],v$4971[3],v$4971[4],v$4971[5]);
},v$699,v$704));
} catch(v$5085) {tyname_env1$658 = ((function(v$662){var t$5086 = v$662;
if (t$5086[0] == special_objects$0TyName$1$2.en$Restrict$1768) {var s$659 = v$662[1];
var s$2661 = "Problem with tyname environment; tyname " + s$659;
basis$0General$1.print$163(s$2661 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5045){return basis$0General$1.print$163(v$5045);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$662;
};
})(v$5085));
};
var lvar_env1$669;
try {lvar_env1$669 = (compiler_objects$0Lvars$1$2.restrict$1054(function(v$4972){return compiler_objects$0Lvars$1$1.pr_lvar$78(v$4972[0],v$4972[1],v$4972[2],v$4972[3],v$4972[4],v$4972[5]);
},v$700,v$705));
} catch(v$5087) {lvar_env1$669 = ((function(v$673){var t$5088 = v$673;
if (t$5088[0] == compiler_objects$0Lvars$1$2.en$Restrict$1053) {var s$670 = v$673[1];
var s$2669 = "Problem with lvar environment; lvar " + s$670;
basis$0General$1.print$163(s$2669 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5046){return basis$0General$1.print$163(v$5046);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$673;
};
})(v$5087));
};
var t$5092 = con_env1$647;
var t$5090;
try {t$5090 = (compiler_objects$0Excon$1$2.restrict$872(function(v$2677){return v$2677[1];
},v$701,v$706));
} catch(v$5089) {t$5090 = ((function(v$684){var t$5091 = v$684;
if (t$5091[0] == compiler_objects$0Excon$1$2.en$Restrict$871) {var s$681 = v$684[1];
var s$2678 = "Problem with excon environment; excon " + s$681;
basis$0General$1.print$163(s$2678 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5047){return basis$0General$1.print$163(v$5047);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$684;
};
})(v$5089));
};
return [t$5092,t$5090,v$697,lvar_env1$669,tyname_env1$658];
};
compiler0$0LambdaStatSem$1.enrich$707 = function(v$709){return true;
};
compiler0$0LambdaStatSem$1.pu$710;
var pu_f$743 = tools$0NatSet$1.pu$771(compiler_objects$0LambdaExp$1$4.pu_tyvar$5090);
var pu_ce$744 = compiler_objects$0Con$1$2.pu$1081(compiler_objects$0Con$1$1.pu$135,compiler_objects$0LambdaExp$1$4.pu_TypeScheme$5095);
var pu_te$745 = special_objects$0TyName$1$2.pu$1950(special_objects$0TyName$1$1.pu$426,pickle$0pickle$1.listGen$2109(compiler_objects$0Con$1$1.pu$135));
var pu_le$746 = compiler_objects$0Lvars$1$2.pu$1235(compiler_objects$0Lvars$1$3.pu$1992,compiler_objects$0LambdaExp$1$4.pu_TypeScheme$5095);
var pu_ee$747 = compiler_objects$0Excon$1$2.pu$1053(compiler_objects$0Excon$1$1.pu$125,pickle$0pickle$1.optionGen$2134(compiler_objects$0LambdaExp$1$4.pu_Type$5092));
compiler0$0LambdaStatSem$1.pu$710 = (pickle$0pickle$1.convert$2342([function(v$2686){var v$2687 = v$2686[0];
return [v$2687[1],v$2686[1],v$2687[0],v$2687[3],v$2687[2]];
},function(v$2688){return [[v$2688[2],v$2688[0],v$2688[4],v$2688[3]],v$2688[1]];
}],pickle$0pickle$1.pairGen0$983(pickle$0pickle$1.tup4Gen0$2377(pu_f$743,pu_ce$744,pu_te$745,pu_le$746),pu_ee$747)));
var fix$5093 = {};
fix$5093.$valid_t = function(e$752,ty$755){switch (ty$755[0]) { case 2: {var v$785 = ty$755[1];
var v$786 = v$785[0];
var v$787 = v$785[1];
var v$2690 = e$752[4];
var v$2692 = special_objects$0TyName$1$2.lookup$1368(v$2690,v$787);
switch (v$2692[0]) { case 0: {v$2692[1];
 break; }default: {var s$2693 = "lookup_tyname.Cannot find " + (special_objects$0TyName$1$1.pr_TyName$333(v$787[0],v$787[1],v$787[2],v$787[3],v$787[4],v$787[5]));
tools$0Crash$1.impossible$59("LambdaStatSem." + s$2693);
} };
return fix$5093.$valid_ts(e$752,v$786);
 break; }case 3: {var v$779 = ty$755[1];
var v$780 = v$779[0];
var v$781 = v$779[1];
fix$5093.$valid_ts(e$752,v$780);
return fix$5093.$valid_ts(e$752,v$781);
 break; }case 0: {var v$775 = ty$755[1];
if (tools$0NatSet$1.member$591(v$775,e$752[2])) {return 0;
} else {var s$2698 = "valid_t.non-bound type variable " + (compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(v$775));
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$2698);
};
 break; }default: {var v$788 = ty$755[1];
return fix$5093.$valid_ts(e$752,v$788);
} };
};
fix$5093.$valid_ts = function(v$791,v$794){if (v$794 == null) {return 0;
} else {var v$808 = v$794;
var v$809 = v$808[0];
var v$810 = v$808[1];
fix$5093.$valid_t(v$791,v$809);
return fix$5093.$valid_ts(v$791,v$810);
};
};
var valid_t$749 = fix$5093.$valid_t;
var valid_ts$748 = fix$5093.$valid_ts;
var valid_s$811 = function(v$4973,v$4974,v$4975,v$4976,v$4977){return function(v$818){var v$827 = v$818[0];
var v$828 = v$818[1];
var s$819 = compiler_objects$0LambdaExp$1$4.tyvars_Type$5991(null,v$828,null);
var fix$5094 = {};
fix$5094.$app = function(v$2704){lab$app: while (true) {if (v$2704 == null) {return 0;
} else {var v$2705 = v$2704;
var v$2706 = v$2705[0];
var v$2707 = v$2705[1];
if (tools$0NatSet$1.member$591(v$2706,s$819)) {0;
} else {var s$4774;
var t$5103 = ("valid_s.Type variable " + (compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(v$2706))) + " not in ";
var t$5102;
var st$4776;
var t$5095;
var v$4779 = [2,"."];
var t$5101;
var t$5100;
var t$5099;
var t$5096;
var v$4780 = [0,","];
t$5096 = [basis$0List$1.map$697((function(env$5098){return function(x$4781){var v$5097 = env$5098[0];
var v$4782 = v$5097(x$4781);
return [1,v$4782];
};
})([compiler_objects$0LambdaExp$1$4.pr_tyvar$1555]),v$827),v$4780,")",0,"("];
t$5099 = [0,t$5096];
t$5100 = [t$5099,[compiler_objects$0LambdaExp$1$4.layoutType$2973(v$828),null]];
t$5101 = t$5100;
t$5095 = [t$5101,v$4779,"",0,"\\/"];
st$4776 = [0,t$5095];
t$5102 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4776)));
s$4774 = (t$5103 + t$5102);
tools$0Crash$1.impossible$59("LambdaStatSem." + s$4774);
};
var t$5104 = v$2707;
var v$2704 = t$5104;
continue lab$app;
};
};
};
var app$2703 = fix$5094.$app;
app$2703(v$827);
return valid_t$749([v$4973,v$4974,tools$0NatSet$1.addList$615(v$827,v$4975),v$4976,v$4977],v$828);
};
};
var eqType$844 = function(s$847,v$851){var v$870 = v$851[0];
var v$871 = v$851[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$870,v$871)) {return 0;
} else {basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"--------------------------------\n");
var s$2721 = ("Error in lambda type checking (" + s$847) + "):\n";
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2721);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"The type\n");
var stringtree$2725 = compiler_objects$0LambdaExp$1$4.layoutType$2973(v$870);
tools$0PrettyPrint$1.outputTree$1072([function(s$2726){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2726);
},stringtree$2725,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"is not compatible with type\n");
var stringtree$2728 = compiler_objects$0LambdaExp$1$4.layoutType$2973(v$871);
tools$0PrettyPrint$1.outputTree$1072([function(s$2729){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2729);
},stringtree$2728,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"--------------------------------\n");
return tools$0Crash$1.impossible$59("LambdaStatSem.eqType");
};
};
var unit_Type$910 = [1,null];
var type_switch$999 = function(type_lexp$1002,get_tyname$1005,v$1008){var v$1098 = v$1008[1];
var v$1099 = v$1098[0];
var v$1100 = v$1098[1];
var v$1101 = v$1098[2];
var tyname$1016;
var v$1024 = type_lexp$1002(v$1099);
switch (v$1024[0]) { case 0: {var v$1026 = v$1024[1];
if (v$1026 == null) {tyname$1016 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind"));
} else {var v$1028 = v$1026;
var v$1029 = v$1028[0];
switch (v$1029[0]) { case 2: {tyname$1016 = ((v$1028[1] == null)?v$1029[1][1]:(tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind")));
 break; }default: {tyname$1016 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind"));
} };
};
 break; }default: {tyname$1016 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind"));
} };
var fix$5105 = {};
fix$5105.$check = function(v$1038,v$1041,v$1044){lab$check: while (true) {switch (v$1041[0]) { case 0: {switch (v$1044[0]) { case 1: {var v$1065 = v$1041[1];
var t$5106 = v$1038;
var t$5107 = [1];
var t$5108 = [0,type_lexp$1002(v$1065)];
var v$1038 = t$5106;
var v$1041 = t$5107;
var v$1044 = t$5108;
continue lab$check;
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.check. error");
} };
 break; }default: {if (v$1038 == null) {switch (v$1044[0]) { case 0: {return v$1044[1];
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.check. error");
} };
} else {var v$1089 = v$1038;
var v$1090 = v$1089[0];
var v$1091 = v$1090[0];
var v$1092 = v$1090[1];
var v$1093 = v$1089[1];
var tn$1071 = get_tyname$1005(v$1091);
var tl$1072 = type_lexp$1002(v$1092);
var t$5109;
var v$2800 = tn$1071[2];
var v$2801 = tyname$1016[2];
var v$2802 = v$2800[0][1];
var v$2803 = v$2801[0][1];
t$5109 = ((v$2802[0] == v$2803[0])?(v$2802[1] == v$2803[1]):false);
if (t$5109) {switch (v$1044[0]) { case 0: {var v$1083 = v$1044[1];
var t$5113 = v$1093;
var t$5112 = [1];
var t$5111;
var t$5110;
switch (tl$1072[0]) { case 0: {switch (v$1083[0]) { case 0: {var v$2807 = tl$1072[1];
var v$2808 = v$1083[1];
t$5110 = ((compiler_objects$0LambdaBasics$1.eq_Types$2576(v$2807,v$2808))?tl$1072:(tools$0Crash$1.impossible$59("LambdaStatSem.lub. Types vs. Types")));
 break; }default: {switch (v$1083[0]) { case 1: {t$5110 = tl$1072;
 break; }default: {t$5110 = (tools$0Crash$1.impossible$59("LambdaStatSem.lub. not defined for these args"));
} };
} };
 break; }case 1: {t$5110 = v$1083;
 break; }default: {switch (v$1083[0]) { case 1: {t$5110 = tl$1072;
 break; }default: {t$5110 = (tools$0Crash$1.impossible$59("LambdaStatSem.lub. not defined for these args"));
} };
} };
t$5111 = [0,t$5110];
var t$5114 = t$5113;
var t$5115 = t$5112;
var t$5116 = t$5111;
var v$1038 = t$5114;
var v$1041 = t$5115;
var v$1044 = t$5116;
continue lab$check;
 break; }default: {var t$5117 = v$1093;
var t$5118 = [1];
var t$5119 = [0,tl$1072];
var v$1038 = t$5117;
var v$1041 = t$5118;
var v$1044 = t$5119;
continue lab$check;
} };
} else {var save_flag$1084 = (tools$0Flags$1$6.lookup_flag_entry$5164("print_type_name_stamps"))[0];
((tools$0Flags$1$6.lookup_flag_entry$5164("print_type_name_stamps"))[0] = true,0);
var tn_s$1085 = special_objects$0TyName$1$1.pr_TyName$333(tn$1071[0],tn$1071[1],tn$1071[2],tn$1071[3],tn$1071[4],tn$1071[5]);
var tyname_s$1086 = special_objects$0TyName$1$1.pr_TyName$333(tyname$1016[0],tyname$1016[1],tyname$1016[2],tyname$1016[3],tyname$1016[4],tyname$1016[5]);
((tools$0Flags$1$6.lookup_flag_entry$5164("print_type_name_stamps"))[0] = save_flag$1084,0);
var s$2816 = ((("SWITCH.wrong tyname; the type names " + tn_s$1085) + " and ") + tyname_s$1086) + " disagree";
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$2816);
};
};
} };
};
};
var check$1035 = fix$5105.$check;
return check$1035(v$1100,v$1101,[1]);
};
var en$AbortExp$1102 = new String("AbortExp");
var exn$AbortExp$1102 = [en$AbortExp$1102];
var fix$5120 = {};
fix$5120.$type_prim = function(env$1107,prim$1110,lexps$1113){switch (prim$1110[0]) { case 14: {var v$1738 = prim$1110[1];
var v$1739 = v$1738[0];
var v$1740 = v$1738[1];
valid_ts$748(env$1107,v$1740);
if (lexps$1113 == null) {var t$5250;
var t$5249;
var v$3190 = env$1107[0];
var v$4382;
var v$3192 = compiler_objects$0Con$1$2.lookup$499(v$3190,v$1739);
switch (v$3192[0]) { case 0: {v$4382 = v$3192[1];
 break; }default: {var s$3193 = "lookup_con.Cannot find " + v$1739[1];
v$4382 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3193));
} };
var v$3184 = v$4382[0];
var v$3185 = v$4382[1];
var S$3187 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3188){return "mk_instance";
},[v$3184,v$1740]);
t$5249 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3187,v$3185));
t$5250 = [t$5249,null];
return t$5250;
} else {var v$1709 = lexps$1113;
if (v$1709[1] == null) {var v$1737 = v$1709[0];
var v$1720;
var v$3204 = env$1107[0];
var v$4388;
var v$3206 = compiler_objects$0Con$1$2.lookup$499(v$3204,v$1739);
switch (v$3206[0]) { case 0: {v$4388 = v$3206[1];
 break; }default: {var s$3207 = "lookup_con.Cannot find " + v$1739[1];
v$4388 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3207));
} };
var v$3198 = v$4388[0];
var v$3199 = v$4388[1];
var S$3201 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3202){return "mk_instance";
},[v$3198,v$1740]);
v$1720 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3201,v$3199));
switch (v$1720[0]) { case 3: {var v$1722 = v$1720[1];
var v$1723 = v$1722[0];
if (v$1723 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} else {var v$1725 = v$1723;
if (v$1725[1] == null) {var v$1727 = v$1722[1];
if (v$1727 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} else {var v$1729 = v$1727;
if (v$1729[1] == null) {var v$1734 = v$1725[0];
var v$1735 = v$1729[0];
var ts$1731;
var v$3213 = fix$5120.$type_lexp(env$1107,v$1737);
switch (v$3213[0]) { case 0: {ts$1731 = v$3213[1];
 break; }default: {ts$1731 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.CONprim"));
} };
var fix$5251 = {};
fix$5251.$eqTypes = function(v$4929,v$4978){lab$eqTypes: while (true) {if (v$4929 == null) {if (v$4978 == null) {return 0;
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.eqTypes");
};
} else {if (v$4978 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.eqTypes");
} else {var v$4931 = v$4929;
var v$4932 = v$4931[0];
var v$4933 = v$4931[1];
var v$4934 = v$4978;
var v$4935 = v$4934[0];
var v$4936 = v$4934[1];
eqType$844("CONprim: ",[v$4932,v$4935]);
var t$5252 = v$4933;
var t$5253 = v$4936;
var v$4929 = t$5252;
var v$4978 = t$5253;
continue lab$eqTypes;
};
};
};
};
var eqTypes$4927 = fix$5251.$eqTypes;
eqTypes$4927([v$1734,null],ts$1731);
return [v$1735,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Wrong number of args");
};
};
 break; }case 13: {var v$1696 = prim$1110[1];
var v$1697 = v$1696[0];
var v$1698 = v$1696[1];
valid_ts$748(env$1107,v$1698);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Wrong number of args");
} else {var v$1664 = lexps$1113;
if (v$1664[1] == null) {var v$1694 = v$1664[0];
var v$1675;
var v$3247 = env$1107[0];
var v$4412;
var v$3249 = compiler_objects$0Con$1$2.lookup$499(v$3247,v$1697);
switch (v$3249[0]) { case 0: {v$4412 = v$3249[1];
 break; }default: {var s$3250 = "lookup_con.Cannot find " + v$1697[1];
v$4412 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3250));
} };
var v$3241 = v$4412[0];
var v$3242 = v$4412[1];
var S$3244 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3245){return "mk_instance";
},[v$3241,v$1698]);
v$1675 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3244,v$3242));
switch (v$1675[0]) { case 3: {var v$1677 = v$1675[1];
var v$1678 = v$1677[0];
if (v$1678 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} else {var v$1680 = v$1678;
if (v$1680[1] == null) {var v$1682 = v$1677[1];
if (v$1682 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} else {var v$1684 = v$1682;
if (v$1684[1] == null) {var v$1691 = v$1680[0];
var v$1692 = v$1684[0];
var ts$1686;
var v$3256 = fix$5120.$type_lexp(env$1107,v$1694);
switch (v$3256[0]) { case 0: {ts$1686 = v$3256[1];
 break; }default: {ts$1686 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.DECONprim0"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576([v$1692,null],ts$1686)) {return [v$1691,null];
} else {var s$3263;
var t$5248;
var t$5247;
var t$5246 = ("DECONprim: " + v$1697[1]) + "; ts = ";
var t$5245;
var st$4856;
var t$5244;
var v$4858 = [0,","];
t$5244 = [basis$0List$1.map$697(function(v$5050){return compiler_objects$0LambdaExp$1$4.layoutType$2973(v$5050);
},ts$1686),v$4858,"]",0,"["];
st$4856 = [0,t$5244];
t$5245 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4856)));
t$5247 = (t$5246 + t$5245);
t$5248 = (t$5247 + "; t2 = ");
var t$5243;
var st$4860 = compiler_objects$0LambdaExp$1$4.layoutType$2973(v$1692);
t$5243 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4860)));
s$3263 = (t$5248 + t$5243);
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$3263);
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Wrong number of args");
};
};
 break; }case 8: {var v$1653 = prim$1110[1];
if (lexps$1113 == null) {var t$5242;
var v$3293 = env$1107[1];
var v$3295 = compiler_objects$0Excon$1$2.lookup$471(v$3293,v$1653);
switch (v$3295[0]) { case 0: {t$5242 = v$3295[1];
 break; }default: {var s$3296 = "lookup_excon.Cannot find " + v$1653[1];
t$5242 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3296));
} };
switch (t$5242[0]) { case 1: {return [[2,[null,special_objects$0TyName$1$1.tyName_EXN$300]],null];
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim.Unary excon not fully applied");
} };
} else {var v$1637 = lexps$1113;
if (v$1637[1] == null) {var v$1652 = v$1637[0];
var v$1643;
var v$3302 = env$1107[1];
var v$3304 = compiler_objects$0Excon$1$2.lookup$471(v$3302,v$1653);
switch (v$3304[0]) { case 0: {v$1643 = v$3304[1];
 break; }default: {var s$3305 = "lookup_excon.Cannot find " + v$1653[1];
v$1643 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3305));
} };
switch (v$1643[0]) { case 0: {var v$1651 = v$1643[1];
var ts$1646;
var v$3309 = fix$5120.$type_lexp(env$1107,v$1652);
switch (v$3309[0]) { case 0: {ts$1646 = v$3309[1];
 break; }default: {ts$1646 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.EXCONprim: "));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576([v$1651,null],ts$1646)) {return [[2,[null,special_objects$0TyName$1$1.tyName_EXN$300]],null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim: ");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim.Nullary excon applied to arg.");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim.Wrong number of args");
};
};
 break; }case 12: {var v$1624 = prim$1110[1];
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim.Wrong number of args");
} else {var v$1607 = lexps$1113;
if (v$1607[1] == null) {var v$1622 = v$1607[0];
var v$1613;
var v$3325 = env$1107[1];
var v$3327 = compiler_objects$0Excon$1$2.lookup$471(v$3325,v$1624);
switch (v$3327[0]) { case 0: {v$1613 = v$3327[1];
 break; }default: {var s$3328 = "lookup_excon.Cannot find " + v$1624[1];
v$1613 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3328));
} };
switch (v$1613[0]) { case 0: {var v$1621 = v$1613[1];
var ts$1616;
var v$3332 = fix$5120.$type_lexp(env$1107,v$1622);
switch (v$3332[0]) { case 0: {ts$1616 = v$3332[1];
 break; }default: {ts$1616 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.DEEXCONprim: "));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1616,[[2,[null,special_objects$0TyName$1$1.tyName_EXN$300]],null])) {return [v$1621,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim: ");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim.Unary excon does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim.Wrong number of args");
};
};
 break; }case 5: {return [[1,basis$0List$1.map$697(function(x$3352){var v$4937 = fix$5120.$type_lexp(env$1107,x$3352);
switch (v$4937[0]) { case 0: {var v$4938 = v$4937[1];
if (v$4938 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.RECORDprim");
} else {var v$4939 = v$4938;
if (v$4939[1] == null) {return v$4939[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.RECORDprim");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.RECORDprim");
} };
},lexps$1113)],null];
 break; }case 1: {var v$1597 = prim$1110[1];
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Wrong number of args.");
} else {var v$1574 = lexps$1113;
if (v$1574[1] == null) {var v$1595 = v$1574[0];
var v$1583 = fix$5120.$type_lexp(env$1107,v$1595);
switch (v$1583[0]) { case 0: {var v$1585 = v$1583[1];
if (v$1585 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
} else {var v$1587 = v$1585;
var v$1588 = v$1587[0];
switch (v$1588[0]) { case 1: {if (v$1587[1] == null) {var v$1593 = v$1588[1];
try {var t$5241;
var t$5240;
var fix$5237 = {};
fix$5237.$h = function(v$3361,v$3362){lab$h: while (true) {if (v$3361 == null) {throw CompilerInitial.exn$Subscript$52;
} else {var v$3363 = v$3361;
var v$3364 = v$3363[0];
var v$3365 = v$3363[1];
if (v$3362 == 0) {return v$3364;
} else {var t$5238 = v$3365;
var t$5239 = SmlPrims.chk_ovf_i32(v$3362 - 1);
var v$3361 = t$5238;
var v$3362 = t$5239;
continue lab$h;
};
};
};
};
var h$3360 = fix$5237.$h;
if (v$1597 < 0) {throw CompilerInitial.exn$Subscript$52;
} else {t$5240 = (h$3360(v$1593,v$1597));
};
t$5241 = [t$5240,null];
return t$5241;
} catch(v$5236) {return (function(v$1592){return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Index out of range");
})(v$5236);
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Wrong number of args.");
};
};
 break; }case 0: {return basis$0List$1.map$697(function(x$3389){var v$4943 = fix$5120.$type_lexp(env$1107,x$3389);
switch (v$4943[0]) { case 0: {var v$4944 = v$4943[1];
if (v$4944 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.UB_RECORDprim");
} else {var v$4945 = v$4944;
if (v$4945[1] == null) {return v$4945[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.UB_RECORDprim");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.UB_RECORDprim");
} };
},lexps$1113);
 break; }case 11: {var v$1564 = prim$1110[1];
var v$1565 = v$1564[0];
valid_t$749(env$1107,v$1565);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong number of args");
} else {var v$1537 = lexps$1113;
if (v$1537[1] == null) {var v$1562 = v$1537[0];
switch (v$1565[0]) { case 2: {var v$1548 = v$1565[1];
var v$1549 = v$1548[0];
if (v$1549 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong instance");
} else {var v$1551 = v$1549;
if (v$1551[1] == null) {var v$1559 = v$1551[0];
var ts$1554;
var v$3395 = fix$5120.$type_lexp(env$1107,v$1562);
switch (v$3395[0]) { case 0: {ts$1554 = v$3395[1];
 break; }default: {ts$1554 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.DEREFprim"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1554,[v$1565,null])) {return [v$1559,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong instance");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong instance");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong number of args");
};
};
 break; }case 4: {var v$1524 = prim$1110[1];
var v$1525 = v$1524[0];
var typescheme_REF$1480;
var tyvar$1481 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$3419 = [3,[[[0,tyvar$1481],null],[[2,[[[0,tyvar$1481],null],special_objects$0TyName$1$1.tyName_REF$280]],null]]];
typescheme_REF$1480 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$3419)),Type$3419];
valid_t$749(env$1107,v$1525);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.Wrong number of args");
} else {var v$1491 = lexps$1113;
if (v$1491[1] == null) {var v$1522 = v$1491[0];
var v$1502;
var v$4529 = [v$1525,null];
var v$3424 = typescheme_REF$1480[0];
var v$3425 = typescheme_REF$1480[1];
var S$3427 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3428){return "mk_instance";
},[v$3424,v$4529]);
v$1502 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3427,v$3425));
switch (v$1502[0]) { case 3: {var v$1504 = v$1502[1];
var v$1505 = v$1504[0];
if (v$1505 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} else {var v$1507 = v$1505;
if (v$1507[1] == null) {var v$1509 = v$1504[1];
if (v$1509 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} else {var v$1511 = v$1509;
if (v$1511[1] == null) {var v$1519 = v$1507[0];
var v$1520 = v$1511[0];
var ts$1514;
var v$3432 = fix$5120.$type_lexp(env$1107,v$1522);
switch (v$3432[0]) { case 0: {ts$1514 = v$3432[1];
 break; }default: {ts$1514 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.REFprim"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1514,[v$1519,null])) {return [v$1520,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.Wrong number of args");
};
};
 break; }case 17: {var v$1477 = prim$1110[1];
var v$1478 = v$1477[0];
valid_t$749(env$1107,v$1478);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong number of args");
} else {var v$1423 = lexps$1113;
var v$1424 = v$1423[1];
if (v$1424 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong number of args");
} else {var v$1426 = v$1424;
if (v$1426[1] == null) {var v$1474 = v$1423[0];
var v$1475 = v$1426[0];
switch (v$1478[0]) { case 1: {var v$1442 = v$1478[1];
if (v$1442 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1444 = v$1442;
var v$1445 = v$1444[0];
switch (v$1445[0]) { case 2: {var v$1447 = v$1445[1];
var v$1448 = v$1447[0];
if (v$1448 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1450 = v$1448;
if (v$1450[1] == null) {var v$1452 = v$1444[1];
if (v$1452 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1454 = v$1452;
if (v$1454[1] == null) {var v$1470 = v$1450[0];
var v$1471 = v$1447[1];
var v$1472 = v$1454[0];
var ts1$1456;
var v$3467 = fix$5120.$type_lexp(env$1107,v$1474);
switch (v$3467[0]) { case 0: {ts1$1456 = v$3467[1];
 break; }default: {ts1$1456 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.ASSIGNprim1"));
} };
var ts2$1457;
var v$3475 = fix$5120.$type_lexp(env$1107,v$1475);
switch (v$3475[0]) { case 0: {ts2$1457 = v$3475[1];
 break; }default: {ts2$1457 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.ASSIGNprim2"));
} };
if ((compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1470,v$1472))?((compiler_objects$0LambdaBasics$1.eq_Types$2576(ts1$1456,[[2,[[v$1470,null],v$1471]],null]))?(compiler_objects$0LambdaBasics$1.eq_Types$2576(ts2$1457,[v$1472,null])):false):false) {return [unit_Type$910,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim3");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong number of args");
};
};
};
 break; }case 10: {if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DROPprim -- one parameter expected");
} else {var v$1405 = lexps$1113;
if (v$1405[1] == null) {var v$1409 = v$1405[0];
fix$5120.$type_lexp(env$1107,v$1409);
return null;
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DROPprim -- one parameter expected");
};
};
 break; }case 9: {var v$1396 = prim$1110[1];
var v$1397 = v$1396[0];
valid_t$749(env$1107,v$1397);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong number of args");
} else {var v$1354 = lexps$1113;
var v$1355 = v$1354[1];
if (v$1355 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong number of args");
} else {var v$1357 = v$1355;
if (v$1357[1] == null) {var v$1393 = v$1354[0];
var v$1394 = v$1357[0];
switch (v$1397[0]) { case 1: {var v$1369 = v$1397[1];
if (v$1369 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
} else {var v$1371 = v$1369;
var v$1372 = v$1371[1];
if (v$1372 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
} else {var v$1374 = v$1372;
if (v$1374[1] == null) {var v$1390 = v$1371[0];
var v$1391 = v$1374[0];
var ts1$1376;
var v$3527 = fix$5120.$type_lexp(env$1107,v$1393);
switch (v$3527[0]) { case 0: {ts1$1376 = v$3527[1];
 break; }default: {ts1$1376 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.EQUALprim1"));
} };
var ts2$1377;
var v$3535 = fix$5120.$type_lexp(env$1107,v$1394);
switch (v$3535[0]) { case 0: {ts2$1377 = v$3535[1];
 break; }default: {ts2$1377 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.EQUALprim2"));
} };
if ((compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1390,v$1391))?((compiler_objects$0LambdaBasics$1.eq_Types$2576(ts1$1376,[v$1390,null]))?(compiler_objects$0LambdaBasics$1.eq_Types$2576(ts2$1377,[v$1391,null])):false):false) {return [[2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]],null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim3");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
};
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong number of args");
};
};
};
 break; }case 15: {var v$1337 = prim$1110[1];
var v$1338 = v$1337[2];
var v$1339 = v$1337[1];
var v$1340 = v$1337[3];
var v$1341 = v$1337[0];
valid_ts$748(env$1107,v$1339);
(valid_s$811(env$1107[0],env$1107[1],env$1107[2],env$1107[3],env$1107[4]))([v$1340,v$1341]);
var v$1238;
var S$3570 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3571){return "mk_instance";
},[v$1340,v$1339]);
v$1238 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3570,v$1341));
switch (v$1238[0]) { case 3: {var v$1334 = v$1238[1];
var v$1335 = v$1334[0];
var v$1336 = v$1334[1];
var ts$1240 = basis$0List$1.map$697(function(x$3575){var v$4949 = fix$5120.$type_lexp(env$1107,x$3575);
switch (v$4949[0]) { case 0: {var v$4950 = v$4949[1];
if (v$4950 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.CCALL");
} else {var v$4951 = v$4950;
if (v$4951[1] == null) {return v$4951[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.CCALL");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.CCALL");
} };
},lexps$1113);
var ts_res$1241;
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1240,v$1335)) {ts_res$1241 = v$1336;
} else {var s$3576 = ("c function " + v$1338) + " expected types:\n";
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3576);
var stringtree$3579;
var t$5224;
var v$3586 = [0,","];
t$5224 = [basis$0List$1.map$697(function(v$5051){return compiler_objects$0LambdaExp$1$4.layoutType$2973(v$5051);
},v$1335),v$3586,"]",0,"["];
stringtree$3579 = [0,t$5224];
tools$0PrettyPrint$1.outputTree$1072([function(s$3580){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3580);
},stringtree$3579,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"but found types:\n");
var stringtree$3588;
var t$5225;
var v$3595 = [0,","];
t$5225 = [basis$0List$1.map$697(function(v$5052){return compiler_objects$0LambdaExp$1$4.layoutType$2973(v$5052);
},ts$1240),v$3595,"]",0,"["];
stringtree$3588 = [0,t$5225];
tools$0PrettyPrint$1.outputTree$1072([function(s$3589){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3589);
},stringtree$3588,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
ts_res$1241 = (tools$0Crash$1.impossible$59("LambdaStatSem.c function call"));
};
var unboxed_types$1254 = basis$0List$1.s$n$686([compiler_objects$0LambdaExp$1$4.boolType$1684,[compiler_objects$0LambdaExp$1$4.unitType$1691,[compiler_objects$0LambdaExp$1$4.int31Type$1669,[compiler_objects$0LambdaExp$1$4.word31Type$1677,[compiler_objects$0LambdaExp$1$4.int63Type$1671,[compiler_objects$0LambdaExp$1$4.word63Type$1679,[compiler_objects$0LambdaExp$1$4.intDefaultType$1674(0),[compiler_objects$0LambdaExp$1$4.wordDefaultType$1681(0),[compiler_objects$0LambdaExp$1$4.foreignptrType$1685,null]]]]]]]]],(tag_values$64(0))?null:[compiler_objects$0LambdaExp$1$4.int32Type$1670,[compiler_objects$0LambdaExp$1$4.word32Type$1678,null]]);
if ((v$1338 == "id")?true:(v$1338 == "ord")) {if (v$1335 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
} else {var v$1281 = v$1335;
if (v$1281[1] == null) {if (ts_res$1241 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
} else {var v$1285 = ts_res$1241;
if (v$1285[1] == null) {var v$1295 = v$1281[0];
var v$1296 = v$1285[0];
var t$5231;
var t$5230;
var fix$5228 = {};
fix$5228.$exists = function(v$3619){lab$exists: while (true) {if (v$3619 == null) {return false;
} else {var v$3620 = v$3619;
var v$3621 = v$3620[0];
var v$3622 = v$3620[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1295,v$3621)) {return true;
} else {var t$5229 = v$3622;
var v$3619 = t$5229;
continue lab$exists;
};
};
};
};
var exists$3618 = fix$5228.$exists;
t$5230 = (exists$3618(unboxed_types$1254));
if (t$5230) {var fix$5226 = {};
fix$5226.$exists = function(v$3626){lab$exists: while (true) {if (v$3626 == null) {return false;
} else {var v$3627 = v$3626;
var v$3628 = v$3627[0];
var v$3629 = v$3627[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1296,v$3628)) {return true;
} else {var t$5227 = v$3629;
var v$3626 = t$5227;
continue lab$exists;
};
};
};
};
var exists$3625 = fix$5226.$exists;
t$5231 = (exists$3625(unboxed_types$1254));
} else {t$5231 = false;
};
t$5231?0:(tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' is used to cast to or from a boxed type;  it is region-unsafe to   use `id' this way! Rewrite your program!!"));
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
};
};
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
};
};
} else {if (v$1338 == "pointer") {if (v$1335 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer' does not have a valid type");
} else {var v$1313 = v$1335;
if (v$1313[1] == null) {if (ts_res$1241 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer' does not have a valid type");
} else {var v$1317 = ts_res$1241;
if (v$1317[1] == null) {var v$1327 = v$1313[0];
var v$1328 = v$1317[0];
var t$5235;
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1328,compiler_objects$0LambdaExp$1$4.foreignptrType$1685)) {var t$5234;
var fix$5232 = {};
fix$5232.$exists = function(v$3654){lab$exists: while (true) {if (v$3654 == null) {return false;
} else {var v$3655 = v$3654;
var v$3656 = v$3655[0];
var v$3657 = v$3655[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1327,v$3656)) {return true;
} else {var t$5233 = v$3657;
var v$3654 = t$5233;
continue lab$exists;
};
};
};
};
var exists$3653 = fix$5232.$exists;
t$5234 = (exists$3653(unboxed_types$1254));
t$5235 = (t$5234?false:true);
} else {t$5235 = false;
};
t$5235?0:(tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer': 'a -> foreignptr is used to cast a boxed object to a pointer;  it is a very region-unsafe operation; the programmer needs to  keep the boxed object live until it can be argued that the  object pointed to is no longer accessed.!!"));
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer' does not have a valid type");
};
};
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer' does not have a valid type");
};
};
} else {0;
};
};
return ts_res$1241;
 break; }default: {var s$3673 = ("c function " + v$1338) + " does not have arrow type";
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$3673);
} };
 break; }case 16: {var ts$1218 = basis$0List$1.map$697(function(x$3680){var v$4955 = fix$5120.$type_lexp(env$1107,x$3680);
switch (v$4955[0]) { case 0: {var v$4956 = v$4955[1];
if (v$4956 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.BLOCKF64");
} else {var v$4957 = v$4956;
if (v$4957[1] == null) {return v$4957[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.BLOCKF64");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.BLOCKF64");
} };
},lexps$1113);
var fix$5220 = {};
fix$5220.$app = function(v$3686){lab$app: while (true) {if (v$3686 == null) {return 0;
} else {var v$3687 = v$3686;
var v$3688 = v$3687[0];
var v$3689 = v$3687[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$3688,compiler_objects$0LambdaExp$1$4.f64Type$1688)) {0;
} else {var s$3694;
var t$5222 = "wrong blockf64 element type; got ";
var t$5221;
var st$4893 = compiler_objects$0LambdaExp$1$4.layoutType$2973(v$3688);
t$5221 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4893)));
s$3694 = (t$5222 + t$5221);
tools$0Crash$1.impossible$59("LambdaStatSem." + s$3694);
};
var t$5223 = v$3689;
var v$3686 = t$5223;
continue lab$app;
};
};
};
var app$3685 = fix$5220.$app;
app$3685(ts$1218);
return [compiler_objects$0LambdaExp$1$4.stringType$1689,null];
 break; }case 2: {return [compiler_objects$0LambdaExp$1$4.stringType$1689,null];
 break; }case 7: {var v$1213 = prim$1110[1];
var v$1214 = v$1213[2];
var v$1215 = v$1213[0];
var v$1216 = v$1213[1];
valid_t$749(env$1107,v$1215);
valid_t$749(env$1107,v$1216);
var arrowType$1199 = [3,[[v$1215,null],[v$1216,null]]];
var ts$1200 = basis$0List$1.map$697(function(x$3700){var v$4961 = fix$5120.$type_lexp(env$1107,x$3700);
switch (v$4961[0]) { case 0: {var v$4962 = v$4961[1];
if (v$4962 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.EXPORT");
} else {var v$4963 = v$4962;
if (v$4963[1] == null) {return v$4963[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.EXPORT");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.EXPORT");
} };
},lexps$1113);
if (compiler_objects$0LambdaBasics$1.eq_Types$2576([arrowType$1199,null],ts$1200)) {return [compiler_objects$0LambdaExp$1$4.unitType$1691,null];
} else {var s$3701 = ("Exported function " + v$1214) + " expected function of type:\n";
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3701);
var stringtree$3704 = compiler_objects$0LambdaExp$1$4.layoutType$2973(arrowType$1199);
tools$0PrettyPrint$1.outputTree$1072([function(s$3705){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3705);
},stringtree$3704,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"but found type:\n");
var stringtree$3707;
var t$5219;
var v$3714 = [0,","];
t$5219 = [basis$0List$1.map$697(function(v$5053){return compiler_objects$0LambdaExp$1$4.layoutType$2973(v$5053);
},ts$1200),v$3714,"]",0,"["];
stringtree$3707 = [0,t$5219];
tools$0PrettyPrint$1.outputTree$1072([function(s$3708){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3708);
},stringtree$3707,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
return tools$0Crash$1.impossible$59("LambdaStatSem.Export of function");
};
 break; }case 3: {var v$1192 = prim$1110[1];
var v$1193 = v$1192[0];
valid_t$749(env$1107,v$1193);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.RESET_REGIONSprim.Wrong number of args");
} else {var v$1183 = lexps$1113;
if (v$1183[1] == null) {var v$1190 = v$1183[0];
var ts$1185;
var v$3720 = fix$5120.$type_lexp(env$1107,v$1190);
switch (v$3720[0]) { case 0: {ts$1185 = v$3720[1];
 break; }default: {ts$1185 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.RESET_REGIONSprim1"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1185,[v$1193,null])) {return [unit_Type$910,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.RESET_REGIONSprim2");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.RESET_REGIONSprim.Wrong number of args");
};
};
 break; }default: {var v$1760 = prim$1110[1];
var v$1761 = v$1760[0];
valid_t$749(env$1107,v$1761);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.FORCE_RESET_REGIONSprim.Wrong number of args");
} else {var v$1751 = lexps$1113;
if (v$1751[1] == null) {var v$1758 = v$1751[0];
var ts$1753;
var v$3738 = fix$5120.$type_lexp(env$1107,v$1758);
switch (v$3738[0]) { case 0: {ts$1753 = v$3738[1];
 break; }default: {ts$1753 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.FORCE_RESET_REGIONSprim"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1753,[v$1761,null])) {return [unit_Type$910,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.FORCE_RESET_REGIONSprim");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.FORCE_RESET_REGIONSprim.Wrong number of args");
};
};
} };
};
fix$5120.$type_lexp = function(env$1764,lexp$1767){try {switch (lexp$1767[0]) { case 1: {var v$2222 = lexp$1767[1];
var v$2223 = v$2222[1];
var v$2224 = v$2222[0];
valid_ts$748(env$1764,v$2224);
var t$5214;
var t$5213;
var t$5212;
var v$2830 = env$1764[3];
var v$4242;
var v$2832 = compiler_objects$0Lvars$1$2.lookup$653(v$2830,v$2223);
switch (v$2832[0]) { case 0: {v$4242 = v$2832[1];
 break; }default: {var s$2833 = "lookup_lvar.Cannot find " + (compiler_objects$0Lvars$1$1.pr_lvar$78(v$2223[0],v$2223[1],v$2223[2],v$2223[3],v$2223[4],v$2223[5]));
v$4242 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$2833));
} };
var v$2824 = v$4242[0];
var v$2825 = v$4242[1];
var S$2827 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$2828){return "mk_instance";
},[v$2824,v$2224]);
t$5212 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$2827,v$2825));
t$5213 = [t$5212,null];
t$5214 = t$5213;
return [0,t$5214];
 break; }case 13: {var v$2216 = lexp$1767[1];
var v$2218 = v$2216[1];
valid_t$749(env$1764,v$2218);
return [0,[v$2218,null]];
 break; }case 0: {var v$2210 = lexp$1767[1];
var v$2212 = v$2210[1];
valid_t$749(env$1764,v$2212);
return [0,[v$2212,null]];
 break; }case 7: {return [0,[[2,[null,special_objects$0TyName$1$1.tyName_STRING$264]],null]];
 break; }case 8: {return [0,[[2,[null,special_objects$0TyName$1$1.tyName_REAL$256]],null]];
 break; }case 18: {return [0,[[2,[null,special_objects$0TyName$1$1.tyName_F64$260]],null]];
 break; }case 16: {var v$2198 = lexp$1767[1];
var v$2199 = v$2198[1];
var v$2200 = v$2198[0];
var env$$2180;
var fix$5202 = {};
fix$5202.$foldl = function(v$2840,v$2841){lab$foldl: while (true) {if (v$2841 == null) {return v$2840;
} else {var v$2842 = v$2841;
var v$2843 = v$2842[0];
var v$2844 = v$2842[1];
var t$5203;
var v$4785 = v$2843[0];
var v$4786 = v$2843[1];
var v$4788 = [null,v$4786];
var v$4789 = v$2840[2];
var v$4790 = v$2840[0];
var v$4791 = v$2840[4];
var v$4792 = v$2840[3];
var t$5209 = v$4790;
var t$5208 = v$2840[1];
var t$5207;
var t$5206 = tools$0NatSet$1.union$664;
var t$5205 = v$4789;
var t$5204;
var v$4793 = v$4788[0];
var v$4794 = v$4788[1];
t$5204 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4794),tools$0NatSet$1.fromList$614(v$4793)));
t$5207 = (t$5206(t$5205,t$5204));
t$5203 = [t$5209,t$5208,t$5207,compiler_objects$0Lvars$1$2.add$675(v$4785,v$4788,v$4792),v$4791];
var t$5210 = t$5203;
var t$5211 = v$2844;
var v$2840 = t$5210;
var v$2841 = t$5211;
continue lab$foldl;
};
};
};
var foldl$2839 = fix$5202.$foldl;
env$$2180 = (foldl$2839(env$1764,v$2199));
var ts_body$2190;
var v$2857 = fix$5120.$type_lexp(env$$2180,v$2200);
switch (v$2857[0]) { case 0: {ts_body$2190 = v$2857[1];
 break; }default: {ts_body$2190 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.FN"));
} };
var ts_arg$2191 = basis$0List$1.map$697(function(v$2194){return v$2194[1];
},v$2199);
valid_ts$748(env$1764,ts_arg$2191);
return [0,[[3,[ts_arg$2191,ts_body$2190]],null]];
 break; }case 12: {var v$2108 = lexp$1767[1];
var v$2109 = v$2108[1];
if (v$2109 == null) {var v$2115 = v$2108[0];
var v$2116 = v$2108[2];
var ts$2110;
var v$2865 = fix$5120.$type_lexp(env$1764,v$2115);
switch (v$2865[0]) { case 0: {ts$2110 = v$2865[1];
 break; }default: {ts$2110 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.WILD"));
} };
((ts$2110 == null)?true:false)?0:(tools$0Crash$1.impossible$59("LambdaStatSem.LET.wild -- the binding must be surrounded by a drop expression"));
return fix$5120.$type_lexp(env$1764,v$2116);
} else {var v$2177 = v$2108[0];
var v$2178 = v$2108[2];
var env_scope$2117;
var fix$5184 = {};
fix$5184.$foldl = function(v$2879,v$2880){lab$foldl: while (true) {if (v$2880 == null) {return v$2879;
} else {var v$2881 = v$2880;
var v$2882 = v$2881[0];
var v$2883 = v$2881[1];
var t$5185;
var v$4797 = v$2882[0];
var v$4798 = v$2882[1];
var v$4799 = v$2882[2];
var v$4801 = [v$4798,v$4799];
var v$4802 = v$2879[2];
var v$4803 = v$2879[0];
var v$4804 = v$2879[4];
var v$4805 = v$2879[3];
var t$5191 = v$4803;
var t$5190 = v$2879[1];
var t$5189;
var t$5188 = tools$0NatSet$1.union$664;
var t$5187 = v$4802;
var t$5186;
var v$4806 = v$4801[0];
var v$4807 = v$4801[1];
t$5186 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4807),tools$0NatSet$1.fromList$614(v$4806)));
t$5189 = (t$5188(t$5187,t$5186));
t$5185 = [t$5191,t$5190,t$5189,compiler_objects$0Lvars$1$2.add$675(v$4797,v$4801,v$4805),v$4804];
var t$5192 = t$5185;
var t$5193 = v$2883;
var v$2879 = t$5192;
var v$2880 = t$5193;
continue lab$foldl;
};
};
};
var foldl$2878 = fix$5184.$foldl;
env_scope$2117 = (foldl$2878(env$1764,v$2109));
var tvs$2129;
var b$2896 = null;
var fix$5194 = {};
fix$5194.$foldl = function(v$2899,v$2900){lab$foldl: while (true) {if (v$2900 == null) {return v$2899;
} else {var v$2901 = v$2900;
var v$2902 = v$2901[0];
var v$2903 = v$2901[1];
var t$5195;
var v$4810 = v$2902[1];
t$5195 = (basis$0List$1.s$n$686(v$4810,v$2899));
var t$5196 = t$5195;
var t$5197 = v$2903;
var v$2899 = t$5196;
var v$2900 = t$5197;
continue lab$foldl;
};
};
};
var foldl$2898 = fix$5194.$foldl;
tvs$2129 = (foldl$2898(b$2896,v$2109));
var v$2907 = env$1764[2];
var v$2908 = env$1764[0];
var v$2909 = env$1764[4];
var v$2910 = env$1764[3];
var env_bind$2137 = [v$2908,env$1764[1],tools$0NatSet$1.addList$615(tvs$2129,v$2907),v$2910,v$2909];
var check_polymorphism$2138 = letrec_polymorphism_only$63[0]?(function(v$2146){if (v$2146 == null) {return 0;
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.LET.polymorphic let -- Polymorphism only allowed in FIX.");
};
}):(function(v$2148){return 0;
});
var ts_bind$2162;
var v$2920 = fix$5120.$type_lexp(env_bind$2137,v$2177);
switch (v$2920[0]) { case 0: {ts_bind$2162 = v$2920[1];
 break; }default: {ts_bind$2162 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.LET.bind"));
} };
try {var l$2928 = basis$0ListPair$1.zipEq$96(v$2109,ts_bind$2162);
var fix$5199 = {};
fix$5199.$app = function(v$2930){lab$app: while (true) {if (v$2930 == null) {return 0;
} else {var v$2931 = v$2930;
var v$2932 = v$2931[0];
var v$2933 = v$2931[1];
var v$4813 = v$2932[0];
var v$4814 = v$4813[1];
var v$4815 = v$4813[2];
var v$4816 = v$2932[1];
(valid_s$811(env$1764[0],env$1764[1],env$1764[2],env$1764[3],env$1764[4]))([v$4814,v$4815]);
eqType$844("LET",[v$4815,v$4816]);
check_polymorphism$2138(v$4814);
(tools$0NatSet$1.isEmpty$598(tools$0NatSet$1.intersect$657(tools$0NatSet$1.fromList$614(v$4814),env$1764[2])))?0:(tools$0Crash$1.impossible$59("LambdaStatSem.tyvars_not_in_env.TYVARS in Env!!"));
var t$5200 = v$2933;
var v$2930 = t$5200;
continue lab$app;
};
};
};
var app$2929 = fix$5199.$app;
app$2929(l$2928);
} catch(v$5198) {(function(ListPair$UnequalLengths$2176){var t$5201 = ListPair$UnequalLengths$2176;
if (t$5201[0] == basis$0ListPair$1.en$UnequalLengths$54) {return tools$0Crash$1.impossible$59("LambdaStatSem.LET.pattern and bind type differ in numbers of components");
} else {throw ListPair$UnequalLengths$2176;
};
})(v$5198);
};
return fix$5120.$type_lexp(env_scope$2117,v$2178);
};
 break; }case 11: {var v$2104 = lexp$1767[1];
var v$2106 = v$2104[1];
return fix$5120.$type_lexp(env$1764,v$2106);
 break; }case 17: {var v$2100 = lexp$1767[1];
var v$2101 = v$2100[0];
var v$2102 = v$2100[1];
var env$$2057;
var fix$5161 = {};
fix$5161.$foldl = function(v$2948,v$2949){lab$foldl: while (true) {if (v$2949 == null) {return v$2948;
} else {var v$2950 = v$2949;
var v$2951 = v$2950[0];
var v$2952 = v$2950[1];
var t$5162;
var v$4819 = v$2951[2];
var v$4820 = v$2951[4];
var v$4821 = v$2951[0];
(valid_s$811(v$2948[0],v$2948[1],v$2948[2],v$2948[3],v$2948[4]))([v$4820,v$4821]);
var v$4823 = [null,v$4821];
var v$4824 = v$2948[2];
var v$4825 = v$2948[0];
var v$4826 = v$2948[4];
var v$4827 = v$2948[3];
var v$4912 = v$2948[1];
var v$4913 = tools$0NatSet$1.addList$615(v$4820,v$4824);
var t$5168 = v$4825;
var t$5167 = v$4912;
var t$5166;
var t$5165 = tools$0NatSet$1.union$664;
var t$5164 = v$4913;
var t$5163;
var v$4833 = v$4823[0];
var v$4834 = v$4823[1];
t$5163 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4834),tools$0NatSet$1.fromList$614(v$4833)));
t$5166 = (t$5165(t$5164,t$5163));
t$5162 = [t$5168,t$5167,t$5166,compiler_objects$0Lvars$1$2.add$675(v$4819,v$4823,v$4827),v$4826];
var t$5169 = t$5162;
var t$5170 = v$2952;
var v$2948 = t$5169;
var v$2949 = t$5170;
continue lab$foldl;
};
};
};
var foldl$2947 = fix$5161.$foldl;
env$$2057 = (foldl$2947(env$1764,v$2101));
var type_pairs$2075 = basis$0List$1.map$697(function(v$2079){var v$2080 = v$2079[1];
var v$2081 = v$2079[0];
var t$5171;
var v$4836 = fix$5120.$type_lexp(env$$2057,v$2080);
switch (v$4836[0]) { case 0: {var v$4837 = v$4836[1];
if (v$4837 == null) {t$5171 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.FIX"));
} else {var v$4838 = v$4837;
t$5171 = ((v$4838[1] == null)?v$4838[0]:(tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.FIX")));
};
 break; }default: {t$5171 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.FIX"));
} };
return [t$5171,v$2081];
},v$2101);
var fix$5172 = {};
fix$5172.$app = function(v$2974){lab$app: while (true) {if (v$2974 == null) {return 0;
} else {var v$2975 = v$2974;
var v$2976 = v$2975[0];
var v$2977 = v$2975[1];
eqType$844("FIX",v$2976);
var t$5173 = v$2977;
var v$2974 = t$5173;
continue lab$app;
};
};
};
var app$2973 = fix$5172.$app;
app$2973(type_pairs$2075);
var env_scope$2082;
var fix$5174 = {};
fix$5174.$foldl = function(v$2982,v$2983){lab$foldl: while (true) {if (v$2983 == null) {return v$2982;
} else {var v$2984 = v$2983;
var v$2985 = v$2984[0];
var v$2986 = v$2984[1];
var t$5175;
var v$4844 = v$2985[2];
var v$4845 = v$2985[4];
var v$4846 = v$2985[0];
(tools$0NatSet$1.isEmpty$598(tools$0NatSet$1.intersect$657(tools$0NatSet$1.fromList$614(v$4845),v$2982[2])))?0:(tools$0Crash$1.impossible$59("LambdaStatSem.tyvars_not_in_env.TYVARS in Env!!"));
var v$4848 = [v$4845,v$4846];
var v$4849 = v$2982[2];
var v$4850 = v$2982[0];
var v$4851 = v$2982[4];
var v$4852 = v$2982[3];
var t$5181 = v$4850;
var t$5180 = v$2982[1];
var t$5179;
var t$5178 = tools$0NatSet$1.union$664;
var t$5177 = v$4849;
var t$5176;
var v$4853 = v$4848[0];
var v$4854 = v$4848[1];
t$5176 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4854),tools$0NatSet$1.fromList$614(v$4853)));
t$5179 = (t$5178(t$5177,t$5176));
t$5175 = [t$5181,t$5180,t$5179,compiler_objects$0Lvars$1$2.add$675(v$4844,v$4848,v$4852),v$4851];
var t$5182 = t$5175;
var t$5183 = v$2986;
var v$2982 = t$5182;
var v$2983 = t$5183;
continue lab$foldl;
};
};
};
var foldl$2981 = fix$5174.$foldl;
env_scope$2082 = (foldl$2981(env$1764,v$2101));
return fix$5120.$type_lexp(env_scope$2082,v$2102);
 break; }case 20: {var v$2053 = lexp$1767[1];
var v$2054 = v$2053[0];
var v$2055 = v$2053[1];
var v$2024 = fix$5120.$type_lexp(env$1764,v$2054);
switch (v$2024[0]) { case 0: {var v$2026 = v$2024[1];
if (v$2026 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
} else {var v$2028 = v$2026;
var v$2029 = v$2028[0];
switch (v$2029[0]) { case 3: {if (v$2028[1] == null) {var v$2049 = v$2029[1];
var v$2050 = v$2049[0];
var v$2051 = v$2049[1];
var ts$2032;
var v$3006 = fix$5120.$type_lexp(env$1764,v$2055);
switch (v$3006[0]) { case 0: {ts$2032 = v$3006[1];
 break; }default: {ts$2032 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.APP"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$2032,v$2050)) {return [0,v$2051];
} else {basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"types expected:\n");
var stringtree$3014;
var t$5159;
var v$3021 = [0,","];
t$5159 = [basis$0List$1.map$697(function(v$5048){return compiler_objects$0LambdaExp$1$4.layoutType$2973(v$5048);
},v$2050),v$3021,"]",0,"["];
stringtree$3014 = [0,t$5159];
tools$0PrettyPrint$1.outputTree$1072([function(s$3015){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3015);
},stringtree$3014,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\ntypes:\n");
var stringtree$3023;
var t$5160;
var v$3030 = [0,","];
t$5160 = [basis$0List$1.map$697(function(v$5049){return compiler_objects$0LambdaExp$1$4.layoutType$2973(v$5049);
},ts$2032),v$3030,"]",0,"["];
stringtree$3023 = [0,t$5160];
tools$0PrettyPrint$1.outputTree$1072([function(s$3024){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3024);
},stringtree$3023,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"application:\n");
var stringtree$3032 = compiler_objects$0LambdaExp$1$4.layoutLambdaExp$5080(lexp$1767);
tools$0PrettyPrint$1.outputTree$1072([function(s$3033){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3033);
},stringtree$3032,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
return tools$0Crash$1.impossible$59("LambdaStatSem.APP");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
} };
 break; }case 19: {var v$2011 = lexp$1767[1];
var v$2012 = v$2011[0];
var v$2013 = v$2011[1];
var v$2014 = v$2011[2];
switch (v$2013[0]) { case 0: {var v$2010 = v$2013[1];
valid_t$749(env$1764,v$2010);
 break; }default: {0;
} };
var t$5158 = fix$5120.$type_lexp;
var t$5157;
var v$3052 = env$1764[2];
var v$3053 = env$1764[0];
var v$3054 = env$1764[4];
var v$3055 = env$1764[3];
var v$3056 = env$1764[1];
var ftv$$3057;
switch (v$2013[0]) { case 0: {var v$3058 = v$2013[1];
ftv$$3057 = (tools$0NatSet$1.union$664(v$3052,ftv_Type$155(v$3058)));
 break; }default: {ftv$$3057 = v$3052;
} };
t$5157 = [v$3053,compiler_objects$0Excon$1$2.add$493(v$2012,v$2013,v$3056),ftv$$3057,v$3055,v$3054];
return t$5158(t$5157,v$2014);
 break; }case 9: {var v$1998 = lexp$1767[1];
var v$1999 = v$1998[0];
var v$2000 = v$1998[1];
var v$1986 = fix$5120.$type_lexp(env$1764,v$1999);
switch (v$1986[0]) { case 0: {var v$1988 = v$1986[1];
if (v$1988 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn");
} else {var v$1990 = v$1988;
var v$1991 = v$1990[0];
switch (v$1991[0]) { case 2: {var v$1993 = v$1991[1];
return (v$1993[0] == null)?((v$1990[1] == null)?v$2000:(tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn"))):(tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn"));
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn");
} };
 break; }case 14: {var v$1974 = lexp$1767[1];
var v$1975 = v$1974[0];
var v$1976 = v$1974[1];
var v$1949 = fix$5120.$type_lexp(env$1764,v$1976);
switch (v$1949[0]) { case 0: {var v$1951 = v$1949[1];
if (v$1951 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} else {var v$1953 = v$1951;
var v$1954 = v$1953[0];
switch (v$1954[0]) { case 3: {var v$1956 = v$1954[1];
var v$1957 = v$1956[0];
if (v$1957 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} else {var v$1959 = v$1957;
var v$1960 = v$1959[0];
switch (v$1960[0]) { case 2: {var v$1962 = v$1960[1];
if (v$1962[0] == null) {if (v$1959[1] == null) {if (v$1953[1] == null) {var v$1972 = v$1956[1];
var ts$1966;
var v$3079 = fix$5120.$type_lexp(env$1764,v$1975);
switch (v$3079[0]) { case 0: {ts$1966 = v$3079[1];
 break; }default: {ts$1966 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.HANDLE"));
} };
return (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1966,v$1972))?[0,v$1972]:(tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE"));
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} };
 break; }case 4: {var v$1933 = lexp$1767[1];
var v$1934 = v$1933[1];
var v$1935 = v$1933[0];
var tn$1920;
switch (v$1935) { case 31: {tn$1920 = special_objects$0TyName$1$1.tyName_INT31$216;
 break; }case 32: {tn$1920 = special_objects$0TyName$1$1.tyName_INT32$220;
 break; }case 63: {tn$1920 = special_objects$0TyName$1$1.tyName_INT63$224;
 break; }case 64: {tn$1920 = special_objects$0TyName$1$1.tyName_INT64$228;
 break; }default: {var s$3112 = "SWITCH_I.precision = " + (basis$0Int32$1.toString$458(v$1935));
tn$1920 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3112));
} };
return type_switch$999(function(v$5001){return fix$5120.$type_lexp(env$1764,v$5001);
},function(v$1932){return tn$1920;
},v$1934);
 break; }case 2: {var v$1916 = lexp$1767[1];
var v$1917 = v$1916[1];
var v$1918 = v$1916[0];
var tn$1903;
switch (v$1918) { case 31: {tn$1903 = special_objects$0TyName$1$1.tyName_WORD31$240;
 break; }case 32: {tn$1903 = special_objects$0TyName$1$1.tyName_WORD32$244;
 break; }case 63: {tn$1903 = special_objects$0TyName$1$1.tyName_WORD63$248;
 break; }case 64: {tn$1903 = special_objects$0TyName$1$1.tyName_WORD64$252;
 break; }default: {tn$1903 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_I"));
} };
return type_switch$999(function(v$5003){return fix$5120.$type_lexp(env$1764,v$5003);
},function(v$1915){return tn$1903;
},v$1917);
 break; }case 3: {var v$1901 = lexp$1767[1];
return type_switch$999(function(v$5005){return fix$5120.$type_lexp(env$1764,v$5005);
},function(s$1900){return special_objects$0TyName$1$1.tyName_STRING$264;
},v$1901);
 break; }case 6: {var v$1896 = lexp$1767[1];
return type_switch$999(function(v$5007){return fix$5120.$type_lexp(env$1764,v$5007);
},function(v$1868){var v$1895 = v$1868[0];
var v$3118 = env$1764[0];
var v$1879;
var v$3120 = compiler_objects$0Con$1$2.lookup$499(v$3118,v$1895);
switch (v$3120[0]) { case 0: {v$1879 = v$3120[1];
 break; }default: {var s$3121 = "lookup_con.Cannot find " + v$1895[1];
v$1879 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3121));
} };
var v$1880 = v$1879[1];
switch (v$1880[0]) { case 2: {return v$1880[1][1];
 break; }case 3: {var v$1882 = v$1880[1];
var v$1883 = v$1882[1];
if (v$1883 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
} else {var v$1885 = v$1883;
var v$1886 = v$1885[0];
switch (v$1886[0]) { case 2: {if (v$1885[1] == null) {return v$1886[1][1];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
} };
},v$1896);
 break; }case 5: {var v$1864 = lexp$1767[1];
return type_switch$999(function(v$5009){return fix$5120.$type_lexp(env$1764,v$5009);
},function(v$1860){var v$1863 = v$1860[0];
var v$3139 = env$1764[1];
var v$3141 = compiler_objects$0Excon$1$2.lookup$471(v$3139,v$1863);
switch (v$3141[0]) { case 0: {v$3141[1];
 break; }default: {var s$3142 = "lookup_excon.Cannot find " + v$1863[1];
tools$0Crash$1.impossible$59("LambdaStatSem." + s$3142);
} };
return special_objects$0TyName$1$1.tyName_EXN$300;
},v$1864);
 break; }case 10: {var v$1854 = lexp$1767[1];
var v$1855 = v$1854[0];
var v$1856 = v$1854[1];
return [0,fix$5120.$type_prim(env$1764,v$1855,v$1856)];
 break; }default: {var v$2255 = lexp$1767[1];
var v$2256 = v$2255[1];
var v$2257 = v$2255[0];
var t$5215;
var v$2253 = basis$0List$1.map$697(function(p$3159){var v$3160 = p$3159[1];
var v$3163 = env$1764[3];
var v$3162;
var v$3165 = compiler_objects$0Lvars$1$2.lookup$653(v$3163,v$3160);
switch (v$3165[0]) { case 0: {v$3162 = v$3165[1];
 break; }default: {var s$3166 = "lookup_lvar.Cannot find " + (compiler_objects$0Lvars$1$1.pr_lvar$78(v$3160[0],v$3160[1],v$3160[2],v$3160[3],v$3160[4],v$3160[5]));
v$3162 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3166));
} };
return [v$3162[1],v$3160,v$3162[0]];
},v$2256);
t$5215 = [basis$0List$1.map$697(function(v$3169){var v$3170 = v$3169[0];
var t$5217 = v$3170;
var t$5216;
var v$3172 = env$1764[1];
var v$3174 = compiler_objects$0Excon$1$2.lookup$471(v$3172,v$3170);
switch (v$3174[0]) { case 0: {t$5216 = v$3174[1];
 break; }default: {var s$3175 = "lookup_excon.Cannot find " + v$3170[1];
t$5216 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3175));
} };
return [t$5217,t$5216];
},v$2257),v$2253];
return [2,t$5215];
} };
} catch(v$5156) {return (function(v$2262){var t$5218 = v$2262;
if (t$5218[0] == en$AbortExp$1102) {throw exn$AbortExp$1102;
} else {var stringtree$3178 = compiler_objects$0LambdaExp$1$4.layoutLambdaExp$5080(lexp$1767);
tools$0PrettyPrint$1.outputTree$1072([function(s$3179){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3179);
},stringtree$3178,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
var stringtree$3180 = compiler0$0LambdaStatSem$1.layout_env$590(env$1764[0],env$1764[1],env$1764[2],env$1764[3],env$1764[4]);
tools$0PrettyPrint$1.outputTree$1072([function(s$3181){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3181);
},stringtree$3180,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
throw exn$AbortExp$1102;
};
})(v$5156);
};
};
var type_prim$1104 = fix$5120.$type_prim;
var type_lexp$1103 = fix$5120.$type_lexp;
compiler0$0LambdaStatSem$1.type_check$2353 = function(v$2371,v$4979,v$2372){var v$2373 = v$2372[1];
var v$2374 = v$2373[0];
var v$2375 = v$2373[1];
(letrec_polymorphism_only$63[0] = v$4979,0);
var env$$2363;
var v$3908 = v$2374[1];
var concat$3909;
var b$3911 = null;
concat$3909 = (function(c$3912){var fix$5121 = {};
fix$5121.$foldl = function(v$3914,v$3915){lab$foldl: while (true) {if (v$3915 == null) {return v$3914;
} else {var v$3916 = v$3915;
var v$3917 = v$3916[0];
var v$3918 = v$3916[1];
var t$5122 = basis$0List$1.s$n$686(v$3917,v$3914);
var t$5123 = v$3918;
var v$3914 = t$5122;
var v$3915 = t$5123;
continue lab$foldl;
};
};
};
var foldl$3913 = fix$5121.$foldl;
return foldl$3913(b$3911,c$3912);
});
var c$3962 = concat$3909(v$3908);
var fix$5124 = {};
fix$5124.$foldl = function(v$3964,v$3965){lab$foldl: while (true) {if (v$3965 == null) {return v$3964;
} else {var v$3966 = v$3965;
var v$3967 = v$3966[0];
var v$3968 = v$3966[1];
var t$5138;
var t$5137 = compiler0$0LambdaStatSem$1.plus$262;
var t$5136 = v$3964;
var t$5125;
var v$3972 = v$3967[0];
var v$3973 = v$3967[1];
var v$3974 = v$3967[2];
var env$3975;
var fix$5126 = {};
fix$5126.$foldl = function(v$3977,v$3978){lab$foldl: while (true) {if (v$3978 == null) {return v$3977;
} else {var v$3979 = v$3978;
var v$3980 = v$3979[0];
var v$3981 = v$3979[1];
var t$5127;
var v$3984 = v$3980[0];
var v$3985 = v$3980[1];
var v$4709;
switch (v$3985[0]) { case 0: {v$4709 = [v$3972,[3,[[v$3985[1],null],[[2,[basis$0List$1.map$697((function(env$5128){return function(v$3988){return [0,v$3988];
};
})([]),v$3972),v$3973]],null]]]];
 break; }default: {v$4709 = [v$3972,[2,[basis$0List$1.map$697((function(env$5129){return function(v$3989){return [0,v$3989];
};
})([]),v$3972),v$3973]]];
} };
var v$3993 = v$3977[2];
var v$3994 = v$3977[0];
var v$3995 = v$3977[4];
var v$3996 = v$3977[3];
var v$3997 = v$3977[1];
var v$3998;
var t$5132 = tools$0NatSet$1.union$664;
var t$5131 = v$3993;
var t$5130;
var v$3999 = v$4709[0];
var v$4000 = v$4709[1];
t$5130 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4000),tools$0NatSet$1.fromList$614(v$3999)));
v$3998 = (t$5132(t$5131,t$5130));
t$5127 = [compiler_objects$0Con$1$2.add$521(v$3984,v$4709,v$3994),v$3997,v$3998,v$3996,v$3995];
var t$5133 = t$5127;
var t$5134 = v$3981;
var v$3977 = t$5133;
var v$3978 = t$5134;
continue lab$foldl;
};
};
};
var foldl$3976 = fix$5126.$foldl;
env$3975 = (foldl$3976(compiler0$0LambdaStatSem$1.empty$210,v$3974));
var v$4712 = basis$0List$1.map$697((function(env$5135){return function(v$4002){return v$4002[0];
};
})([]),v$3974);
var v$4006 = env$3975[2];
var v$4007 = env$3975[0];
var v$4008 = env$3975[4];
t$5125 = [v$4007,env$3975[1],v$4006,env$3975[3],special_objects$0TyName$1$2.add$1390(v$3973,v$4712,v$4008)];
t$5138 = (t$5137(t$5136,t$5125));
var t$5139 = t$5138;
var t$5140 = v$3968;
var v$3964 = t$5139;
var v$3965 = t$5140;
continue lab$foldl;
};
};
};
var foldl$3963 = fix$5124.$foldl;
env$$2363 = (foldl$3963(compiler0$0LambdaStatSem$1.empty$210,c$3962));
var fr$2364;
try {fr$2364 = (type_lexp$1103(compiler0$0LambdaStatSem$1.plus$262(v$2371,env$$2363),v$2375));
} catch(v$5141) {fr$2364 = ((function(s$m$2367){var stringtree$4009 = compiler_objects$0LambdaExp$1$4.layoutLambdaExp$5080(v$2375);
tools$0PrettyPrint$1.outputTree$1072([function(s$4010){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$4010);
},stringtree$4009,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
throw s$m$2367;
})(v$5141));
};
var env$$$2370;
switch (fr$2364[0]) { case 2: {var v$4012 = fr$2364[1];
var v$4013 = v$4012[1];
var v$4014 = v$4012[0];
var env$$4015;
var fix$5142 = {};
fix$5142.$foldl = function(v$4036,v$4037){lab$foldl: while (true) {if (v$4037 == null) {return v$4036;
} else {var v$4038 = v$4037;
var v$4039 = v$4038[0];
var v$4040 = v$4038[1];
var t$5143;
var v$4070 = v$4039[1];
var v$4071 = v$4039[2];
var v$4072 = v$4039[0];
var v$4717 = [v$4071,v$4072];
var v$4078 = v$4036[2];
var v$4079 = v$4036[0];
var v$4080 = v$4036[4];
var v$4081 = v$4036[3];
var t$5149 = v$4079;
var t$5148 = v$4036[1];
var t$5147;
var t$5146 = tools$0NatSet$1.union$664;
var t$5145 = v$4078;
var t$5144;
var v$4082 = v$4717[0];
var v$4083 = v$4717[1];
t$5144 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4083),tools$0NatSet$1.fromList$614(v$4082)));
t$5147 = (t$5146(t$5145,t$5144));
t$5143 = [t$5149,t$5148,t$5147,compiler_objects$0Lvars$1$2.add$675(v$4070,v$4717,v$4081),v$4080];
var t$5150 = t$5143;
var t$5151 = v$4040;
var v$4036 = t$5150;
var v$4037 = t$5151;
continue lab$foldl;
};
};
};
var foldl$4035 = fix$5142.$foldl;
env$$4015 = (foldl$4035(compiler0$0LambdaStatSem$1.empty$210,v$4013));
var fix$5152 = {};
fix$5152.$foldl = function(v$4061,v$4062){lab$foldl: while (true) {if (v$4062 == null) {return v$4061;
} else {var v$4063 = v$4062;
var v$4064 = v$4063[0];
var v$4065 = v$4063[1];
var t$5153;
var v$4086 = v$4064[0];
var v$4087 = v$4064[1];
var v$4093 = v$4061[2];
var v$4094 = v$4061[0];
var v$4095 = v$4061[4];
var v$4096 = v$4061[3];
var v$4097 = v$4061[1];
var ftv$$4098;
switch (v$4087[0]) { case 0: {var v$4099 = v$4087[1];
ftv$$4098 = (tools$0NatSet$1.union$664(v$4093,ftv_Type$155(v$4099)));
 break; }default: {ftv$$4098 = v$4093;
} };
t$5153 = [v$4094,compiler_objects$0Excon$1$2.add$493(v$4086,v$4087,v$4097),ftv$$4098,v$4096,v$4095];
var t$5154 = t$5153;
var t$5155 = v$4065;
var v$4061 = t$5154;
var v$4062 = t$5155;
continue lab$foldl;
};
};
};
var foldl$4060 = fix$5152.$foldl;
env$$$2370 = (foldl$4060(env$$4015,v$4014));
 break; }default: {env$$$2370 = (tools$0Crash$1.impossible$59("LambdaStatSem.env_from_frame. No frame"));
} };
return compiler0$0LambdaStatSem$1.plus$262(env$$2363,env$$$2370);
};
return 0;
})();
