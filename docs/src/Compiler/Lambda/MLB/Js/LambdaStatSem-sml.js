if ((typeof(compiler0$0LambdaStatSem$1)) == "undefined") {compiler0$0LambdaStatSem$1 = {};
};
(function(){var letrec_polymorphism_only$63 = [false];
var tag_values$64 = tools$0Flags$1$6.is_on0$5161("tag_values");
var ftv_Type$155 = function(Type$158){var fix$5051 = {};
fix$5051.$f = function(v$180,v$4964){switch (v$180[0]) { case 0: {var v$191 = v$180[1];
return tools$0NatSet$1.insert$636(v$191,v$4964);
 break; }case 3: {var v$186 = v$180[1];
var v$187 = v$186[0];
var v$188 = v$186[1];
var b$2419;
var fix$5055 = {};
fix$5055.$foldl = function(v$2431,v$2432){lab$foldl: while (true) {if (v$2432 == null) {return v$2431;
} else {var v$2433 = v$2432;
var v$2434 = v$2433[0];
var v$2435 = v$2433[1];
var t$5056 = fix$5051.$f(v$2434,v$2431);
var t$5057 = v$2435;
var v$2431 = t$5056;
var v$2432 = t$5057;
continue lab$foldl;
};
};
};
var foldl$2430 = fix$5055.$foldl;
b$2419 = (foldl$2430(v$4964,v$187));
var fix$5058 = {};
fix$5058.$foldl = function(v$2422,v$2423){lab$foldl: while (true) {if (v$2423 == null) {return v$2422;
} else {var v$2424 = v$2423;
var v$2425 = v$2424[0];
var v$2426 = v$2424[1];
var t$5059 = fix$5051.$f(v$2425,v$2422);
var t$5060 = v$2426;
var v$2422 = t$5059;
var v$2423 = t$5060;
continue lab$foldl;
};
};
};
var foldl$2421 = fix$5058.$foldl;
return foldl$2421(b$2419,v$188);
 break; }case 2: {var v$182 = v$180[1];
var v$183 = v$182[0];
var fix$5052 = {};
fix$5052.$foldl = function(v$2440,v$2441){lab$foldl: while (true) {if (v$2441 == null) {return v$2440;
} else {var v$2442 = v$2441;
var v$2443 = v$2442[0];
var v$2444 = v$2442[1];
var t$5053 = fix$5051.$f(v$2443,v$2440);
var t$5054 = v$2444;
var v$2440 = t$5053;
var v$2441 = t$5054;
continue lab$foldl;
};
};
};
var foldl$2439 = fix$5052.$foldl;
return foldl$2439(v$4964,v$183);
 break; }default: {var v$193 = v$180[1];
var fix$5061 = {};
fix$5061.$foldl = function(v$2449,v$2450){lab$foldl: while (true) {if (v$2450 == null) {return v$2449;
} else {var v$2451 = v$2450;
var v$2452 = v$2451[0];
var v$2453 = v$2451[1];
var t$5062 = fix$5051.$f(v$2452,v$2449);
var t$5063 = v$2453;
var v$2449 = t$5062;
var v$2450 = t$5063;
continue lab$foldl;
};
};
};
var foldl$2448 = fix$5061.$foldl;
return foldl$2448(v$4964,v$193);
} };
};
var f$159 = fix$5051.$f;
return f$159(Type$158,null);
};
compiler0$0LambdaStatSem$1.empty$210 = [compiler_objects$0Con$1$2.empty$348(0),compiler_objects$0Excon$1$2.empty$320(0),null,compiler_objects$0Lvars$1$2.empty$502(0),special_objects$0TyName$1$2.empty$1217(0)];
var initial_con_env$216;
var typescheme_TRUE$217;
var Type$2454 = [2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]];
typescheme_TRUE$217 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2454)),Type$2454];
var typescheme_FALSE$218;
var Type$2455 = [2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]];
typescheme_FALSE$218 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2455)),Type$2455];
var typescheme_NIL$219;
var tyvar$220 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$2456 = [2,[[[0,tyvar$220],null],special_objects$0TyName$1$1.tyName_LIST$272]];
typescheme_NIL$219 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2456)),Type$2456];
var typescheme_CONS$221;
var tyvar$222 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$2457 = [3,[[[1,[[0,tyvar$222],[[2,[[[0,tyvar$222],null],special_objects$0TyName$1$1.tyName_LIST$272]],null]]],null],[[2,[[[0,tyvar$222],null],special_objects$0TyName$1$1.tyName_LIST$272]],null]]];
typescheme_CONS$221 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2457)),Type$2457];
var typescheme_QUOTE$223;
var tyvar$224 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$2458 = [3,[[[2,[null,special_objects$0TyName$1$1.tyName_STRING$264]],null],[[2,[[[0,tyvar$224],null],special_objects$0TyName$1$1.tyName_FRAG$276]],null]]];
typescheme_QUOTE$223 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2458)),Type$2458];
var typescheme_ANTIQUOTE$225;
var tyvar$226 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$2459 = [3,[[[0,tyvar$226],null],[[2,[[[0,tyvar$226],null],special_objects$0TyName$1$1.tyName_FRAG$276]],null]]];
typescheme_ANTIQUOTE$225 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2459)),Type$2459];
var typescheme_INTINF$227;
var Type$2460 = [3,[[[1,[[2,[[[2,[null,special_objects$0TyName$1$1.tyName_INT31$216]],null],special_objects$0TyName$1$1.tyName_LIST$272]],[[2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]],null]]],null],[[2,[null,special_objects$0TyName$1$1.tyName_INTINF$232]],null]]];
typescheme_INTINF$227 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2460)),Type$2460];
initial_con_env$216 = (compiler_objects$0Con$1$2.fromList$663([[compiler_objects$0Con$1$1.con_TRUE$127,typescheme_TRUE$217],[[compiler_objects$0Con$1$1.con_FALSE$128,typescheme_FALSE$218],[[compiler_objects$0Con$1$1.con_NIL$129,typescheme_NIL$219],[[compiler_objects$0Con$1$1.con_CONS$130,typescheme_CONS$221],[[compiler_objects$0Con$1$1.con_QUOTE$131,typescheme_QUOTE$223],[[compiler_objects$0Con$1$1.con_ANTIQUOTE$132,typescheme_ANTIQUOTE$225],[[compiler_objects$0Con$1$1.con_INTINF$133,typescheme_INTINF$227],null]]]]]]]));
var initial_tyname_env$228 = special_objects$0TyName$1$2.fromList$1532([[special_objects$0TyName$1$1.tyName_BOOL$212,[compiler_objects$0Con$1$1.con_TRUE$127,[compiler_objects$0Con$1$1.con_FALSE$128,null]]],[[special_objects$0TyName$1$1.tyName_INT31$216,null],[[special_objects$0TyName$1$1.tyName_INT32$220,null],[[special_objects$0TyName$1$1.tyName_INT63$224,null],[[special_objects$0TyName$1$1.tyName_INT64$228,null],[[special_objects$0TyName$1$1.tyName_INTINF$232,[compiler_objects$0Con$1$1.con_INTINF$133,null]],[[special_objects$0TyName$1$1.tyName_WORD8$236,null],[[special_objects$0TyName$1$1.tyName_WORD31$240,null],[[special_objects$0TyName$1$1.tyName_WORD32$244,null],[[special_objects$0TyName$1$1.tyName_WORD63$248,null],[[special_objects$0TyName$1$1.tyName_WORD64$252,null],[[special_objects$0TyName$1$1.tyName_REAL$256,null],[[special_objects$0TyName$1$1.tyName_F64$260,null],[[special_objects$0TyName$1$1.tyName_STRING$264,null],[[special_objects$0TyName$1$1.tyName_CHAR$268,null],[[special_objects$0TyName$1$1.tyName_LIST$272,[compiler_objects$0Con$1$1.con_NIL$129,[compiler_objects$0Con$1$1.con_CONS$130,null]]],[[special_objects$0TyName$1$1.tyName_FRAG$276,[compiler_objects$0Con$1$1.con_QUOTE$131,[compiler_objects$0Con$1$1.con_ANTIQUOTE$132,null]]],[[special_objects$0TyName$1$1.tyName_CHARARRAY$292,null],[[special_objects$0TyName$1$1.tyName_FOREIGNPTR$296,null],[[special_objects$0TyName$1$1.tyName_ARRAY$284,null],[[special_objects$0TyName$1$1.tyName_VECTOR$288,null],[[special_objects$0TyName$1$1.tyName_REF$280,null],[[special_objects$0TyName$1$1.tyName_EXN$300,null],null]]]]]]]]]]]]]]]]]]]]]]]);
var initial_excon_env$230 = compiler_objects$0Excon$1$2.fromList$635([[compiler_objects$0Excon$1$1.ex_DIV$117,[1]],[[compiler_objects$0Excon$1$1.ex_MATCH$118,[1]],[[compiler_objects$0Excon$1$1.ex_BIND$119,[1]],[[compiler_objects$0Excon$1$1.ex_OVERFLOW$120,[1]],[[compiler_objects$0Excon$1$1.ex_INTERRUPT$121,[1]],[[compiler_objects$0Excon$1$1.ex_SUBSCRIPT$122,[1]],[[compiler_objects$0Excon$1$1.ex_SIZE$123,[1]],null]]]]]]]);
var ftv_initial$231 = compiler_objects$0Con$1$2.fold$774(function(v$235){var v$236 = v$235[0];
var v$237 = v$235[1];
var t$5067 = tools$0NatSet$1.union$664;
var t$5066;
var v$2462 = v$236[0];
var v$2463 = v$236[1];
t$5066 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$2463),tools$0NatSet$1.fromList$614(v$2462)));
return t$5067(t$5066,v$237);
},compiler_objects$0Lvars$1$2.fold$928(function(v$241){var v$242 = v$241[0];
var v$243 = v$241[1];
var t$5065 = tools$0NatSet$1.union$664;
var t$5064;
var v$2465 = v$242[0];
var v$2466 = v$242[1];
t$5064 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$2466),tools$0NatSet$1.fromList$614(v$2465)));
return t$5065(t$5064,v$243);
},compiler_objects$0Excon$1$2.fold$746(function(v$250){var v$251 = v$250[0];
switch (v$251[0]) { case 0: {var v$253 = v$251[1];
var v$254 = v$250[1];
return tools$0NatSet$1.union$664(ftv_Type$155(v$253),v$254);
 break; }default: {return v$250[1];
} };
},null,initial_excon_env$230),compiler_objects$0Lvars$1$2.empty$502(0)),initial_con_env$216);
compiler0$0LambdaStatSem$1.initial$256 = [initial_con_env$216,initial_excon_env$230,ftv_initial$231,compiler_objects$0Lvars$1$2.empty$502(0),initial_tyname_env$228];
compiler0$0LambdaStatSem$1.plus$262 = function(v$280,v$4965){var v$281 = v$280[2];
var v$282 = v$280[0];
var v$283 = v$280[4];
var v$284 = v$280[3];
var v$285 = v$280[1];
var v$287 = v$4965[2];
var v$288 = v$4965[0];
var v$289 = v$4965[4];
var v$290 = v$4965[3];
var v$291 = v$4965[1];
var v$275 = tools$0NatSet$1.union$664(v$281,v$287);
var v$276 = compiler_objects$0Con$1$2.plus$549(v$282,v$288);
var v$277 = special_objects$0TyName$1$2.plus$1418(v$283,v$289);
var v$278 = compiler_objects$0Lvars$1$2.plus$703(v$284,v$290);
return [v$276,compiler_objects$0Excon$1$2.plus$521(v$285,v$291),v$275,v$278,v$277];
};
compiler0$0LambdaStatSem$1.layout_env$590 = function(v$602,v$605,v$4966,v$604,v$603){var t$5068;
var v$599 = [0,"; "];
t$5068 = [[(((compiler_objects$0Con$1$2.layoutMap$980(" -> ","}",", ","ConEnv: {"))(function(con$2593){return [1,con$2593[1]];
}))(function(v$2594){var v$2595 = v$2594[0];
var v$2596 = v$2594[1];
var t$5075;
var v$2597 = [2,"."];
var t$5079;
var t$5078;
var t$5077;
var t$5076;
var v$2604 = [0,","];
t$5076 = [basis$0List$1.map$697(function(x$4753){var v$4754 = compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(x$4753);
return [1,v$4754];
},v$2595),v$2604,")",0,"("];
t$5077 = [0,t$5076];
t$5078 = [t$5077,[compiler_objects$0LambdaExp$1$4.layoutType$2964(v$2596),null]];
t$5079 = t$5078;
t$5075 = [t$5079,v$2597,"",0,"\\/"];
return [0,t$5075];
}))(v$602),[(((special_objects$0TyName$1$2.layoutMap$1849(" -> ","}",", ","TyNameEnv: {"))(function(tyname$2606){return [1,special_objects$0TyName$1$1.pr_TyName$333(tyname$2606[0],tyname$2606[1],tyname$2606[2],tyname$2606[3],tyname$2606[4],tyname$2606[5])];
}))(function(cons$2607){var t$5074;
var v$2608 = [0,","];
t$5074 = [basis$0List$1.map$697(function(con$2609){return [1,con$2609[1]];
},cons$2607),v$2608,"]",0,"["];
return [0,t$5074];
}))(v$603),[(((compiler_objects$0Lvars$1$2.layoutMap$1134(" -> ","}",", ","LvarEnv: {"))(function(lvar$2611){return [1,compiler_objects$0Lvars$1$1.pr_lvar$78(lvar$2611[0],lvar$2611[1],lvar$2611[2],lvar$2611[3],lvar$2611[4],lvar$2611[5])];
}))(function(v$2612){var v$2613 = v$2612[0];
var v$2614 = v$2612[1];
var t$5069;
var v$2615 = [2,"."];
var t$5073;
var t$5072;
var t$5071;
var t$5070;
var v$2622 = [0,","];
t$5070 = [basis$0List$1.map$697(function(x$4757){var v$4758 = compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(x$4757);
return [1,v$4758];
},v$2613),v$2622,")",0,"("];
t$5071 = [0,t$5070];
t$5072 = [t$5071,[compiler_objects$0LambdaExp$1$4.layoutType$2964(v$2614),null]];
t$5073 = t$5072;
t$5069 = [t$5073,v$2615,"",0,"\\/"];
return [0,t$5069];
}))(v$604),[(((compiler_objects$0Excon$1$2.layoutMap$952(" -> ","}",", ","ExConEnv: {"))(function(excon$2624){return [1,excon$2624[1]];
}))(function(v$2625){switch (v$2625[0]) { case 0: {var v$2626 = v$2625[1];
return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$2626);
 break; }default: {return [1,"NONE"];
} };
}))(v$605),null]]]],v$599,"]",2,"LambdaStatEnv: ["];
return [0,t$5068];
};
compiler0$0LambdaStatSem$1.restrict$606 = function(v$696,v$4967){var v$697 = v$696[2];
var v$698 = v$696[0];
var v$699 = v$696[4];
var v$700 = v$696[3];
var v$701 = v$696[1];
var v$703 = v$4967[0];
var v$704 = v$4967[3];
var v$705 = v$4967[2];
var v$706 = v$4967[1];
if (tools$0NatSet$1.isEmpty$598(v$697)) {0;
} else {basis$0General$1.print$163("Restrict: Problem with set of free type variables\n");
basis$0General$1.print$163("not being empty. Here is the environment: \n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5039){return basis$0General$1.print$163(v$5039);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
basis$0General$1.print$163("Non-empty set is:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5040){return basis$0General$1.print$163(v$5040);
},((tools$0NatSet$1.layoutSet$740("}",",","{"))(function(x$2646){var v$4760 = compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(x$2646);
return [1,v$4760];
}))(v$697),tools$0Flags$1$1.colwidth$100[0]]);
tools$0Crash$1.impossible$59("LambdaStatSem.restrict.ftvset not empty");
};
var con_env1$647;
try {con_env1$647 = (compiler_objects$0Con$1$2.restrict$900(function(v$2649){return v$2649[1];
},v$698,v$703));
} catch(v$5080) {con_env1$647 = ((function(v$651){var t$5081 = v$651;
if (t$5081[0] == compiler_objects$0Con$1$2.en$Restrict$899) {var s$648 = v$651[1];
var s$2650 = "Problem with constructor environment; constructor " + s$648;
basis$0General$1.print$163(s$2650 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5041){return basis$0General$1.print$163(v$5041);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$651;
};
})(v$5080));
};
var tyname_env1$658;
try {tyname_env1$658 = (special_objects$0TyName$1$2.restrict$1769(function(v$4968){return special_objects$0TyName$1$1.pr_TyName$333(v$4968[0],v$4968[1],v$4968[2],v$4968[3],v$4968[4],v$4968[5]);
},v$699,v$704));
} catch(v$5082) {tyname_env1$658 = ((function(v$662){var t$5083 = v$662;
if (t$5083[0] == special_objects$0TyName$1$2.en$Restrict$1768) {var s$659 = v$662[1];
var s$2658 = "Problem with tyname environment; tyname " + s$659;
basis$0General$1.print$163(s$2658 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5042){return basis$0General$1.print$163(v$5042);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$662;
};
})(v$5082));
};
var lvar_env1$669;
try {lvar_env1$669 = (compiler_objects$0Lvars$1$2.restrict$1054(function(v$4969){return compiler_objects$0Lvars$1$1.pr_lvar$78(v$4969[0],v$4969[1],v$4969[2],v$4969[3],v$4969[4],v$4969[5]);
},v$700,v$705));
} catch(v$5084) {lvar_env1$669 = ((function(v$673){var t$5085 = v$673;
if (t$5085[0] == compiler_objects$0Lvars$1$2.en$Restrict$1053) {var s$670 = v$673[1];
var s$2666 = "Problem with lvar environment; lvar " + s$670;
basis$0General$1.print$163(s$2666 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5043){return basis$0General$1.print$163(v$5043);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$673;
};
})(v$5084));
};
var t$5089 = con_env1$647;
var t$5087;
try {t$5087 = (compiler_objects$0Excon$1$2.restrict$872(function(v$2674){return v$2674[1];
},v$701,v$706));
} catch(v$5086) {t$5087 = ((function(v$684){var t$5088 = v$684;
if (t$5088[0] == compiler_objects$0Excon$1$2.en$Restrict$871) {var s$681 = v$684[1];
var s$2675 = "Problem with excon environment; excon " + s$681;
basis$0General$1.print$163(s$2675 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5044){return basis$0General$1.print$163(v$5044);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$684;
};
})(v$5086));
};
return [t$5089,t$5087,v$697,lvar_env1$669,tyname_env1$658];
};
compiler0$0LambdaStatSem$1.enrich$707 = function(v$709){return true;
};
compiler0$0LambdaStatSem$1.pu$710;
var pu_f$743 = tools$0NatSet$1.pu$771(compiler_objects$0LambdaExp$1$4.pu_tyvar$5076);
var pu_ce$744 = compiler_objects$0Con$1$2.pu$1081(compiler_objects$0Con$1$1.pu$135,compiler_objects$0LambdaExp$1$4.pu_TypeScheme$5081);
var pu_te$745 = special_objects$0TyName$1$2.pu$1950(special_objects$0TyName$1$1.pu$426,pickle$0pickle$1.listGen$2109(compiler_objects$0Con$1$1.pu$135));
var pu_le$746 = compiler_objects$0Lvars$1$2.pu$1235(compiler_objects$0Lvars$1$3.pu$1992,compiler_objects$0LambdaExp$1$4.pu_TypeScheme$5081);
var pu_ee$747 = compiler_objects$0Excon$1$2.pu$1053(compiler_objects$0Excon$1$1.pu$125,pickle$0pickle$1.optionGen$2134(compiler_objects$0LambdaExp$1$4.pu_Type$5078));
compiler0$0LambdaStatSem$1.pu$710 = (pickle$0pickle$1.convert$2342([function(v$2683){var v$2684 = v$2683[0];
return [v$2684[1],v$2683[1],v$2684[0],v$2684[3],v$2684[2]];
},function(v$2685){return [[v$2685[2],v$2685[0],v$2685[4],v$2685[3]],v$2685[1]];
}],pickle$0pickle$1.pairGen0$983(pickle$0pickle$1.tup4Gen0$2377(pu_f$743,pu_ce$744,pu_te$745,pu_le$746),pu_ee$747)));
var fix$5090 = {};
fix$5090.$valid_t = function(e$752,ty$755){switch (ty$755[0]) { case 2: {var v$785 = ty$755[1];
var v$786 = v$785[0];
var v$787 = v$785[1];
var v$2687 = e$752[4];
var v$2689 = special_objects$0TyName$1$2.lookup$1368(v$2687,v$787);
switch (v$2689[0]) { case 0: {v$2689[1];
 break; }default: {var s$2690 = "lookup_tyname.Cannot find " + (special_objects$0TyName$1$1.pr_TyName$333(v$787[0],v$787[1],v$787[2],v$787[3],v$787[4],v$787[5]));
tools$0Crash$1.impossible$59("LambdaStatSem." + s$2690);
} };
return fix$5090.$valid_ts(e$752,v$786);
 break; }case 3: {var v$779 = ty$755[1];
var v$780 = v$779[0];
var v$781 = v$779[1];
fix$5090.$valid_ts(e$752,v$780);
return fix$5090.$valid_ts(e$752,v$781);
 break; }case 0: {var v$775 = ty$755[1];
if (tools$0NatSet$1.member$591(v$775,e$752[2])) {return 0;
} else {var s$2695 = "valid_t.non-bound type variable " + (compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(v$775));
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$2695);
};
 break; }default: {var v$788 = ty$755[1];
return fix$5090.$valid_ts(e$752,v$788);
} };
};
fix$5090.$valid_ts = function(v$791,v$794){if (v$794 == null) {return 0;
} else {var v$808 = v$794;
var v$809 = v$808[0];
var v$810 = v$808[1];
fix$5090.$valid_t(v$791,v$809);
return fix$5090.$valid_ts(v$791,v$810);
};
};
var valid_t$749 = fix$5090.$valid_t;
var valid_ts$748 = fix$5090.$valid_ts;
var valid_s$811 = function(v$4970,v$4971,v$4972,v$4973,v$4974){return function(v$818){var v$827 = v$818[0];
var v$828 = v$818[1];
var s$819 = compiler_objects$0LambdaExp$1$4.tyvars_Type$5964(null,v$828,null);
var fix$5091 = {};
fix$5091.$app = function(v$2701){lab$app: while (true) {if (v$2701 == null) {return 0;
} else {var v$2702 = v$2701;
var v$2703 = v$2702[0];
var v$2704 = v$2702[1];
if (tools$0NatSet$1.member$591(v$2703,s$819)) {0;
} else {var s$4771;
var t$5100 = ("valid_s.Type variable " + (compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(v$2703))) + " not in ";
var t$5099;
var st$4773;
var t$5092;
var v$4776 = [2,"."];
var t$5098;
var t$5097;
var t$5096;
var t$5093;
var v$4777 = [0,","];
t$5093 = [basis$0List$1.map$697((function(env$5095){return function(x$4778){var v$5094 = env$5095[0];
var v$4779 = v$5094(x$4778);
return [1,v$4779];
};
})([compiler_objects$0LambdaExp$1$4.pr_tyvar$1555]),v$827),v$4777,")",0,"("];
t$5096 = [0,t$5093];
t$5097 = [t$5096,[compiler_objects$0LambdaExp$1$4.layoutType$2964(v$828),null]];
t$5098 = t$5097;
t$5092 = [t$5098,v$4776,"",0,"\\/"];
st$4773 = [0,t$5092];
t$5099 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4773)));
s$4771 = (t$5100 + t$5099);
tools$0Crash$1.impossible$59("LambdaStatSem." + s$4771);
};
var t$5101 = v$2704;
var v$2701 = t$5101;
continue lab$app;
};
};
};
var app$2700 = fix$5091.$app;
app$2700(v$827);
return valid_t$749([v$4970,v$4971,tools$0NatSet$1.addList$615(v$827,v$4972),v$4973,v$4974],v$828);
};
};
var eqType$844 = function(s$847,v$851){var v$870 = v$851[0];
var v$871 = v$851[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$870,v$871)) {return 0;
} else {basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"--------------------------------\n");
var s$2718 = ("Error in lambda type checking (" + s$847) + "):\n";
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2718);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"The type\n");
var stringtree$2722 = compiler_objects$0LambdaExp$1$4.layoutType$2964(v$870);
tools$0PrettyPrint$1.outputTree$1072([function(s$2723){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2723);
},stringtree$2722,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"is not compatible with type\n");
var stringtree$2725 = compiler_objects$0LambdaExp$1$4.layoutType$2964(v$871);
tools$0PrettyPrint$1.outputTree$1072([function(s$2726){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2726);
},stringtree$2725,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"--------------------------------\n");
return tools$0Crash$1.impossible$59("LambdaStatSem.eqType");
};
};
var unit_Type$910 = [1,null];
var type_switch$999 = function(type_lexp$1002,get_tyname$1005,v$1008){var v$1098 = v$1008[1];
var v$1099 = v$1098[0];
var v$1100 = v$1098[1];
var v$1101 = v$1098[2];
var tyname$1016;
var v$1024 = type_lexp$1002(v$1099);
switch (v$1024[0]) { case 0: {var v$1026 = v$1024[1];
if (v$1026 == null) {tyname$1016 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind"));
} else {var v$1028 = v$1026;
var v$1029 = v$1028[0];
switch (v$1029[0]) { case 2: {tyname$1016 = ((v$1028[1] == null)?v$1029[1][1]:(tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind")));
 break; }default: {tyname$1016 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind"));
} };
};
 break; }default: {tyname$1016 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind"));
} };
var fix$5102 = {};
fix$5102.$check = function(v$1038,v$1041,v$1044){lab$check: while (true) {switch (v$1041[0]) { case 0: {switch (v$1044[0]) { case 1: {var v$1065 = v$1041[1];
var t$5103 = v$1038;
var t$5104 = [1];
var t$5105 = [0,type_lexp$1002(v$1065)];
var v$1038 = t$5103;
var v$1041 = t$5104;
var v$1044 = t$5105;
continue lab$check;
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.check. error");
} };
 break; }default: {if (v$1038 == null) {switch (v$1044[0]) { case 0: {return v$1044[1];
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.check. error");
} };
} else {var v$1089 = v$1038;
var v$1090 = v$1089[0];
var v$1091 = v$1090[0];
var v$1092 = v$1090[1];
var v$1093 = v$1089[1];
var tn$1071 = get_tyname$1005(v$1091);
var tl$1072 = type_lexp$1002(v$1092);
var t$5106;
var v$2797 = tn$1071[2];
var v$2798 = tyname$1016[2];
var v$2799 = v$2797[0][1];
var v$2800 = v$2798[0][1];
t$5106 = ((v$2799[0] == v$2800[0])?(v$2799[1] == v$2800[1]):false);
if (t$5106) {switch (v$1044[0]) { case 0: {var v$1083 = v$1044[1];
var t$5110 = v$1093;
var t$5109 = [1];
var t$5108;
var t$5107;
switch (tl$1072[0]) { case 0: {switch (v$1083[0]) { case 0: {var v$2804 = tl$1072[1];
var v$2805 = v$1083[1];
t$5107 = ((compiler_objects$0LambdaBasics$1.eq_Types$2576(v$2804,v$2805))?tl$1072:(tools$0Crash$1.impossible$59("LambdaStatSem.lub. Types vs. Types")));
 break; }default: {switch (v$1083[0]) { case 1: {t$5107 = tl$1072;
 break; }default: {t$5107 = (tools$0Crash$1.impossible$59("LambdaStatSem.lub. not defined for these args"));
} };
} };
 break; }case 1: {t$5107 = v$1083;
 break; }default: {switch (v$1083[0]) { case 1: {t$5107 = tl$1072;
 break; }default: {t$5107 = (tools$0Crash$1.impossible$59("LambdaStatSem.lub. not defined for these args"));
} };
} };
t$5108 = [0,t$5107];
var t$5111 = t$5110;
var t$5112 = t$5109;
var t$5113 = t$5108;
var v$1038 = t$5111;
var v$1041 = t$5112;
var v$1044 = t$5113;
continue lab$check;
 break; }default: {var t$5114 = v$1093;
var t$5115 = [1];
var t$5116 = [0,tl$1072];
var v$1038 = t$5114;
var v$1041 = t$5115;
var v$1044 = t$5116;
continue lab$check;
} };
} else {var save_flag$1084 = (tools$0Flags$1$6.lookup_flag_entry$5164("print_type_name_stamps"))[0];
((tools$0Flags$1$6.lookup_flag_entry$5164("print_type_name_stamps"))[0] = true,0);
var tn_s$1085 = special_objects$0TyName$1$1.pr_TyName$333(tn$1071[0],tn$1071[1],tn$1071[2],tn$1071[3],tn$1071[4],tn$1071[5]);
var tyname_s$1086 = special_objects$0TyName$1$1.pr_TyName$333(tyname$1016[0],tyname$1016[1],tyname$1016[2],tyname$1016[3],tyname$1016[4],tyname$1016[5]);
((tools$0Flags$1$6.lookup_flag_entry$5164("print_type_name_stamps"))[0] = save_flag$1084,0);
var s$2813 = ((("SWITCH.wrong tyname; the type names " + tn_s$1085) + " and ") + tyname_s$1086) + " disagree";
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$2813);
};
};
} };
};
};
var check$1035 = fix$5102.$check;
return check$1035(v$1100,v$1101,[1]);
};
var en$AbortExp$1102 = new String("AbortExp");
var exn$AbortExp$1102 = [en$AbortExp$1102];
var fix$5117 = {};
fix$5117.$type_prim = function(env$1107,prim$1110,lexps$1113){switch (prim$1110[0]) { case 13: {var v$1735 = prim$1110[1];
var v$1736 = v$1735[0];
var v$1737 = v$1735[1];
valid_ts$748(env$1107,v$1737);
if (lexps$1113 == null) {var t$5247;
var t$5246;
var v$3187 = env$1107[0];
var v$4379;
var v$3189 = compiler_objects$0Con$1$2.lookup$499(v$3187,v$1736);
switch (v$3189[0]) { case 0: {v$4379 = v$3189[1];
 break; }default: {var s$3190 = "lookup_con.Cannot find " + v$1736[1];
v$4379 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3190));
} };
var v$3181 = v$4379[0];
var v$3182 = v$4379[1];
var S$3184 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3185){return "mk_instance";
},[v$3181,v$1737]);
t$5246 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3184,v$3182));
t$5247 = [t$5246,null];
return t$5247;
} else {var v$1706 = lexps$1113;
if (v$1706[1] == null) {var v$1734 = v$1706[0];
var v$1717;
var v$3201 = env$1107[0];
var v$4385;
var v$3203 = compiler_objects$0Con$1$2.lookup$499(v$3201,v$1736);
switch (v$3203[0]) { case 0: {v$4385 = v$3203[1];
 break; }default: {var s$3204 = "lookup_con.Cannot find " + v$1736[1];
v$4385 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3204));
} };
var v$3195 = v$4385[0];
var v$3196 = v$4385[1];
var S$3198 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3199){return "mk_instance";
},[v$3195,v$1737]);
v$1717 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3198,v$3196));
switch (v$1717[0]) { case 3: {var v$1719 = v$1717[1];
var v$1720 = v$1719[0];
if (v$1720 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} else {var v$1722 = v$1720;
if (v$1722[1] == null) {var v$1724 = v$1719[1];
if (v$1724 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} else {var v$1726 = v$1724;
if (v$1726[1] == null) {var v$1731 = v$1722[0];
var v$1732 = v$1726[0];
var ts$1728;
var v$3210 = fix$5117.$type_lexp(env$1107,v$1734);
switch (v$3210[0]) { case 0: {ts$1728 = v$3210[1];
 break; }default: {ts$1728 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.CONprim"));
} };
var fix$5248 = {};
fix$5248.$eqTypes = function(v$4926,v$4975){lab$eqTypes: while (true) {if (v$4926 == null) {if (v$4975 == null) {return 0;
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.eqTypes");
};
} else {if (v$4975 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.eqTypes");
} else {var v$4928 = v$4926;
var v$4929 = v$4928[0];
var v$4930 = v$4928[1];
var v$4931 = v$4975;
var v$4932 = v$4931[0];
var v$4933 = v$4931[1];
eqType$844("CONprim: ",[v$4929,v$4932]);
var t$5249 = v$4930;
var t$5250 = v$4933;
var v$4926 = t$5249;
var v$4975 = t$5250;
continue lab$eqTypes;
};
};
};
};
var eqTypes$4924 = fix$5248.$eqTypes;
eqTypes$4924([v$1731,null],ts$1728);
return [v$1732,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Wrong number of args");
};
};
 break; }case 12: {var v$1693 = prim$1110[1];
var v$1694 = v$1693[0];
var v$1695 = v$1693[1];
valid_ts$748(env$1107,v$1695);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Wrong number of args");
} else {var v$1661 = lexps$1113;
if (v$1661[1] == null) {var v$1691 = v$1661[0];
var v$1672;
var v$3244 = env$1107[0];
var v$4409;
var v$3246 = compiler_objects$0Con$1$2.lookup$499(v$3244,v$1694);
switch (v$3246[0]) { case 0: {v$4409 = v$3246[1];
 break; }default: {var s$3247 = "lookup_con.Cannot find " + v$1694[1];
v$4409 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3247));
} };
var v$3238 = v$4409[0];
var v$3239 = v$4409[1];
var S$3241 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3242){return "mk_instance";
},[v$3238,v$1695]);
v$1672 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3241,v$3239));
switch (v$1672[0]) { case 3: {var v$1674 = v$1672[1];
var v$1675 = v$1674[0];
if (v$1675 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} else {var v$1677 = v$1675;
if (v$1677[1] == null) {var v$1679 = v$1674[1];
if (v$1679 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} else {var v$1681 = v$1679;
if (v$1681[1] == null) {var v$1688 = v$1677[0];
var v$1689 = v$1681[0];
var ts$1683;
var v$3253 = fix$5117.$type_lexp(env$1107,v$1691);
switch (v$3253[0]) { case 0: {ts$1683 = v$3253[1];
 break; }default: {ts$1683 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.DECONprim0"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576([v$1689,null],ts$1683)) {return [v$1688,null];
} else {var s$3260;
var t$5245;
var t$5244;
var t$5243 = ("DECONprim: " + v$1694[1]) + "; ts = ";
var t$5242;
var st$4853;
var t$5241;
var v$4855 = [0,","];
t$5241 = [basis$0List$1.map$697(function(v$5047){return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$5047);
},ts$1683),v$4855,"]",0,"["];
st$4853 = [0,t$5241];
t$5242 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4853)));
t$5244 = (t$5243 + t$5242);
t$5245 = (t$5244 + "; t2 = ");
var t$5240;
var st$4857 = compiler_objects$0LambdaExp$1$4.layoutType$2964(v$1689);
t$5240 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4857)));
s$3260 = (t$5245 + t$5240);
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$3260);
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Wrong number of args");
};
};
 break; }case 7: {var v$1650 = prim$1110[1];
if (lexps$1113 == null) {var t$5239;
var v$3290 = env$1107[1];
var v$3292 = compiler_objects$0Excon$1$2.lookup$471(v$3290,v$1650);
switch (v$3292[0]) { case 0: {t$5239 = v$3292[1];
 break; }default: {var s$3293 = "lookup_excon.Cannot find " + v$1650[1];
t$5239 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3293));
} };
switch (t$5239[0]) { case 1: {return [[2,[null,special_objects$0TyName$1$1.tyName_EXN$300]],null];
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim.Unary excon not fully applied");
} };
} else {var v$1634 = lexps$1113;
if (v$1634[1] == null) {var v$1649 = v$1634[0];
var v$1640;
var v$3299 = env$1107[1];
var v$3301 = compiler_objects$0Excon$1$2.lookup$471(v$3299,v$1650);
switch (v$3301[0]) { case 0: {v$1640 = v$3301[1];
 break; }default: {var s$3302 = "lookup_excon.Cannot find " + v$1650[1];
v$1640 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3302));
} };
switch (v$1640[0]) { case 0: {var v$1648 = v$1640[1];
var ts$1643;
var v$3306 = fix$5117.$type_lexp(env$1107,v$1649);
switch (v$3306[0]) { case 0: {ts$1643 = v$3306[1];
 break; }default: {ts$1643 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.EXCONprim: "));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576([v$1648,null],ts$1643)) {return [[2,[null,special_objects$0TyName$1$1.tyName_EXN$300]],null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim: ");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim.Nullary excon applied to arg.");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim.Wrong number of args");
};
};
 break; }case 11: {var v$1621 = prim$1110[1];
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim.Wrong number of args");
} else {var v$1604 = lexps$1113;
if (v$1604[1] == null) {var v$1619 = v$1604[0];
var v$1610;
var v$3322 = env$1107[1];
var v$3324 = compiler_objects$0Excon$1$2.lookup$471(v$3322,v$1621);
switch (v$3324[0]) { case 0: {v$1610 = v$3324[1];
 break; }default: {var s$3325 = "lookup_excon.Cannot find " + v$1621[1];
v$1610 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3325));
} };
switch (v$1610[0]) { case 0: {var v$1618 = v$1610[1];
var ts$1613;
var v$3329 = fix$5117.$type_lexp(env$1107,v$1619);
switch (v$3329[0]) { case 0: {ts$1613 = v$3329[1];
 break; }default: {ts$1613 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.DEEXCONprim: "));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1613,[[2,[null,special_objects$0TyName$1$1.tyName_EXN$300]],null])) {return [v$1618,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim: ");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim.Unary excon does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim.Wrong number of args");
};
};
 break; }case 4: {return [[1,basis$0List$1.map$697(function(x$3349){var v$4934 = fix$5117.$type_lexp(env$1107,x$3349);
switch (v$4934[0]) { case 0: {var v$4935 = v$4934[1];
if (v$4935 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.RECORDprim");
} else {var v$4936 = v$4935;
if (v$4936[1] == null) {return v$4936[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.RECORDprim");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.RECORDprim");
} };
},lexps$1113)],null];
 break; }case 1: {var v$1594 = prim$1110[1];
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Wrong number of args.");
} else {var v$1571 = lexps$1113;
if (v$1571[1] == null) {var v$1592 = v$1571[0];
var v$1580 = fix$5117.$type_lexp(env$1107,v$1592);
switch (v$1580[0]) { case 0: {var v$1582 = v$1580[1];
if (v$1582 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
} else {var v$1584 = v$1582;
var v$1585 = v$1584[0];
switch (v$1585[0]) { case 1: {if (v$1584[1] == null) {var v$1590 = v$1585[1];
try {var t$5238;
var t$5237;
var fix$5234 = {};
fix$5234.$h = function(v$3358,v$3359){lab$h: while (true) {if (v$3358 == null) {throw CompilerInitial.exn$Subscript$52;
} else {var v$3360 = v$3358;
var v$3361 = v$3360[0];
var v$3362 = v$3360[1];
if (v$3359 == 0) {return v$3361;
} else {var t$5235 = v$3362;
var t$5236 = SmlPrims.chk_ovf_i32(v$3359 - 1);
var v$3358 = t$5235;
var v$3359 = t$5236;
continue lab$h;
};
};
};
};
var h$3357 = fix$5234.$h;
if (v$1594 < 0) {throw CompilerInitial.exn$Subscript$52;
} else {t$5237 = (h$3357(v$1590,v$1594));
};
t$5238 = [t$5237,null];
return t$5238;
} catch(v$5233) {return (function(v$1589){return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Index out of range");
})(v$5233);
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Wrong number of args.");
};
};
 break; }case 0: {return basis$0List$1.map$697(function(x$3386){var v$4940 = fix$5117.$type_lexp(env$1107,x$3386);
switch (v$4940[0]) { case 0: {var v$4941 = v$4940[1];
if (v$4941 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.UB_RECORDprim");
} else {var v$4942 = v$4941;
if (v$4942[1] == null) {return v$4942[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.UB_RECORDprim");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.UB_RECORDprim");
} };
},lexps$1113);
 break; }case 10: {var v$1561 = prim$1110[1];
var v$1562 = v$1561[0];
valid_t$749(env$1107,v$1562);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong number of args");
} else {var v$1534 = lexps$1113;
if (v$1534[1] == null) {var v$1559 = v$1534[0];
switch (v$1562[0]) { case 2: {var v$1545 = v$1562[1];
var v$1546 = v$1545[0];
if (v$1546 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong instance");
} else {var v$1548 = v$1546;
if (v$1548[1] == null) {var v$1556 = v$1548[0];
var ts$1551;
var v$3392 = fix$5117.$type_lexp(env$1107,v$1559);
switch (v$3392[0]) { case 0: {ts$1551 = v$3392[1];
 break; }default: {ts$1551 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.DEREFprim"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1551,[v$1562,null])) {return [v$1556,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong instance");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong instance");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong number of args");
};
};
 break; }case 3: {var v$1521 = prim$1110[1];
var v$1522 = v$1521[0];
var typescheme_REF$1477;
var tyvar$1478 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$3416 = [3,[[[0,tyvar$1478],null],[[2,[[[0,tyvar$1478],null],special_objects$0TyName$1$1.tyName_REF$280]],null]]];
typescheme_REF$1477 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$3416)),Type$3416];
valid_t$749(env$1107,v$1522);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.Wrong number of args");
} else {var v$1488 = lexps$1113;
if (v$1488[1] == null) {var v$1519 = v$1488[0];
var v$1499;
var v$4526 = [v$1522,null];
var v$3421 = typescheme_REF$1477[0];
var v$3422 = typescheme_REF$1477[1];
var S$3424 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3425){return "mk_instance";
},[v$3421,v$4526]);
v$1499 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3424,v$3422));
switch (v$1499[0]) { case 3: {var v$1501 = v$1499[1];
var v$1502 = v$1501[0];
if (v$1502 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} else {var v$1504 = v$1502;
if (v$1504[1] == null) {var v$1506 = v$1501[1];
if (v$1506 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} else {var v$1508 = v$1506;
if (v$1508[1] == null) {var v$1516 = v$1504[0];
var v$1517 = v$1508[0];
var ts$1511;
var v$3429 = fix$5117.$type_lexp(env$1107,v$1519);
switch (v$3429[0]) { case 0: {ts$1511 = v$3429[1];
 break; }default: {ts$1511 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.REFprim"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1511,[v$1516,null])) {return [v$1517,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.Wrong number of args");
};
};
 break; }case 16: {var v$1474 = prim$1110[1];
var v$1475 = v$1474[0];
valid_t$749(env$1107,v$1475);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong number of args");
} else {var v$1420 = lexps$1113;
var v$1421 = v$1420[1];
if (v$1421 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong number of args");
} else {var v$1423 = v$1421;
if (v$1423[1] == null) {var v$1471 = v$1420[0];
var v$1472 = v$1423[0];
switch (v$1475[0]) { case 1: {var v$1439 = v$1475[1];
if (v$1439 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1441 = v$1439;
var v$1442 = v$1441[0];
switch (v$1442[0]) { case 2: {var v$1444 = v$1442[1];
var v$1445 = v$1444[0];
if (v$1445 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1447 = v$1445;
if (v$1447[1] == null) {var v$1449 = v$1441[1];
if (v$1449 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1451 = v$1449;
if (v$1451[1] == null) {var v$1467 = v$1447[0];
var v$1468 = v$1444[1];
var v$1469 = v$1451[0];
var ts1$1453;
var v$3464 = fix$5117.$type_lexp(env$1107,v$1471);
switch (v$3464[0]) { case 0: {ts1$1453 = v$3464[1];
 break; }default: {ts1$1453 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.ASSIGNprim1"));
} };
var ts2$1454;
var v$3472 = fix$5117.$type_lexp(env$1107,v$1472);
switch (v$3472[0]) { case 0: {ts2$1454 = v$3472[1];
 break; }default: {ts2$1454 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.ASSIGNprim2"));
} };
if ((compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1467,v$1469))?((compiler_objects$0LambdaBasics$1.eq_Types$2576(ts1$1453,[[2,[[v$1467,null],v$1468]],null]))?(compiler_objects$0LambdaBasics$1.eq_Types$2576(ts2$1454,[v$1469,null])):false):false) {return [unit_Type$910,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim3");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong number of args");
};
};
};
 break; }case 9: {if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DROPprim -- one parameter expected");
} else {var v$1402 = lexps$1113;
if (v$1402[1] == null) {var v$1406 = v$1402[0];
fix$5117.$type_lexp(env$1107,v$1406);
return null;
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DROPprim -- one parameter expected");
};
};
 break; }case 8: {var v$1393 = prim$1110[1];
var v$1394 = v$1393[0];
valid_t$749(env$1107,v$1394);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong number of args");
} else {var v$1351 = lexps$1113;
var v$1352 = v$1351[1];
if (v$1352 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong number of args");
} else {var v$1354 = v$1352;
if (v$1354[1] == null) {var v$1390 = v$1351[0];
var v$1391 = v$1354[0];
switch (v$1394[0]) { case 1: {var v$1366 = v$1394[1];
if (v$1366 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
} else {var v$1368 = v$1366;
var v$1369 = v$1368[1];
if (v$1369 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
} else {var v$1371 = v$1369;
if (v$1371[1] == null) {var v$1387 = v$1368[0];
var v$1388 = v$1371[0];
var ts1$1373;
var v$3524 = fix$5117.$type_lexp(env$1107,v$1390);
switch (v$3524[0]) { case 0: {ts1$1373 = v$3524[1];
 break; }default: {ts1$1373 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.EQUALprim1"));
} };
var ts2$1374;
var v$3532 = fix$5117.$type_lexp(env$1107,v$1391);
switch (v$3532[0]) { case 0: {ts2$1374 = v$3532[1];
 break; }default: {ts2$1374 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.EQUALprim2"));
} };
if ((compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1387,v$1388))?((compiler_objects$0LambdaBasics$1.eq_Types$2576(ts1$1373,[v$1387,null]))?(compiler_objects$0LambdaBasics$1.eq_Types$2576(ts2$1374,[v$1388,null])):false):false) {return [[2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]],null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim3");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
};
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong number of args");
};
};
};
 break; }case 14: {var v$1334 = prim$1110[1];
var v$1335 = v$1334[2];
var v$1336 = v$1334[1];
var v$1337 = v$1334[3];
var v$1338 = v$1334[0];
valid_ts$748(env$1107,v$1336);
(valid_s$811(env$1107[0],env$1107[1],env$1107[2],env$1107[3],env$1107[4]))([v$1337,v$1338]);
var v$1235;
var S$3567 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3568){return "mk_instance";
},[v$1337,v$1336]);
v$1235 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3567,v$1338));
switch (v$1235[0]) { case 3: {var v$1331 = v$1235[1];
var v$1332 = v$1331[0];
var v$1333 = v$1331[1];
var ts$1237 = basis$0List$1.map$697(function(x$3572){var v$4946 = fix$5117.$type_lexp(env$1107,x$3572);
switch (v$4946[0]) { case 0: {var v$4947 = v$4946[1];
if (v$4947 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.CCALL");
} else {var v$4948 = v$4947;
if (v$4948[1] == null) {return v$4948[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.CCALL");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.CCALL");
} };
},lexps$1113);
var ts_res$1238;
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1237,v$1332)) {ts_res$1238 = v$1333;
} else {var s$3573 = ("c function " + v$1335) + " expected types:\n";
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3573);
var stringtree$3576;
var t$5221;
var v$3583 = [0,","];
t$5221 = [basis$0List$1.map$697(function(v$5048){return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$5048);
},v$1332),v$3583,"]",0,"["];
stringtree$3576 = [0,t$5221];
tools$0PrettyPrint$1.outputTree$1072([function(s$3577){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3577);
},stringtree$3576,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"but found types:\n");
var stringtree$3585;
var t$5222;
var v$3592 = [0,","];
t$5222 = [basis$0List$1.map$697(function(v$5049){return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$5049);
},ts$1237),v$3592,"]",0,"["];
stringtree$3585 = [0,t$5222];
tools$0PrettyPrint$1.outputTree$1072([function(s$3586){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3586);
},stringtree$3585,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
ts_res$1238 = (tools$0Crash$1.impossible$59("LambdaStatSem.c function call"));
};
var unboxed_types$1251 = basis$0List$1.s$n$686([compiler_objects$0LambdaExp$1$4.boolType$1684,[compiler_objects$0LambdaExp$1$4.unitType$1691,[compiler_objects$0LambdaExp$1$4.int31Type$1669,[compiler_objects$0LambdaExp$1$4.word31Type$1677,[compiler_objects$0LambdaExp$1$4.int63Type$1671,[compiler_objects$0LambdaExp$1$4.word63Type$1679,[compiler_objects$0LambdaExp$1$4.intDefaultType$1674(0),[compiler_objects$0LambdaExp$1$4.wordDefaultType$1681(0),[compiler_objects$0LambdaExp$1$4.foreignptrType$1685,null]]]]]]]]],(tag_values$64(0))?null:[compiler_objects$0LambdaExp$1$4.int32Type$1670,[compiler_objects$0LambdaExp$1$4.word32Type$1678,null]]);
if ((v$1335 == "id")?true:(v$1335 == "ord")) {if (v$1332 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
} else {var v$1278 = v$1332;
if (v$1278[1] == null) {if (ts_res$1238 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
} else {var v$1282 = ts_res$1238;
if (v$1282[1] == null) {var v$1292 = v$1278[0];
var v$1293 = v$1282[0];
var t$5228;
var t$5227;
var fix$5225 = {};
fix$5225.$exists = function(v$3616){lab$exists: while (true) {if (v$3616 == null) {return false;
} else {var v$3617 = v$3616;
var v$3618 = v$3617[0];
var v$3619 = v$3617[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1292,v$3618)) {return true;
} else {var t$5226 = v$3619;
var v$3616 = t$5226;
continue lab$exists;
};
};
};
};
var exists$3615 = fix$5225.$exists;
t$5227 = (exists$3615(unboxed_types$1251));
if (t$5227) {var fix$5223 = {};
fix$5223.$exists = function(v$3623){lab$exists: while (true) {if (v$3623 == null) {return false;
} else {var v$3624 = v$3623;
var v$3625 = v$3624[0];
var v$3626 = v$3624[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1293,v$3625)) {return true;
} else {var t$5224 = v$3626;
var v$3623 = t$5224;
continue lab$exists;
};
};
};
};
var exists$3622 = fix$5223.$exists;
t$5228 = (exists$3622(unboxed_types$1251));
} else {t$5228 = false;
};
t$5228?0:(tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' is used to cast to or from a boxed type;  it is region-unsafe to   use `id' this way! Rewrite your program!!"));
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
};
};
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
};
};
} else {if (v$1335 == "pointer") {if (v$1332 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer' does not have a valid type");
} else {var v$1310 = v$1332;
if (v$1310[1] == null) {if (ts_res$1238 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer' does not have a valid type");
} else {var v$1314 = ts_res$1238;
if (v$1314[1] == null) {var v$1324 = v$1310[0];
var v$1325 = v$1314[0];
var t$5232;
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1325,compiler_objects$0LambdaExp$1$4.foreignptrType$1685)) {var t$5231;
var fix$5229 = {};
fix$5229.$exists = function(v$3651){lab$exists: while (true) {if (v$3651 == null) {return false;
} else {var v$3652 = v$3651;
var v$3653 = v$3652[0];
var v$3654 = v$3652[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1324,v$3653)) {return true;
} else {var t$5230 = v$3654;
var v$3651 = t$5230;
continue lab$exists;
};
};
};
};
var exists$3650 = fix$5229.$exists;
t$5231 = (exists$3650(unboxed_types$1251));
t$5232 = (t$5231?false:true);
} else {t$5232 = false;
};
t$5232?0:(tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer': 'a -> foreignptr is used to cast a boxed object to a pointer;  it is a very region-unsafe operation; the programmer needs to  keep the boxed object live until it can be argued that the  object pointed to is no longer accessed.!!"));
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer' does not have a valid type");
};
};
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer' does not have a valid type");
};
};
} else {0;
};
};
return ts_res$1238;
 break; }default: {var s$3670 = ("c function " + v$1335) + " does not have arrow type";
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$3670);
} };
 break; }case 15: {var ts$1215 = basis$0List$1.map$697(function(x$3677){var v$4952 = fix$5117.$type_lexp(env$1107,x$3677);
switch (v$4952[0]) { case 0: {var v$4953 = v$4952[1];
if (v$4953 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.BLOCKF64");
} else {var v$4954 = v$4953;
if (v$4954[1] == null) {return v$4954[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.BLOCKF64");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.BLOCKF64");
} };
},lexps$1113);
var fix$5217 = {};
fix$5217.$app = function(v$3683){lab$app: while (true) {if (v$3683 == null) {return 0;
} else {var v$3684 = v$3683;
var v$3685 = v$3684[0];
var v$3686 = v$3684[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$3685,compiler_objects$0LambdaExp$1$4.f64Type$1688)) {0;
} else {var s$3691;
var t$5219 = "wrong blockf64 element type; got ";
var t$5218;
var st$4890 = compiler_objects$0LambdaExp$1$4.layoutType$2964(v$3685);
t$5218 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4890)));
s$3691 = (t$5219 + t$5218);
tools$0Crash$1.impossible$59("LambdaStatSem." + s$3691);
};
var t$5220 = v$3686;
var v$3683 = t$5220;
continue lab$app;
};
};
};
var app$3682 = fix$5217.$app;
app$3682(ts$1215);
return [compiler_objects$0LambdaExp$1$4.stringType$1689,null];
 break; }case 6: {var v$1211 = prim$1110[1];
var v$1212 = v$1211[2];
var v$1213 = v$1211[0];
var v$1214 = v$1211[1];
valid_t$749(env$1107,v$1213);
valid_t$749(env$1107,v$1214);
var arrowType$1197 = [3,[[v$1213,null],[v$1214,null]]];
var ts$1198 = basis$0List$1.map$697(function(x$3697){var v$4958 = fix$5117.$type_lexp(env$1107,x$3697);
switch (v$4958[0]) { case 0: {var v$4959 = v$4958[1];
if (v$4959 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.EXPORT");
} else {var v$4960 = v$4959;
if (v$4960[1] == null) {return v$4960[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.EXPORT");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.EXPORT");
} };
},lexps$1113);
if (compiler_objects$0LambdaBasics$1.eq_Types$2576([arrowType$1197,null],ts$1198)) {return [compiler_objects$0LambdaExp$1$4.unitType$1691,null];
} else {var s$3698 = ("Exported function " + v$1212) + " expected function of type:\n";
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3698);
var stringtree$3701 = compiler_objects$0LambdaExp$1$4.layoutType$2964(arrowType$1197);
tools$0PrettyPrint$1.outputTree$1072([function(s$3702){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3702);
},stringtree$3701,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"but found type:\n");
var stringtree$3704;
var t$5216;
var v$3711 = [0,","];
t$5216 = [basis$0List$1.map$697(function(v$5050){return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$5050);
},ts$1198),v$3711,"]",0,"["];
stringtree$3704 = [0,t$5216];
tools$0PrettyPrint$1.outputTree$1072([function(s$3705){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3705);
},stringtree$3704,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
return tools$0Crash$1.impossible$59("LambdaStatSem.Export of function");
};
 break; }case 2: {var v$1190 = prim$1110[1];
var v$1191 = v$1190[0];
valid_t$749(env$1107,v$1191);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.RESET_REGIONSprim.Wrong number of args");
} else {var v$1181 = lexps$1113;
if (v$1181[1] == null) {var v$1188 = v$1181[0];
var ts$1183;
var v$3717 = fix$5117.$type_lexp(env$1107,v$1188);
switch (v$3717[0]) { case 0: {ts$1183 = v$3717[1];
 break; }default: {ts$1183 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.RESET_REGIONSprim1"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1183,[v$1191,null])) {return [unit_Type$910,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.RESET_REGIONSprim2");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.RESET_REGIONSprim.Wrong number of args");
};
};
 break; }default: {var v$1757 = prim$1110[1];
var v$1758 = v$1757[0];
valid_t$749(env$1107,v$1758);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.FORCE_RESET_REGIONSprim.Wrong number of args");
} else {var v$1748 = lexps$1113;
if (v$1748[1] == null) {var v$1755 = v$1748[0];
var ts$1750;
var v$3735 = fix$5117.$type_lexp(env$1107,v$1755);
switch (v$3735[0]) { case 0: {ts$1750 = v$3735[1];
 break; }default: {ts$1750 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.FORCE_RESET_REGIONSprim"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1750,[v$1758,null])) {return [unit_Type$910,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.FORCE_RESET_REGIONSprim");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.FORCE_RESET_REGIONSprim.Wrong number of args");
};
};
} };
};
fix$5117.$type_lexp = function(env$1761,lexp$1764){try {switch (lexp$1764[0]) { case 1: {var v$2219 = lexp$1764[1];
var v$2220 = v$2219[1];
var v$2221 = v$2219[0];
valid_ts$748(env$1761,v$2221);
var t$5211;
var t$5210;
var t$5209;
var v$2827 = env$1761[3];
var v$4239;
var v$2829 = compiler_objects$0Lvars$1$2.lookup$653(v$2827,v$2220);
switch (v$2829[0]) { case 0: {v$4239 = v$2829[1];
 break; }default: {var s$2830 = "lookup_lvar.Cannot find " + (compiler_objects$0Lvars$1$1.pr_lvar$78(v$2220[0],v$2220[1],v$2220[2],v$2220[3],v$2220[4],v$2220[5]));
v$4239 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$2830));
} };
var v$2821 = v$4239[0];
var v$2822 = v$4239[1];
var S$2824 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$2825){return "mk_instance";
},[v$2821,v$2221]);
t$5209 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$2824,v$2822));
t$5210 = [t$5209,null];
t$5211 = t$5210;
return [0,t$5211];
 break; }case 13: {var v$2213 = lexp$1764[1];
var v$2215 = v$2213[1];
valid_t$749(env$1761,v$2215);
return [0,[v$2215,null]];
 break; }case 0: {var v$2207 = lexp$1764[1];
var v$2209 = v$2207[1];
valid_t$749(env$1761,v$2209);
return [0,[v$2209,null]];
 break; }case 7: {return [0,[[2,[null,special_objects$0TyName$1$1.tyName_STRING$264]],null]];
 break; }case 8: {return [0,[[2,[null,special_objects$0TyName$1$1.tyName_REAL$256]],null]];
 break; }case 18: {return [0,[[2,[null,special_objects$0TyName$1$1.tyName_F64$260]],null]];
 break; }case 16: {var v$2195 = lexp$1764[1];
var v$2196 = v$2195[1];
var v$2197 = v$2195[0];
var env$$2177;
var fix$5199 = {};
fix$5199.$foldl = function(v$2837,v$2838){lab$foldl: while (true) {if (v$2838 == null) {return v$2837;
} else {var v$2839 = v$2838;
var v$2840 = v$2839[0];
var v$2841 = v$2839[1];
var t$5200;
var v$4782 = v$2840[0];
var v$4783 = v$2840[1];
var v$4785 = [null,v$4783];
var v$4786 = v$2837[2];
var v$4787 = v$2837[0];
var v$4788 = v$2837[4];
var v$4789 = v$2837[3];
var t$5206 = v$4787;
var t$5205 = v$2837[1];
var t$5204;
var t$5203 = tools$0NatSet$1.union$664;
var t$5202 = v$4786;
var t$5201;
var v$4790 = v$4785[0];
var v$4791 = v$4785[1];
t$5201 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4791),tools$0NatSet$1.fromList$614(v$4790)));
t$5204 = (t$5203(t$5202,t$5201));
t$5200 = [t$5206,t$5205,t$5204,compiler_objects$0Lvars$1$2.add$675(v$4782,v$4785,v$4789),v$4788];
var t$5207 = t$5200;
var t$5208 = v$2841;
var v$2837 = t$5207;
var v$2838 = t$5208;
continue lab$foldl;
};
};
};
var foldl$2836 = fix$5199.$foldl;
env$$2177 = (foldl$2836(env$1761,v$2196));
var ts_body$2187;
var v$2854 = fix$5117.$type_lexp(env$$2177,v$2197);
switch (v$2854[0]) { case 0: {ts_body$2187 = v$2854[1];
 break; }default: {ts_body$2187 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.FN"));
} };
var ts_arg$2188 = basis$0List$1.map$697(function(v$2191){return v$2191[1];
},v$2196);
valid_ts$748(env$1761,ts_arg$2188);
return [0,[[3,[ts_arg$2188,ts_body$2187]],null]];
 break; }case 12: {var v$2105 = lexp$1764[1];
var v$2106 = v$2105[1];
if (v$2106 == null) {var v$2112 = v$2105[0];
var v$2113 = v$2105[2];
var ts$2107;
var v$2862 = fix$5117.$type_lexp(env$1761,v$2112);
switch (v$2862[0]) { case 0: {ts$2107 = v$2862[1];
 break; }default: {ts$2107 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.WILD"));
} };
((ts$2107 == null)?true:false)?0:(tools$0Crash$1.impossible$59("LambdaStatSem.LET.wild -- the binding must be surrounded by a drop expression"));
return fix$5117.$type_lexp(env$1761,v$2113);
} else {var v$2174 = v$2105[0];
var v$2175 = v$2105[2];
var env_scope$2114;
var fix$5181 = {};
fix$5181.$foldl = function(v$2876,v$2877){lab$foldl: while (true) {if (v$2877 == null) {return v$2876;
} else {var v$2878 = v$2877;
var v$2879 = v$2878[0];
var v$2880 = v$2878[1];
var t$5182;
var v$4794 = v$2879[0];
var v$4795 = v$2879[1];
var v$4796 = v$2879[2];
var v$4798 = [v$4795,v$4796];
var v$4799 = v$2876[2];
var v$4800 = v$2876[0];
var v$4801 = v$2876[4];
var v$4802 = v$2876[3];
var t$5188 = v$4800;
var t$5187 = v$2876[1];
var t$5186;
var t$5185 = tools$0NatSet$1.union$664;
var t$5184 = v$4799;
var t$5183;
var v$4803 = v$4798[0];
var v$4804 = v$4798[1];
t$5183 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4804),tools$0NatSet$1.fromList$614(v$4803)));
t$5186 = (t$5185(t$5184,t$5183));
t$5182 = [t$5188,t$5187,t$5186,compiler_objects$0Lvars$1$2.add$675(v$4794,v$4798,v$4802),v$4801];
var t$5189 = t$5182;
var t$5190 = v$2880;
var v$2876 = t$5189;
var v$2877 = t$5190;
continue lab$foldl;
};
};
};
var foldl$2875 = fix$5181.$foldl;
env_scope$2114 = (foldl$2875(env$1761,v$2106));
var tvs$2126;
var b$2893 = null;
var fix$5191 = {};
fix$5191.$foldl = function(v$2896,v$2897){lab$foldl: while (true) {if (v$2897 == null) {return v$2896;
} else {var v$2898 = v$2897;
var v$2899 = v$2898[0];
var v$2900 = v$2898[1];
var t$5192;
var v$4807 = v$2899[1];
t$5192 = (basis$0List$1.s$n$686(v$4807,v$2896));
var t$5193 = t$5192;
var t$5194 = v$2900;
var v$2896 = t$5193;
var v$2897 = t$5194;
continue lab$foldl;
};
};
};
var foldl$2895 = fix$5191.$foldl;
tvs$2126 = (foldl$2895(b$2893,v$2106));
var v$2904 = env$1761[2];
var v$2905 = env$1761[0];
var v$2906 = env$1761[4];
var v$2907 = env$1761[3];
var env_bind$2134 = [v$2905,env$1761[1],tools$0NatSet$1.addList$615(tvs$2126,v$2904),v$2907,v$2906];
var check_polymorphism$2135 = letrec_polymorphism_only$63[0]?(function(v$2143){if (v$2143 == null) {return 0;
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.LET.polymorphic let -- Polymorphism only allowed in FIX.");
};
}):(function(v$2145){return 0;
});
var ts_bind$2159;
var v$2917 = fix$5117.$type_lexp(env_bind$2134,v$2174);
switch (v$2917[0]) { case 0: {ts_bind$2159 = v$2917[1];
 break; }default: {ts_bind$2159 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.LET.bind"));
} };
try {var l$2925 = basis$0ListPair$1.zipEq$96(v$2106,ts_bind$2159);
var fix$5196 = {};
fix$5196.$app = function(v$2927){lab$app: while (true) {if (v$2927 == null) {return 0;
} else {var v$2928 = v$2927;
var v$2929 = v$2928[0];
var v$2930 = v$2928[1];
var v$4810 = v$2929[0];
var v$4811 = v$4810[1];
var v$4812 = v$4810[2];
var v$4813 = v$2929[1];
(valid_s$811(env$1761[0],env$1761[1],env$1761[2],env$1761[3],env$1761[4]))([v$4811,v$4812]);
eqType$844("LET",[v$4812,v$4813]);
check_polymorphism$2135(v$4811);
(tools$0NatSet$1.isEmpty$598(tools$0NatSet$1.intersect$657(tools$0NatSet$1.fromList$614(v$4811),env$1761[2])))?0:(tools$0Crash$1.impossible$59("LambdaStatSem.tyvars_not_in_env.TYVARS in Env!!"));
var t$5197 = v$2930;
var v$2927 = t$5197;
continue lab$app;
};
};
};
var app$2926 = fix$5196.$app;
app$2926(l$2925);
} catch(v$5195) {(function(ListPair$UnequalLengths$2173){var t$5198 = ListPair$UnequalLengths$2173;
if (t$5198[0] == basis$0ListPair$1.en$UnequalLengths$54) {return tools$0Crash$1.impossible$59("LambdaStatSem.LET.pattern and bind type differ in numbers of components");
} else {throw ListPair$UnequalLengths$2173;
};
})(v$5195);
};
return fix$5117.$type_lexp(env_scope$2114,v$2175);
};
 break; }case 11: {var v$2101 = lexp$1764[1];
var v$2103 = v$2101[1];
return fix$5117.$type_lexp(env$1761,v$2103);
 break; }case 17: {var v$2097 = lexp$1764[1];
var v$2098 = v$2097[0];
var v$2099 = v$2097[1];
var env$$2054;
var fix$5158 = {};
fix$5158.$foldl = function(v$2945,v$2946){lab$foldl: while (true) {if (v$2946 == null) {return v$2945;
} else {var v$2947 = v$2946;
var v$2948 = v$2947[0];
var v$2949 = v$2947[1];
var t$5159;
var v$4816 = v$2948[2];
var v$4817 = v$2948[4];
var v$4818 = v$2948[0];
(valid_s$811(v$2945[0],v$2945[1],v$2945[2],v$2945[3],v$2945[4]))([v$4817,v$4818]);
var v$4820 = [null,v$4818];
var v$4821 = v$2945[2];
var v$4822 = v$2945[0];
var v$4823 = v$2945[4];
var v$4824 = v$2945[3];
var v$4909 = v$2945[1];
var v$4910 = tools$0NatSet$1.addList$615(v$4817,v$4821);
var t$5165 = v$4822;
var t$5164 = v$4909;
var t$5163;
var t$5162 = tools$0NatSet$1.union$664;
var t$5161 = v$4910;
var t$5160;
var v$4830 = v$4820[0];
var v$4831 = v$4820[1];
t$5160 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4831),tools$0NatSet$1.fromList$614(v$4830)));
t$5163 = (t$5162(t$5161,t$5160));
t$5159 = [t$5165,t$5164,t$5163,compiler_objects$0Lvars$1$2.add$675(v$4816,v$4820,v$4824),v$4823];
var t$5166 = t$5159;
var t$5167 = v$2949;
var v$2945 = t$5166;
var v$2946 = t$5167;
continue lab$foldl;
};
};
};
var foldl$2944 = fix$5158.$foldl;
env$$2054 = (foldl$2944(env$1761,v$2098));
var type_pairs$2072 = basis$0List$1.map$697(function(v$2076){var v$2077 = v$2076[1];
var v$2078 = v$2076[0];
var t$5168;
var v$4833 = fix$5117.$type_lexp(env$$2054,v$2077);
switch (v$4833[0]) { case 0: {var v$4834 = v$4833[1];
if (v$4834 == null) {t$5168 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.FIX"));
} else {var v$4835 = v$4834;
t$5168 = ((v$4835[1] == null)?v$4835[0]:(tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.FIX")));
};
 break; }default: {t$5168 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.FIX"));
} };
return [t$5168,v$2078];
},v$2098);
var fix$5169 = {};
fix$5169.$app = function(v$2971){lab$app: while (true) {if (v$2971 == null) {return 0;
} else {var v$2972 = v$2971;
var v$2973 = v$2972[0];
var v$2974 = v$2972[1];
eqType$844("FIX",v$2973);
var t$5170 = v$2974;
var v$2971 = t$5170;
continue lab$app;
};
};
};
var app$2970 = fix$5169.$app;
app$2970(type_pairs$2072);
var env_scope$2079;
var fix$5171 = {};
fix$5171.$foldl = function(v$2979,v$2980){lab$foldl: while (true) {if (v$2980 == null) {return v$2979;
} else {var v$2981 = v$2980;
var v$2982 = v$2981[0];
var v$2983 = v$2981[1];
var t$5172;
var v$4841 = v$2982[2];
var v$4842 = v$2982[4];
var v$4843 = v$2982[0];
(tools$0NatSet$1.isEmpty$598(tools$0NatSet$1.intersect$657(tools$0NatSet$1.fromList$614(v$4842),v$2979[2])))?0:(tools$0Crash$1.impossible$59("LambdaStatSem.tyvars_not_in_env.TYVARS in Env!!"));
var v$4845 = [v$4842,v$4843];
var v$4846 = v$2979[2];
var v$4847 = v$2979[0];
var v$4848 = v$2979[4];
var v$4849 = v$2979[3];
var t$5178 = v$4847;
var t$5177 = v$2979[1];
var t$5176;
var t$5175 = tools$0NatSet$1.union$664;
var t$5174 = v$4846;
var t$5173;
var v$4850 = v$4845[0];
var v$4851 = v$4845[1];
t$5173 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4851),tools$0NatSet$1.fromList$614(v$4850)));
t$5176 = (t$5175(t$5174,t$5173));
t$5172 = [t$5178,t$5177,t$5176,compiler_objects$0Lvars$1$2.add$675(v$4841,v$4845,v$4849),v$4848];
var t$5179 = t$5172;
var t$5180 = v$2983;
var v$2979 = t$5179;
var v$2980 = t$5180;
continue lab$foldl;
};
};
};
var foldl$2978 = fix$5171.$foldl;
env_scope$2079 = (foldl$2978(env$1761,v$2098));
return fix$5117.$type_lexp(env_scope$2079,v$2099);
 break; }case 20: {var v$2050 = lexp$1764[1];
var v$2051 = v$2050[0];
var v$2052 = v$2050[1];
var v$2021 = fix$5117.$type_lexp(env$1761,v$2051);
switch (v$2021[0]) { case 0: {var v$2023 = v$2021[1];
if (v$2023 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
} else {var v$2025 = v$2023;
var v$2026 = v$2025[0];
switch (v$2026[0]) { case 3: {if (v$2025[1] == null) {var v$2046 = v$2026[1];
var v$2047 = v$2046[0];
var v$2048 = v$2046[1];
var ts$2029;
var v$3003 = fix$5117.$type_lexp(env$1761,v$2052);
switch (v$3003[0]) { case 0: {ts$2029 = v$3003[1];
 break; }default: {ts$2029 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.APP"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$2029,v$2047)) {return [0,v$2048];
} else {basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"types expected:\n");
var stringtree$3011;
var t$5156;
var v$3018 = [0,","];
t$5156 = [basis$0List$1.map$697(function(v$5045){return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$5045);
},v$2047),v$3018,"]",0,"["];
stringtree$3011 = [0,t$5156];
tools$0PrettyPrint$1.outputTree$1072([function(s$3012){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3012);
},stringtree$3011,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\ntypes:\n");
var stringtree$3020;
var t$5157;
var v$3027 = [0,","];
t$5157 = [basis$0List$1.map$697(function(v$5046){return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$5046);
},ts$2029),v$3027,"]",0,"["];
stringtree$3020 = [0,t$5157];
tools$0PrettyPrint$1.outputTree$1072([function(s$3021){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3021);
},stringtree$3020,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"application:\n");
var stringtree$3029 = compiler_objects$0LambdaExp$1$4.layoutLambdaExp$5066(lexp$1764);
tools$0PrettyPrint$1.outputTree$1072([function(s$3030){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3030);
},stringtree$3029,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
return tools$0Crash$1.impossible$59("LambdaStatSem.APP");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
} };
 break; }case 19: {var v$2008 = lexp$1764[1];
var v$2009 = v$2008[0];
var v$2010 = v$2008[1];
var v$2011 = v$2008[2];
switch (v$2010[0]) { case 0: {var v$2007 = v$2010[1];
valid_t$749(env$1761,v$2007);
 break; }default: {0;
} };
var t$5155 = fix$5117.$type_lexp;
var t$5154;
var v$3049 = env$1761[2];
var v$3050 = env$1761[0];
var v$3051 = env$1761[4];
var v$3052 = env$1761[3];
var v$3053 = env$1761[1];
var ftv$$3054;
switch (v$2010[0]) { case 0: {var v$3055 = v$2010[1];
ftv$$3054 = (tools$0NatSet$1.union$664(v$3049,ftv_Type$155(v$3055)));
 break; }default: {ftv$$3054 = v$3049;
} };
t$5154 = [v$3050,compiler_objects$0Excon$1$2.add$493(v$2009,v$2010,v$3053),ftv$$3054,v$3052,v$3051];
return t$5155(t$5154,v$2011);
 break; }case 9: {var v$1995 = lexp$1764[1];
var v$1996 = v$1995[0];
var v$1997 = v$1995[1];
var v$1983 = fix$5117.$type_lexp(env$1761,v$1996);
switch (v$1983[0]) { case 0: {var v$1985 = v$1983[1];
if (v$1985 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn");
} else {var v$1987 = v$1985;
var v$1988 = v$1987[0];
switch (v$1988[0]) { case 2: {var v$1990 = v$1988[1];
return (v$1990[0] == null)?((v$1987[1] == null)?v$1997:(tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn"))):(tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn"));
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn");
} };
 break; }case 14: {var v$1971 = lexp$1764[1];
var v$1972 = v$1971[0];
var v$1973 = v$1971[1];
var v$1946 = fix$5117.$type_lexp(env$1761,v$1973);
switch (v$1946[0]) { case 0: {var v$1948 = v$1946[1];
if (v$1948 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} else {var v$1950 = v$1948;
var v$1951 = v$1950[0];
switch (v$1951[0]) { case 3: {var v$1953 = v$1951[1];
var v$1954 = v$1953[0];
if (v$1954 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} else {var v$1956 = v$1954;
var v$1957 = v$1956[0];
switch (v$1957[0]) { case 2: {var v$1959 = v$1957[1];
if (v$1959[0] == null) {if (v$1956[1] == null) {if (v$1950[1] == null) {var v$1969 = v$1953[1];
var ts$1963;
var v$3076 = fix$5117.$type_lexp(env$1761,v$1972);
switch (v$3076[0]) { case 0: {ts$1963 = v$3076[1];
 break; }default: {ts$1963 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.HANDLE"));
} };
return (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1963,v$1969))?[0,v$1969]:(tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE"));
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} };
 break; }case 4: {var v$1930 = lexp$1764[1];
var v$1931 = v$1930[1];
var v$1932 = v$1930[0];
var tn$1917;
switch (v$1932) { case 31: {tn$1917 = special_objects$0TyName$1$1.tyName_INT31$216;
 break; }case 32: {tn$1917 = special_objects$0TyName$1$1.tyName_INT32$220;
 break; }case 63: {tn$1917 = special_objects$0TyName$1$1.tyName_INT63$224;
 break; }case 64: {tn$1917 = special_objects$0TyName$1$1.tyName_INT64$228;
 break; }default: {var s$3109 = "SWITCH_I.precision = " + (basis$0Int32$1.toString$458(v$1932));
tn$1917 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3109));
} };
return type_switch$999(function(v$4998){return fix$5117.$type_lexp(env$1761,v$4998);
},function(v$1929){return tn$1917;
},v$1931);
 break; }case 2: {var v$1913 = lexp$1764[1];
var v$1914 = v$1913[1];
var v$1915 = v$1913[0];
var tn$1900;
switch (v$1915) { case 31: {tn$1900 = special_objects$0TyName$1$1.tyName_WORD31$240;
 break; }case 32: {tn$1900 = special_objects$0TyName$1$1.tyName_WORD32$244;
 break; }case 63: {tn$1900 = special_objects$0TyName$1$1.tyName_WORD63$248;
 break; }case 64: {tn$1900 = special_objects$0TyName$1$1.tyName_WORD64$252;
 break; }default: {tn$1900 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_I"));
} };
return type_switch$999(function(v$5000){return fix$5117.$type_lexp(env$1761,v$5000);
},function(v$1912){return tn$1900;
},v$1914);
 break; }case 3: {var v$1898 = lexp$1764[1];
return type_switch$999(function(v$5002){return fix$5117.$type_lexp(env$1761,v$5002);
},function(s$1897){return special_objects$0TyName$1$1.tyName_STRING$264;
},v$1898);
 break; }case 6: {var v$1893 = lexp$1764[1];
return type_switch$999(function(v$5004){return fix$5117.$type_lexp(env$1761,v$5004);
},function(v$1865){var v$1892 = v$1865[0];
var v$3115 = env$1761[0];
var v$1876;
var v$3117 = compiler_objects$0Con$1$2.lookup$499(v$3115,v$1892);
switch (v$3117[0]) { case 0: {v$1876 = v$3117[1];
 break; }default: {var s$3118 = "lookup_con.Cannot find " + v$1892[1];
v$1876 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3118));
} };
var v$1877 = v$1876[1];
switch (v$1877[0]) { case 2: {return v$1877[1][1];
 break; }case 3: {var v$1879 = v$1877[1];
var v$1880 = v$1879[1];
if (v$1880 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
} else {var v$1882 = v$1880;
var v$1883 = v$1882[0];
switch (v$1883[0]) { case 2: {if (v$1882[1] == null) {return v$1883[1][1];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
} };
},v$1893);
 break; }case 5: {var v$1861 = lexp$1764[1];
return type_switch$999(function(v$5006){return fix$5117.$type_lexp(env$1761,v$5006);
},function(v$1857){var v$1860 = v$1857[0];
var v$3136 = env$1761[1];
var v$3138 = compiler_objects$0Excon$1$2.lookup$471(v$3136,v$1860);
switch (v$3138[0]) { case 0: {v$3138[1];
 break; }default: {var s$3139 = "lookup_excon.Cannot find " + v$1860[1];
tools$0Crash$1.impossible$59("LambdaStatSem." + s$3139);
} };
return special_objects$0TyName$1$1.tyName_EXN$300;
},v$1861);
 break; }case 10: {var v$1851 = lexp$1764[1];
var v$1852 = v$1851[0];
var v$1853 = v$1851[1];
return [0,fix$5117.$type_prim(env$1761,v$1852,v$1853)];
 break; }default: {var v$2252 = lexp$1764[1];
var v$2253 = v$2252[1];
var v$2254 = v$2252[0];
var t$5212;
var v$2250 = basis$0List$1.map$697(function(p$3156){var v$3157 = p$3156[1];
var v$3160 = env$1761[3];
var v$3159;
var v$3162 = compiler_objects$0Lvars$1$2.lookup$653(v$3160,v$3157);
switch (v$3162[0]) { case 0: {v$3159 = v$3162[1];
 break; }default: {var s$3163 = "lookup_lvar.Cannot find " + (compiler_objects$0Lvars$1$1.pr_lvar$78(v$3157[0],v$3157[1],v$3157[2],v$3157[3],v$3157[4],v$3157[5]));
v$3159 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3163));
} };
return [v$3159[1],v$3157,v$3159[0]];
},v$2253);
t$5212 = [basis$0List$1.map$697(function(v$3166){var v$3167 = v$3166[0];
var t$5214 = v$3167;
var t$5213;
var v$3169 = env$1761[1];
var v$3171 = compiler_objects$0Excon$1$2.lookup$471(v$3169,v$3167);
switch (v$3171[0]) { case 0: {t$5213 = v$3171[1];
 break; }default: {var s$3172 = "lookup_excon.Cannot find " + v$3167[1];
t$5213 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3172));
} };
return [t$5214,t$5213];
},v$2254),v$2250];
return [2,t$5212];
} };
} catch(v$5153) {return (function(v$2259){var t$5215 = v$2259;
if (t$5215[0] == en$AbortExp$1102) {throw exn$AbortExp$1102;
} else {var stringtree$3175 = compiler_objects$0LambdaExp$1$4.layoutLambdaExp$5066(lexp$1764);
tools$0PrettyPrint$1.outputTree$1072([function(s$3176){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3176);
},stringtree$3175,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
var stringtree$3177 = compiler0$0LambdaStatSem$1.layout_env$590(env$1761[0],env$1761[1],env$1761[2],env$1761[3],env$1761[4]);
tools$0PrettyPrint$1.outputTree$1072([function(s$3178){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3178);
},stringtree$3177,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
throw exn$AbortExp$1102;
};
})(v$5153);
};
};
var type_prim$1104 = fix$5117.$type_prim;
var type_lexp$1103 = fix$5117.$type_lexp;
compiler0$0LambdaStatSem$1.type_check$2350 = function(v$2368,v$4976,v$2369){var v$2370 = v$2369[1];
var v$2371 = v$2370[0];
var v$2372 = v$2370[1];
(letrec_polymorphism_only$63[0] = v$4976,0);
var env$$2360;
var v$3905 = v$2371[1];
var concat$3906;
var b$3908 = null;
concat$3906 = (function(c$3909){var fix$5118 = {};
fix$5118.$foldl = function(v$3911,v$3912){lab$foldl: while (true) {if (v$3912 == null) {return v$3911;
} else {var v$3913 = v$3912;
var v$3914 = v$3913[0];
var v$3915 = v$3913[1];
var t$5119 = basis$0List$1.s$n$686(v$3914,v$3911);
var t$5120 = v$3915;
var v$3911 = t$5119;
var v$3912 = t$5120;
continue lab$foldl;
};
};
};
var foldl$3910 = fix$5118.$foldl;
return foldl$3910(b$3908,c$3909);
});
var c$3959 = concat$3906(v$3905);
var fix$5121 = {};
fix$5121.$foldl = function(v$3961,v$3962){lab$foldl: while (true) {if (v$3962 == null) {return v$3961;
} else {var v$3963 = v$3962;
var v$3964 = v$3963[0];
var v$3965 = v$3963[1];
var t$5135;
var t$5134 = compiler0$0LambdaStatSem$1.plus$262;
var t$5133 = v$3961;
var t$5122;
var v$3969 = v$3964[0];
var v$3970 = v$3964[1];
var v$3971 = v$3964[2];
var env$3972;
var fix$5123 = {};
fix$5123.$foldl = function(v$3974,v$3975){lab$foldl: while (true) {if (v$3975 == null) {return v$3974;
} else {var v$3976 = v$3975;
var v$3977 = v$3976[0];
var v$3978 = v$3976[1];
var t$5124;
var v$3981 = v$3977[0];
var v$3982 = v$3977[1];
var v$4706;
switch (v$3982[0]) { case 0: {v$4706 = [v$3969,[3,[[v$3982[1],null],[[2,[basis$0List$1.map$697((function(env$5125){return function(v$3985){return [0,v$3985];
};
})([]),v$3969),v$3970]],null]]]];
 break; }default: {v$4706 = [v$3969,[2,[basis$0List$1.map$697((function(env$5126){return function(v$3986){return [0,v$3986];
};
})([]),v$3969),v$3970]]];
} };
var v$3990 = v$3974[2];
var v$3991 = v$3974[0];
var v$3992 = v$3974[4];
var v$3993 = v$3974[3];
var v$3994 = v$3974[1];
var v$3995;
var t$5129 = tools$0NatSet$1.union$664;
var t$5128 = v$3990;
var t$5127;
var v$3996 = v$4706[0];
var v$3997 = v$4706[1];
t$5127 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$3997),tools$0NatSet$1.fromList$614(v$3996)));
v$3995 = (t$5129(t$5128,t$5127));
t$5124 = [compiler_objects$0Con$1$2.add$521(v$3981,v$4706,v$3991),v$3994,v$3995,v$3993,v$3992];
var t$5130 = t$5124;
var t$5131 = v$3978;
var v$3974 = t$5130;
var v$3975 = t$5131;
continue lab$foldl;
};
};
};
var foldl$3973 = fix$5123.$foldl;
env$3972 = (foldl$3973(compiler0$0LambdaStatSem$1.empty$210,v$3971));
var v$4709 = basis$0List$1.map$697((function(env$5132){return function(v$3999){return v$3999[0];
};
})([]),v$3971);
var v$4003 = env$3972[2];
var v$4004 = env$3972[0];
var v$4005 = env$3972[4];
t$5122 = [v$4004,env$3972[1],v$4003,env$3972[3],special_objects$0TyName$1$2.add$1390(v$3970,v$4709,v$4005)];
t$5135 = (t$5134(t$5133,t$5122));
var t$5136 = t$5135;
var t$5137 = v$3965;
var v$3961 = t$5136;
var v$3962 = t$5137;
continue lab$foldl;
};
};
};
var foldl$3960 = fix$5121.$foldl;
env$$2360 = (foldl$3960(compiler0$0LambdaStatSem$1.empty$210,c$3959));
var fr$2361;
try {fr$2361 = (type_lexp$1103(compiler0$0LambdaStatSem$1.plus$262(v$2368,env$$2360),v$2372));
} catch(v$5138) {fr$2361 = ((function(s$m$2364){var stringtree$4006 = compiler_objects$0LambdaExp$1$4.layoutLambdaExp$5066(v$2372);
tools$0PrettyPrint$1.outputTree$1072([function(s$4007){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$4007);
},stringtree$4006,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
throw s$m$2364;
})(v$5138));
};
var env$$$2367;
switch (fr$2361[0]) { case 2: {var v$4009 = fr$2361[1];
var v$4010 = v$4009[1];
var v$4011 = v$4009[0];
var env$$4012;
var fix$5139 = {};
fix$5139.$foldl = function(v$4033,v$4034){lab$foldl: while (true) {if (v$4034 == null) {return v$4033;
} else {var v$4035 = v$4034;
var v$4036 = v$4035[0];
var v$4037 = v$4035[1];
var t$5140;
var v$4067 = v$4036[1];
var v$4068 = v$4036[2];
var v$4069 = v$4036[0];
var v$4714 = [v$4068,v$4069];
var v$4075 = v$4033[2];
var v$4076 = v$4033[0];
var v$4077 = v$4033[4];
var v$4078 = v$4033[3];
var t$5146 = v$4076;
var t$5145 = v$4033[1];
var t$5144;
var t$5143 = tools$0NatSet$1.union$664;
var t$5142 = v$4075;
var t$5141;
var v$4079 = v$4714[0];
var v$4080 = v$4714[1];
t$5141 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4080),tools$0NatSet$1.fromList$614(v$4079)));
t$5144 = (t$5143(t$5142,t$5141));
t$5140 = [t$5146,t$5145,t$5144,compiler_objects$0Lvars$1$2.add$675(v$4067,v$4714,v$4078),v$4077];
var t$5147 = t$5140;
var t$5148 = v$4037;
var v$4033 = t$5147;
var v$4034 = t$5148;
continue lab$foldl;
};
};
};
var foldl$4032 = fix$5139.$foldl;
env$$4012 = (foldl$4032(compiler0$0LambdaStatSem$1.empty$210,v$4010));
var fix$5149 = {};
fix$5149.$foldl = function(v$4058,v$4059){lab$foldl: while (true) {if (v$4059 == null) {return v$4058;
} else {var v$4060 = v$4059;
var v$4061 = v$4060[0];
var v$4062 = v$4060[1];
var t$5150;
var v$4083 = v$4061[0];
var v$4084 = v$4061[1];
var v$4090 = v$4058[2];
var v$4091 = v$4058[0];
var v$4092 = v$4058[4];
var v$4093 = v$4058[3];
var v$4094 = v$4058[1];
var ftv$$4095;
switch (v$4084[0]) { case 0: {var v$4096 = v$4084[1];
ftv$$4095 = (tools$0NatSet$1.union$664(v$4090,ftv_Type$155(v$4096)));
 break; }default: {ftv$$4095 = v$4090;
} };
t$5150 = [v$4091,compiler_objects$0Excon$1$2.add$493(v$4083,v$4084,v$4094),ftv$$4095,v$4093,v$4092];
var t$5151 = t$5150;
var t$5152 = v$4062;
var v$4058 = t$5151;
var v$4059 = t$5152;
continue lab$foldl;
};
};
};
var foldl$4057 = fix$5149.$foldl;
env$$$2367 = (foldl$4057(env$$4012,v$4011));
 break; }default: {env$$$2367 = (tools$0Crash$1.impossible$59("LambdaStatSem.env_from_frame. No frame"));
} };
return compiler0$0LambdaStatSem$1.plus$262(env$$2360,env$$$2367);
};
return 0;
})();
