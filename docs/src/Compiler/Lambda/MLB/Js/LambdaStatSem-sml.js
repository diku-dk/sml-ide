if ((typeof(compiler0$0LambdaStatSem$1)) == "undefined") {compiler0$0LambdaStatSem$1 = {};
};
(function(){var letrec_polymorphism_only$63 = [false];
var tag_values$64 = tools$0Flags$1$6.is_on0$5161("tag_values");
var ftv_Type$155 = function(Type$158){var fix$4973 = {};
fix$4973.$f = function(v$180,v$4886){switch (v$180[0]) { case 0: {var v$191 = v$180[1];
return tools$0NatSet$1.insert$636(v$191,v$4886);
 break; }case 3: {var v$186 = v$180[1];
var v$187 = v$186[0];
var v$188 = v$186[1];
var b$2386;
var fix$4977 = {};
fix$4977.$foldl = function(v$2398,v$2399){lab$foldl: while (true) {if (v$2399 == null) {return v$2398;
} else {var v$2400 = v$2399;
var v$2401 = v$2400[0];
var v$2402 = v$2400[1];
var t$4978 = fix$4973.$f(v$2401,v$2398);
var t$4979 = v$2402;
var v$2398 = t$4978;
var v$2399 = t$4979;
continue lab$foldl;
};
};
};
var foldl$2397 = fix$4977.$foldl;
b$2386 = (foldl$2397(v$4886,v$187));
var fix$4980 = {};
fix$4980.$foldl = function(v$2389,v$2390){lab$foldl: while (true) {if (v$2390 == null) {return v$2389;
} else {var v$2391 = v$2390;
var v$2392 = v$2391[0];
var v$2393 = v$2391[1];
var t$4981 = fix$4973.$f(v$2392,v$2389);
var t$4982 = v$2393;
var v$2389 = t$4981;
var v$2390 = t$4982;
continue lab$foldl;
};
};
};
var foldl$2388 = fix$4980.$foldl;
return foldl$2388(b$2386,v$188);
 break; }case 2: {var v$182 = v$180[1];
var v$183 = v$182[0];
var fix$4974 = {};
fix$4974.$foldl = function(v$2407,v$2408){lab$foldl: while (true) {if (v$2408 == null) {return v$2407;
} else {var v$2409 = v$2408;
var v$2410 = v$2409[0];
var v$2411 = v$2409[1];
var t$4975 = fix$4973.$f(v$2410,v$2407);
var t$4976 = v$2411;
var v$2407 = t$4975;
var v$2408 = t$4976;
continue lab$foldl;
};
};
};
var foldl$2406 = fix$4974.$foldl;
return foldl$2406(v$4886,v$183);
 break; }default: {var v$193 = v$180[1];
var fix$4983 = {};
fix$4983.$foldl = function(v$2416,v$2417){lab$foldl: while (true) {if (v$2417 == null) {return v$2416;
} else {var v$2418 = v$2417;
var v$2419 = v$2418[0];
var v$2420 = v$2418[1];
var t$4984 = fix$4973.$f(v$2419,v$2416);
var t$4985 = v$2420;
var v$2416 = t$4984;
var v$2417 = t$4985;
continue lab$foldl;
};
};
};
var foldl$2415 = fix$4983.$foldl;
return foldl$2415(v$4886,v$193);
} };
};
var f$159 = fix$4973.$f;
return f$159(Type$158,null);
};
compiler0$0LambdaStatSem$1.empty$210 = [compiler_objects$0Con$1$2.empty$348(0),compiler_objects$0Excon$1$2.empty$320(0),null,compiler_objects$0Lvars$1$2.empty$491(0),special_objects$0TyName$1$2.empty$1217(0)];
var initial_con_env$216;
var typescheme_TRUE$217;
var Type$2421 = [2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]];
typescheme_TRUE$217 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2421)),Type$2421];
var typescheme_FALSE$218;
var Type$2422 = [2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]];
typescheme_FALSE$218 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2422)),Type$2422];
var typescheme_NIL$219;
var tyvar$220 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$2423 = [2,[[[0,tyvar$220],null],special_objects$0TyName$1$1.tyName_LIST$272]];
typescheme_NIL$219 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2423)),Type$2423];
var typescheme_CONS$221;
var tyvar$222 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$2424 = [3,[[[1,[[0,tyvar$222],[[2,[[[0,tyvar$222],null],special_objects$0TyName$1$1.tyName_LIST$272]],null]]],null],[[2,[[[0,tyvar$222],null],special_objects$0TyName$1$1.tyName_LIST$272]],null]]];
typescheme_CONS$221 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2424)),Type$2424];
var typescheme_QUOTE$223;
var tyvar$224 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$2425 = [3,[[[2,[null,special_objects$0TyName$1$1.tyName_STRING$264]],null],[[2,[[[0,tyvar$224],null],special_objects$0TyName$1$1.tyName_FRAG$276]],null]]];
typescheme_QUOTE$223 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2425)),Type$2425];
var typescheme_ANTIQUOTE$225;
var tyvar$226 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$2426 = [3,[[[0,tyvar$226],null],[[2,[[[0,tyvar$226],null],special_objects$0TyName$1$1.tyName_FRAG$276]],null]]];
typescheme_ANTIQUOTE$225 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2426)),Type$2426];
var typescheme_INTINF$227;
var Type$2427 = [3,[[[1,[[2,[[[2,[null,special_objects$0TyName$1$1.tyName_INT31$216]],null],special_objects$0TyName$1$1.tyName_LIST$272]],[[2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]],null]]],null],[[2,[null,special_objects$0TyName$1$1.tyName_INTINF$232]],null]]];
typescheme_INTINF$227 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2427)),Type$2427];
initial_con_env$216 = (compiler_objects$0Con$1$2.fromList$663([[compiler_objects$0Con$1$1.con_TRUE$127,typescheme_TRUE$217],[[compiler_objects$0Con$1$1.con_FALSE$128,typescheme_FALSE$218],[[compiler_objects$0Con$1$1.con_NIL$129,typescheme_NIL$219],[[compiler_objects$0Con$1$1.con_CONS$130,typescheme_CONS$221],[[compiler_objects$0Con$1$1.con_QUOTE$131,typescheme_QUOTE$223],[[compiler_objects$0Con$1$1.con_ANTIQUOTE$132,typescheme_ANTIQUOTE$225],[[compiler_objects$0Con$1$1.con_INTINF$133,typescheme_INTINF$227],null]]]]]]]));
var initial_tyname_env$228 = special_objects$0TyName$1$2.fromList$1532([[special_objects$0TyName$1$1.tyName_BOOL$212,[compiler_objects$0Con$1$1.con_TRUE$127,[compiler_objects$0Con$1$1.con_FALSE$128,null]]],[[special_objects$0TyName$1$1.tyName_INT31$216,null],[[special_objects$0TyName$1$1.tyName_INT32$220,null],[[special_objects$0TyName$1$1.tyName_INT63$224,null],[[special_objects$0TyName$1$1.tyName_INT64$228,null],[[special_objects$0TyName$1$1.tyName_INTINF$232,[compiler_objects$0Con$1$1.con_INTINF$133,null]],[[special_objects$0TyName$1$1.tyName_WORD8$236,null],[[special_objects$0TyName$1$1.tyName_WORD31$240,null],[[special_objects$0TyName$1$1.tyName_WORD32$244,null],[[special_objects$0TyName$1$1.tyName_WORD63$248,null],[[special_objects$0TyName$1$1.tyName_WORD64$252,null],[[special_objects$0TyName$1$1.tyName_REAL$256,null],[[special_objects$0TyName$1$1.tyName_F64$260,null],[[special_objects$0TyName$1$1.tyName_STRING$264,null],[[special_objects$0TyName$1$1.tyName_CHAR$268,null],[[special_objects$0TyName$1$1.tyName_LIST$272,[compiler_objects$0Con$1$1.con_NIL$129,[compiler_objects$0Con$1$1.con_CONS$130,null]]],[[special_objects$0TyName$1$1.tyName_FRAG$276,[compiler_objects$0Con$1$1.con_QUOTE$131,[compiler_objects$0Con$1$1.con_ANTIQUOTE$132,null]]],[[special_objects$0TyName$1$1.tyName_CHARARRAY$292,null],[[special_objects$0TyName$1$1.tyName_FOREIGNPTR$296,null],[[special_objects$0TyName$1$1.tyName_ARRAY$284,null],[[special_objects$0TyName$1$1.tyName_VECTOR$288,null],[[special_objects$0TyName$1$1.tyName_REF$280,null],[[special_objects$0TyName$1$1.tyName_EXN$300,null],null]]]]]]]]]]]]]]]]]]]]]]]);
var initial_excon_env$230 = compiler_objects$0Excon$1$2.fromList$635([[compiler_objects$0Excon$1$1.ex_DIV$117,[1]],[[compiler_objects$0Excon$1$1.ex_MATCH$118,[1]],[[compiler_objects$0Excon$1$1.ex_BIND$119,[1]],[[compiler_objects$0Excon$1$1.ex_OVERFLOW$120,[1]],[[compiler_objects$0Excon$1$1.ex_INTERRUPT$121,[1]],[[compiler_objects$0Excon$1$1.ex_SUBSCRIPT$122,[1]],[[compiler_objects$0Excon$1$1.ex_SIZE$123,[1]],null]]]]]]]);
var ftv_initial$231 = compiler_objects$0Con$1$2.fold$774(function(v$235){var v$236 = v$235[0];
var v$237 = v$235[1];
var t$4989 = tools$0NatSet$1.union$664;
var t$4988;
var v$2429 = v$236[0];
var v$2430 = v$236[1];
t$4988 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$2430),tools$0NatSet$1.fromList$614(v$2429)));
return t$4989(t$4988,v$237);
},compiler_objects$0Lvars$1$2.fold$917(function(v$241){var v$242 = v$241[0];
var v$243 = v$241[1];
var t$4987 = tools$0NatSet$1.union$664;
var t$4986;
var v$2432 = v$242[0];
var v$2433 = v$242[1];
t$4986 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$2433),tools$0NatSet$1.fromList$614(v$2432)));
return t$4987(t$4986,v$243);
},compiler_objects$0Excon$1$2.fold$746(function(v$250){var v$251 = v$250[0];
switch (v$251[0]) { case 0: {var v$253 = v$251[1];
var v$254 = v$250[1];
return tools$0NatSet$1.union$664(ftv_Type$155(v$253),v$254);
 break; }default: {return v$250[1];
} };
},null,initial_excon_env$230),compiler_objects$0Lvars$1$2.empty$491(0)),initial_con_env$216);
compiler0$0LambdaStatSem$1.initial$256 = [initial_con_env$216,initial_excon_env$230,ftv_initial$231,compiler_objects$0Lvars$1$2.empty$491(0),initial_tyname_env$228];
compiler0$0LambdaStatSem$1.plus$262 = function(v$280,v$4887){var v$281 = v$280[2];
var v$282 = v$280[0];
var v$283 = v$280[4];
var v$284 = v$280[3];
var v$285 = v$280[1];
var v$287 = v$4887[2];
var v$288 = v$4887[0];
var v$289 = v$4887[4];
var v$290 = v$4887[3];
var v$291 = v$4887[1];
var v$275 = tools$0NatSet$1.union$664(v$281,v$287);
var v$276 = compiler_objects$0Con$1$2.plus$549(v$282,v$288);
var v$277 = special_objects$0TyName$1$2.plus$1418(v$283,v$289);
var v$278 = compiler_objects$0Lvars$1$2.plus$692(v$284,v$290);
return [v$276,compiler_objects$0Excon$1$2.plus$521(v$285,v$291),v$275,v$278,v$277];
};
compiler0$0LambdaStatSem$1.layout_env$590 = function(v$602,v$605,v$4888,v$604,v$603){var t$4990;
var v$599 = [0,"; "];
t$4990 = [[(((compiler_objects$0Con$1$2.layoutMap$980(" -> ","}",", ","ConEnv: {"))(function(con$2560){return [1,con$2560[1]];
}))(function(v$2561){var v$2562 = v$2561[0];
var v$2563 = v$2561[1];
var t$4997;
var v$2564 = [2,"."];
var t$5001;
var t$5000;
var t$4999;
var t$4998;
var v$2571 = [0,","];
t$4998 = [basis$0List$1.map$697(function(x$4678){var v$4679 = compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(x$4678);
return [1,v$4679];
},v$2562),v$2571,")",0,"("];
t$4999 = [0,t$4998];
t$5000 = [t$4999,[compiler_objects$0LambdaExp$1$4.layoutType$2964(v$2563),null]];
t$5001 = t$5000;
t$4997 = [t$5001,v$2564,"",0,"\\/"];
return [0,t$4997];
}))(v$602),[(((special_objects$0TyName$1$2.layoutMap$1849(" -> ","}",", ","TyNameEnv: {"))(function(tyname$2573){return [1,special_objects$0TyName$1$1.pr_TyName$333(tyname$2573[0],tyname$2573[1],tyname$2573[2],tyname$2573[3],tyname$2573[4],tyname$2573[5])];
}))(function(cons$2574){var t$4996;
var v$2575 = [0,","];
t$4996 = [basis$0List$1.map$697(function(con$2576){return [1,con$2576[1]];
},cons$2574),v$2575,"]",0,"["];
return [0,t$4996];
}))(v$603),[(((compiler_objects$0Lvars$1$2.layoutMap$1123(" -> ","}",", ","LvarEnv: {"))(function(lvar$2578){return [1,compiler_objects$0Lvars$1$1.pr_lvar$78(lvar$2578[0],lvar$2578[1],lvar$2578[2],lvar$2578[3],lvar$2578[4],lvar$2578[5])];
}))(function(v$2579){var v$2580 = v$2579[0];
var v$2581 = v$2579[1];
var t$4991;
var v$2582 = [2,"."];
var t$4995;
var t$4994;
var t$4993;
var t$4992;
var v$2589 = [0,","];
t$4992 = [basis$0List$1.map$697(function(x$4682){var v$4683 = compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(x$4682);
return [1,v$4683];
},v$2580),v$2589,")",0,"("];
t$4993 = [0,t$4992];
t$4994 = [t$4993,[compiler_objects$0LambdaExp$1$4.layoutType$2964(v$2581),null]];
t$4995 = t$4994;
t$4991 = [t$4995,v$2582,"",0,"\\/"];
return [0,t$4991];
}))(v$604),[(((compiler_objects$0Excon$1$2.layoutMap$952(" -> ","}",", ","ExConEnv: {"))(function(excon$2591){return [1,excon$2591[1]];
}))(function(v$2592){switch (v$2592[0]) { case 0: {var v$2593 = v$2592[1];
return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$2593);
 break; }default: {return [1,"NONE"];
} };
}))(v$605),null]]]],v$599,"]",2,"LambdaStatEnv: ["];
return [0,t$4990];
};
compiler0$0LambdaStatSem$1.restrict$606 = function(v$696,v$4889){var v$697 = v$696[2];
var v$698 = v$696[0];
var v$699 = v$696[4];
var v$700 = v$696[3];
var v$701 = v$696[1];
var v$703 = v$4889[0];
var v$704 = v$4889[3];
var v$705 = v$4889[2];
var v$706 = v$4889[1];
if (tools$0NatSet$1.isEmpty$598(v$697)) {0;
} else {basis$0General$1.print$163("Restrict: Problem with set of free type variables\n");
basis$0General$1.print$163("not being empty. Here is the environment: \n");
tools$0PrettyPrint$1.outputTree$1072([function(v$4961){return basis$0General$1.print$163(v$4961);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
basis$0General$1.print$163("Non-empty set is:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$4962){return basis$0General$1.print$163(v$4962);
},((tools$0NatSet$1.layoutSet$740("}",",","{"))(function(x$2613){var v$4685 = compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(x$2613);
return [1,v$4685];
}))(v$697),tools$0Flags$1$1.colwidth$100[0]]);
tools$0Crash$1.impossible$59("LambdaStatSem.restrict.ftvset not empty");
};
var con_env1$647;
try {con_env1$647 = (compiler_objects$0Con$1$2.restrict$900(function(v$2616){return v$2616[1];
},v$698,v$703));
} catch(v$5002) {con_env1$647 = ((function(v$651){var t$5003 = v$651;
if (t$5003[0] == compiler_objects$0Con$1$2.en$Restrict$899) {var s$648 = v$651[1];
var s$2617 = "Problem with constructor environment; constructor " + s$648;
basis$0General$1.print$163(s$2617 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$4963){return basis$0General$1.print$163(v$4963);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$651;
};
})(v$5002));
};
var tyname_env1$658;
try {tyname_env1$658 = (special_objects$0TyName$1$2.restrict$1769(function(v$4890){return special_objects$0TyName$1$1.pr_TyName$333(v$4890[0],v$4890[1],v$4890[2],v$4890[3],v$4890[4],v$4890[5]);
},v$699,v$704));
} catch(v$5004) {tyname_env1$658 = ((function(v$662){var t$5005 = v$662;
if (t$5005[0] == special_objects$0TyName$1$2.en$Restrict$1768) {var s$659 = v$662[1];
var s$2625 = "Problem with tyname environment; tyname " + s$659;
basis$0General$1.print$163(s$2625 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$4964){return basis$0General$1.print$163(v$4964);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$662;
};
})(v$5004));
};
var lvar_env1$669;
try {lvar_env1$669 = (compiler_objects$0Lvars$1$2.restrict$1043(function(v$4891){return compiler_objects$0Lvars$1$1.pr_lvar$78(v$4891[0],v$4891[1],v$4891[2],v$4891[3],v$4891[4],v$4891[5]);
},v$700,v$705));
} catch(v$5006) {lvar_env1$669 = ((function(v$673){var t$5007 = v$673;
if (t$5007[0] == compiler_objects$0Lvars$1$2.en$Restrict$1042) {var s$670 = v$673[1];
var s$2633 = "Problem with lvar environment; lvar " + s$670;
basis$0General$1.print$163(s$2633 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$4965){return basis$0General$1.print$163(v$4965);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$673;
};
})(v$5006));
};
var t$5011 = con_env1$647;
var t$5009;
try {t$5009 = (compiler_objects$0Excon$1$2.restrict$872(function(v$2641){return v$2641[1];
},v$701,v$706));
} catch(v$5008) {t$5009 = ((function(v$684){var t$5010 = v$684;
if (t$5010[0] == compiler_objects$0Excon$1$2.en$Restrict$871) {var s$681 = v$684[1];
var s$2642 = "Problem with excon environment; excon " + s$681;
basis$0General$1.print$163(s$2642 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$4966){return basis$0General$1.print$163(v$4966);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$684;
};
})(v$5008));
};
return [t$5011,t$5009,v$697,lvar_env1$669,tyname_env1$658];
};
compiler0$0LambdaStatSem$1.enrich$707 = function(v$709){return true;
};
compiler0$0LambdaStatSem$1.pu$710;
var pu_f$743 = tools$0NatSet$1.pu$771(compiler_objects$0LambdaExp$1$4.pu_tyvar$5076);
var pu_ce$744 = compiler_objects$0Con$1$2.pu$1081(compiler_objects$0Con$1$1.pu$135,compiler_objects$0LambdaExp$1$4.pu_TypeScheme$5081);
var pu_te$745 = special_objects$0TyName$1$2.pu$1950(special_objects$0TyName$1$1.pu$426,pickle$0pickle$1.listGen$2109(compiler_objects$0Con$1$1.pu$135));
var pu_le$746 = compiler_objects$0Lvars$1$2.pu$1224(compiler_objects$0Lvars$1$3.pu$1981,compiler_objects$0LambdaExp$1$4.pu_TypeScheme$5081);
var pu_ee$747 = compiler_objects$0Excon$1$2.pu$1053(compiler_objects$0Excon$1$1.pu$125,pickle$0pickle$1.optionGen$2134(compiler_objects$0LambdaExp$1$4.pu_Type$5078));
compiler0$0LambdaStatSem$1.pu$710 = (pickle$0pickle$1.convert$2342([function(v$2650){var v$2651 = v$2650[0];
return [v$2651[1],v$2650[1],v$2651[0],v$2651[3],v$2651[2]];
},function(v$2652){return [[v$2652[2],v$2652[0],v$2652[4],v$2652[3]],v$2652[1]];
}],pickle$0pickle$1.pairGen0$983(pickle$0pickle$1.tup4Gen0$2377(pu_f$743,pu_ce$744,pu_te$745,pu_le$746),pu_ee$747)));
var fix$5012 = {};
fix$5012.$valid_t = function(e$752,ty$755){switch (ty$755[0]) { case 2: {var v$785 = ty$755[1];
var v$786 = v$785[0];
var v$787 = v$785[1];
var v$2654 = e$752[4];
var v$2656 = special_objects$0TyName$1$2.lookup$1368(v$2654,v$787);
switch (v$2656[0]) { case 0: {v$2656[1];
 break; }default: {var s$2657 = "lookup_tyname.Cannot find " + (special_objects$0TyName$1$1.pr_TyName$333(v$787[0],v$787[1],v$787[2],v$787[3],v$787[4],v$787[5]));
tools$0Crash$1.impossible$59("LambdaStatSem." + s$2657);
} };
return fix$5012.$valid_ts(e$752,v$786);
 break; }case 3: {var v$779 = ty$755[1];
var v$780 = v$779[0];
var v$781 = v$779[1];
fix$5012.$valid_ts(e$752,v$780);
return fix$5012.$valid_ts(e$752,v$781);
 break; }case 0: {var v$775 = ty$755[1];
if (tools$0NatSet$1.member$591(v$775,e$752[2])) {return 0;
} else {var s$2662 = "valid_t.non-bound type variable " + (compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(v$775));
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$2662);
};
 break; }default: {var v$788 = ty$755[1];
return fix$5012.$valid_ts(e$752,v$788);
} };
};
fix$5012.$valid_ts = function(v$791,v$794){if (v$794 == null) {return 0;
} else {var v$808 = v$794;
var v$809 = v$808[0];
var v$810 = v$808[1];
fix$5012.$valid_t(v$791,v$809);
return fix$5012.$valid_ts(v$791,v$810);
};
};
var valid_t$749 = fix$5012.$valid_t;
var valid_ts$748 = fix$5012.$valid_ts;
var valid_s$811 = function(v$4892,v$4893,v$4894,v$4895,v$4896){return function(v$818){var v$827 = v$818[0];
var v$828 = v$818[1];
var s$819 = compiler_objects$0LambdaExp$1$4.tyvars_Type$5964(null,v$828,null);
var fix$5013 = {};
fix$5013.$app = function(v$2668){lab$app: while (true) {if (v$2668 == null) {return 0;
} else {var v$2669 = v$2668;
var v$2670 = v$2669[0];
var v$2671 = v$2669[1];
if (tools$0NatSet$1.member$591(v$2670,s$819)) {0;
} else {var s$4696;
var t$5022 = ("valid_s.Type variable " + (compiler_objects$0LambdaExp$1$4.pr_tyvar$1555(v$2670))) + " not in ";
var t$5021;
var st$4698;
var t$5014;
var v$4701 = [2,"."];
var t$5020;
var t$5019;
var t$5018;
var t$5015;
var v$4702 = [0,","];
t$5015 = [basis$0List$1.map$697((function(env$5017){return function(x$4703){var v$5016 = env$5017[0];
var v$4704 = v$5016(x$4703);
return [1,v$4704];
};
})([compiler_objects$0LambdaExp$1$4.pr_tyvar$1555]),v$827),v$4702,")",0,"("];
t$5018 = [0,t$5015];
t$5019 = [t$5018,[compiler_objects$0LambdaExp$1$4.layoutType$2964(v$828),null]];
t$5020 = t$5019;
t$5014 = [t$5020,v$4701,"",0,"\\/"];
st$4698 = [0,t$5014];
t$5021 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4698)));
s$4696 = (t$5022 + t$5021);
tools$0Crash$1.impossible$59("LambdaStatSem." + s$4696);
};
var t$5023 = v$2671;
var v$2668 = t$5023;
continue lab$app;
};
};
};
var app$2667 = fix$5013.$app;
app$2667(v$827);
return valid_t$749([v$4892,v$4893,tools$0NatSet$1.addList$615(v$827,v$4894),v$4895,v$4896],v$828);
};
};
var eqType$844 = function(s$847,v$851){var v$870 = v$851[0];
var v$871 = v$851[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$870,v$871)) {return 0;
} else {basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"--------------------------------\n");
var s$2685 = ("Error in lambda type checking (" + s$847) + "):\n";
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2685);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"The type\n");
var stringtree$2689 = compiler_objects$0LambdaExp$1$4.layoutType$2964(v$870);
tools$0PrettyPrint$1.outputTree$1072([function(s$2690){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2690);
},stringtree$2689,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"is not compatible with type\n");
var stringtree$2692 = compiler_objects$0LambdaExp$1$4.layoutType$2964(v$871);
tools$0PrettyPrint$1.outputTree$1072([function(s$2693){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2693);
},stringtree$2692,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"--------------------------------\n");
return tools$0Crash$1.impossible$59("LambdaStatSem.eqType");
};
};
var unit_Type$910 = [1,null];
var type_switch$999 = function(type_lexp$1002,get_tyname$1005,v$1008){var v$1098 = v$1008[1];
var v$1099 = v$1098[0];
var v$1100 = v$1098[1];
var v$1101 = v$1098[2];
var tyname$1016;
var v$1024 = type_lexp$1002(v$1099);
switch (v$1024[0]) { case 0: {var v$1026 = v$1024[1];
if (v$1026 == null) {tyname$1016 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind"));
} else {var v$1028 = v$1026;
var v$1029 = v$1028[0];
switch (v$1029[0]) { case 2: {tyname$1016 = ((v$1028[1] == null)?v$1029[1][1]:(tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind")));
 break; }default: {tyname$1016 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind"));
} };
};
 break; }default: {tyname$1016 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind"));
} };
var fix$5024 = {};
fix$5024.$check = function(v$1038,v$1041,v$1044){lab$check: while (true) {switch (v$1041[0]) { case 0: {switch (v$1044[0]) { case 1: {var v$1065 = v$1041[1];
var t$5025 = v$1038;
var t$5026 = [1];
var t$5027 = [0,type_lexp$1002(v$1065)];
var v$1038 = t$5025;
var v$1041 = t$5026;
var v$1044 = t$5027;
continue lab$check;
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.check. error");
} };
 break; }default: {if (v$1038 == null) {switch (v$1044[0]) { case 0: {return v$1044[1];
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.check. error");
} };
} else {var v$1089 = v$1038;
var v$1090 = v$1089[0];
var v$1091 = v$1090[0];
var v$1092 = v$1090[1];
var v$1093 = v$1089[1];
var tn$1071 = get_tyname$1005(v$1091);
var tl$1072 = type_lexp$1002(v$1092);
var t$5028;
var v$2764 = tn$1071[2];
var v$2765 = tyname$1016[2];
var v$2766 = v$2764[0][1];
var v$2767 = v$2765[0][1];
t$5028 = ((v$2766[0] == v$2767[0])?(v$2766[1] == v$2767[1]):false);
if (t$5028) {switch (v$1044[0]) { case 0: {var v$1083 = v$1044[1];
var t$5032 = v$1093;
var t$5031 = [1];
var t$5030;
var t$5029;
switch (tl$1072[0]) { case 0: {switch (v$1083[0]) { case 0: {var v$2771 = tl$1072[1];
var v$2772 = v$1083[1];
t$5029 = ((compiler_objects$0LambdaBasics$1.eq_Types$2576(v$2771,v$2772))?tl$1072:(tools$0Crash$1.impossible$59("LambdaStatSem.lub. Types vs. Types")));
 break; }default: {switch (v$1083[0]) { case 1: {t$5029 = tl$1072;
 break; }default: {t$5029 = (tools$0Crash$1.impossible$59("LambdaStatSem.lub. not defined for these args"));
} };
} };
 break; }case 1: {t$5029 = v$1083;
 break; }default: {switch (v$1083[0]) { case 1: {t$5029 = tl$1072;
 break; }default: {t$5029 = (tools$0Crash$1.impossible$59("LambdaStatSem.lub. not defined for these args"));
} };
} };
t$5030 = [0,t$5029];
var t$5033 = t$5032;
var t$5034 = t$5031;
var t$5035 = t$5030;
var v$1038 = t$5033;
var v$1041 = t$5034;
var v$1044 = t$5035;
continue lab$check;
 break; }default: {var t$5036 = v$1093;
var t$5037 = [1];
var t$5038 = [0,tl$1072];
var v$1038 = t$5036;
var v$1041 = t$5037;
var v$1044 = t$5038;
continue lab$check;
} };
} else {var save_flag$1084 = (tools$0Flags$1$6.lookup_flag_entry$5164("print_type_name_stamps"))[0];
((tools$0Flags$1$6.lookup_flag_entry$5164("print_type_name_stamps"))[0] = true,0);
var tn_s$1085 = special_objects$0TyName$1$1.pr_TyName$333(tn$1071[0],tn$1071[1],tn$1071[2],tn$1071[3],tn$1071[4],tn$1071[5]);
var tyname_s$1086 = special_objects$0TyName$1$1.pr_TyName$333(tyname$1016[0],tyname$1016[1],tyname$1016[2],tyname$1016[3],tyname$1016[4],tyname$1016[5]);
((tools$0Flags$1$6.lookup_flag_entry$5164("print_type_name_stamps"))[0] = save_flag$1084,0);
var s$2780 = ((("SWITCH.wrong tyname; the type names " + tn_s$1085) + " and ") + tyname_s$1086) + " disagree";
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$2780);
};
};
} };
};
};
var check$1035 = fix$5024.$check;
return check$1035(v$1100,v$1101,[1]);
};
var en$AbortExp$1102 = new String("AbortExp");
var exn$AbortExp$1102 = [en$AbortExp$1102];
var fix$5039 = {};
fix$5039.$type_prim = function(env$1107,prim$1110,lexps$1113){switch (prim$1110[0]) { case 13: {var v$1703 = prim$1110[1];
var v$1704 = v$1703[0];
var v$1705 = v$1703[1];
valid_ts$748(env$1107,v$1705);
if (lexps$1113 == null) {var t$5165;
var t$5164;
var v$3154 = env$1107[0];
var v$4318;
var v$3156 = compiler_objects$0Con$1$2.lookup$499(v$3154,v$1704);
switch (v$3156[0]) { case 0: {v$4318 = v$3156[1];
 break; }default: {var s$3157 = "lookup_con.Cannot find " + v$1704[1];
v$4318 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3157));
} };
var v$3148 = v$4318[0];
var v$3149 = v$4318[1];
var S$3151 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3152){return "mk_instance";
},[v$3148,v$1705]);
t$5164 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3151,v$3149));
t$5165 = [t$5164,null];
return t$5165;
} else {var v$1674 = lexps$1113;
if (v$1674[1] == null) {var v$1702 = v$1674[0];
var v$1685;
var v$3168 = env$1107[0];
var v$4324;
var v$3170 = compiler_objects$0Con$1$2.lookup$499(v$3168,v$1704);
switch (v$3170[0]) { case 0: {v$4324 = v$3170[1];
 break; }default: {var s$3171 = "lookup_con.Cannot find " + v$1704[1];
v$4324 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3171));
} };
var v$3162 = v$4324[0];
var v$3163 = v$4324[1];
var S$3165 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3166){return "mk_instance";
},[v$3162,v$1705]);
v$1685 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3165,v$3163));
switch (v$1685[0]) { case 3: {var v$1687 = v$1685[1];
var v$1688 = v$1687[0];
if (v$1688 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} else {var v$1690 = v$1688;
if (v$1690[1] == null) {var v$1692 = v$1687[1];
if (v$1692 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} else {var v$1694 = v$1692;
if (v$1694[1] == null) {var v$1699 = v$1690[0];
var v$1700 = v$1694[0];
var ts$1696;
var v$3177 = fix$5039.$type_lexp(env$1107,v$1702);
switch (v$3177[0]) { case 0: {ts$1696 = v$3177[1];
 break; }default: {ts$1696 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.CONprim"));
} };
var fix$5166 = {};
fix$5166.$eqTypes = function(v$4848,v$4897){lab$eqTypes: while (true) {if (v$4848 == null) {if (v$4897 == null) {return 0;
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.eqTypes");
};
} else {if (v$4897 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.eqTypes");
} else {var v$4850 = v$4848;
var v$4851 = v$4850[0];
var v$4852 = v$4850[1];
var v$4853 = v$4897;
var v$4854 = v$4853[0];
var v$4855 = v$4853[1];
eqType$844("CONprim: ",[v$4851,v$4854]);
var t$5167 = v$4852;
var t$5168 = v$4855;
var v$4848 = t$5167;
var v$4897 = t$5168;
continue lab$eqTypes;
};
};
};
};
var eqTypes$4846 = fix$5166.$eqTypes;
eqTypes$4846([v$1699,null],ts$1696);
return [v$1700,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Wrong number of args");
};
};
 break; }case 12: {var v$1661 = prim$1110[1];
var v$1662 = v$1661[0];
var v$1663 = v$1661[1];
valid_ts$748(env$1107,v$1663);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Wrong number of args");
} else {var v$1629 = lexps$1113;
if (v$1629[1] == null) {var v$1659 = v$1629[0];
var v$1640;
var v$3211 = env$1107[0];
var v$4348;
var v$3213 = compiler_objects$0Con$1$2.lookup$499(v$3211,v$1662);
switch (v$3213[0]) { case 0: {v$4348 = v$3213[1];
 break; }default: {var s$3214 = "lookup_con.Cannot find " + v$1662[1];
v$4348 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3214));
} };
var v$3205 = v$4348[0];
var v$3206 = v$4348[1];
var S$3208 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3209){return "mk_instance";
},[v$3205,v$1663]);
v$1640 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3208,v$3206));
switch (v$1640[0]) { case 3: {var v$1642 = v$1640[1];
var v$1643 = v$1642[0];
if (v$1643 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} else {var v$1645 = v$1643;
if (v$1645[1] == null) {var v$1647 = v$1642[1];
if (v$1647 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} else {var v$1649 = v$1647;
if (v$1649[1] == null) {var v$1656 = v$1645[0];
var v$1657 = v$1649[0];
var ts$1651;
var v$3220 = fix$5039.$type_lexp(env$1107,v$1659);
switch (v$3220[0]) { case 0: {ts$1651 = v$3220[1];
 break; }default: {ts$1651 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.DECONprim0"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576([v$1657,null],ts$1651)) {return [v$1656,null];
} else {var s$3227;
var t$5163;
var t$5162;
var t$5161 = ("DECONprim: " + v$1662[1]) + "; ts = ";
var t$5160;
var st$4778;
var t$5159;
var v$4780 = [0,","];
t$5159 = [basis$0List$1.map$697(function(v$4969){return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$4969);
},ts$1651),v$4780,"]",0,"["];
st$4778 = [0,t$5159];
t$5160 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4778)));
t$5162 = (t$5161 + t$5160);
t$5163 = (t$5162 + "; t2 = ");
var t$5158;
var st$4782 = compiler_objects$0LambdaExp$1$4.layoutType$2964(v$1657);
t$5158 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4782)));
s$3227 = (t$5163 + t$5158);
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$3227);
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Wrong number of args");
};
};
 break; }case 7: {var v$1618 = prim$1110[1];
if (lexps$1113 == null) {var t$5157;
var v$3257 = env$1107[1];
var v$3259 = compiler_objects$0Excon$1$2.lookup$471(v$3257,v$1618);
switch (v$3259[0]) { case 0: {t$5157 = v$3259[1];
 break; }default: {var s$3260 = "lookup_excon.Cannot find " + v$1618[1];
t$5157 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3260));
} };
switch (t$5157[0]) { case 1: {return [[2,[null,special_objects$0TyName$1$1.tyName_EXN$300]],null];
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim.Unary excon not fully applied");
} };
} else {var v$1602 = lexps$1113;
if (v$1602[1] == null) {var v$1617 = v$1602[0];
var v$1608;
var v$3266 = env$1107[1];
var v$3268 = compiler_objects$0Excon$1$2.lookup$471(v$3266,v$1618);
switch (v$3268[0]) { case 0: {v$1608 = v$3268[1];
 break; }default: {var s$3269 = "lookup_excon.Cannot find " + v$1618[1];
v$1608 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3269));
} };
switch (v$1608[0]) { case 0: {var v$1616 = v$1608[1];
var ts$1611;
var v$3273 = fix$5039.$type_lexp(env$1107,v$1617);
switch (v$3273[0]) { case 0: {ts$1611 = v$3273[1];
 break; }default: {ts$1611 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.EXCONprim: "));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576([v$1616,null],ts$1611)) {return [[2,[null,special_objects$0TyName$1$1.tyName_EXN$300]],null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim: ");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim.Nullary excon applied to arg.");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim.Wrong number of args");
};
};
 break; }case 11: {var v$1589 = prim$1110[1];
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim.Wrong number of args");
} else {var v$1572 = lexps$1113;
if (v$1572[1] == null) {var v$1587 = v$1572[0];
var v$1578;
var v$3289 = env$1107[1];
var v$3291 = compiler_objects$0Excon$1$2.lookup$471(v$3289,v$1589);
switch (v$3291[0]) { case 0: {v$1578 = v$3291[1];
 break; }default: {var s$3292 = "lookup_excon.Cannot find " + v$1589[1];
v$1578 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3292));
} };
switch (v$1578[0]) { case 0: {var v$1586 = v$1578[1];
var ts$1581;
var v$3296 = fix$5039.$type_lexp(env$1107,v$1587);
switch (v$3296[0]) { case 0: {ts$1581 = v$3296[1];
 break; }default: {ts$1581 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.DEEXCONprim: "));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1581,[[2,[null,special_objects$0TyName$1$1.tyName_EXN$300]],null])) {return [v$1586,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim: ");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim.Unary excon does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim.Wrong number of args");
};
};
 break; }case 4: {return [[1,basis$0List$1.map$697(function(x$3316){var v$4856 = fix$5039.$type_lexp(env$1107,x$3316);
switch (v$4856[0]) { case 0: {var v$4857 = v$4856[1];
if (v$4857 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.RECORDprim");
} else {var v$4858 = v$4857;
if (v$4858[1] == null) {return v$4858[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.RECORDprim");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.RECORDprim");
} };
},lexps$1113)],null];
 break; }case 1: {var v$1562 = prim$1110[1];
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Wrong number of args.");
} else {var v$1539 = lexps$1113;
if (v$1539[1] == null) {var v$1560 = v$1539[0];
var v$1548 = fix$5039.$type_lexp(env$1107,v$1560);
switch (v$1548[0]) { case 0: {var v$1550 = v$1548[1];
if (v$1550 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
} else {var v$1552 = v$1550;
var v$1553 = v$1552[0];
switch (v$1553[0]) { case 1: {if (v$1552[1] == null) {var v$1558 = v$1553[1];
try {var t$5156;
var t$5155;
var fix$5152 = {};
fix$5152.$h = function(v$3325,v$3326){lab$h: while (true) {if (v$3325 == null) {throw CompilerInitial.exn$Subscript$52;
} else {var v$3327 = v$3325;
var v$3328 = v$3327[0];
var v$3329 = v$3327[1];
if (v$3326 == 0) {return v$3328;
} else {var t$5153 = v$3329;
var t$5154 = SmlPrims.chk_ovf_i32(v$3326 - 1);
var v$3325 = t$5153;
var v$3326 = t$5154;
continue lab$h;
};
};
};
};
var h$3324 = fix$5152.$h;
if (v$1562 < 0) {throw CompilerInitial.exn$Subscript$52;
} else {t$5155 = (h$3324(v$1558,v$1562));
};
t$5156 = [t$5155,null];
return t$5156;
} catch(v$5151) {return (function(v$1557){return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Index out of range");
})(v$5151);
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Wrong number of args.");
};
};
 break; }case 0: {return basis$0List$1.map$697(function(x$3353){var v$4862 = fix$5039.$type_lexp(env$1107,x$3353);
switch (v$4862[0]) { case 0: {var v$4863 = v$4862[1];
if (v$4863 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.UB_RECORDprim");
} else {var v$4864 = v$4863;
if (v$4864[1] == null) {return v$4864[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.UB_RECORDprim");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.UB_RECORDprim");
} };
},lexps$1113);
 break; }case 10: {var v$1529 = prim$1110[1];
var v$1530 = v$1529[0];
valid_t$749(env$1107,v$1530);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong number of args");
} else {var v$1502 = lexps$1113;
if (v$1502[1] == null) {var v$1527 = v$1502[0];
switch (v$1530[0]) { case 2: {var v$1513 = v$1530[1];
var v$1514 = v$1513[0];
if (v$1514 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong instance");
} else {var v$1516 = v$1514;
if (v$1516[1] == null) {var v$1524 = v$1516[0];
var ts$1519;
var v$3359 = fix$5039.$type_lexp(env$1107,v$1527);
switch (v$3359[0]) { case 0: {ts$1519 = v$3359[1];
 break; }default: {ts$1519 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.DEREFprim"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1519,[v$1530,null])) {return [v$1524,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong instance");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong instance");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong number of args");
};
};
 break; }case 3: {var v$1489 = prim$1110[1];
var v$1490 = v$1489[0];
var typescheme_REF$1445;
var tyvar$1446 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1576(0);
var Type$3383 = [3,[[[0,tyvar$1446],null],[[2,[[[0,tyvar$1446],null],special_objects$0TyName$1$1.tyName_REF$280]],null]]];
typescheme_REF$1445 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$3383)),Type$3383];
valid_t$749(env$1107,v$1490);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.Wrong number of args");
} else {var v$1456 = lexps$1113;
if (v$1456[1] == null) {var v$1487 = v$1456[0];
var v$1467;
var v$4465 = [v$1490,null];
var v$3388 = typescheme_REF$1445[0];
var v$3389 = typescheme_REF$1445[1];
var S$3391 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3392){return "mk_instance";
},[v$3388,v$4465]);
v$1467 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3391,v$3389));
switch (v$1467[0]) { case 3: {var v$1469 = v$1467[1];
var v$1470 = v$1469[0];
if (v$1470 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} else {var v$1472 = v$1470;
if (v$1472[1] == null) {var v$1474 = v$1469[1];
if (v$1474 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} else {var v$1476 = v$1474;
if (v$1476[1] == null) {var v$1484 = v$1472[0];
var v$1485 = v$1476[0];
var ts$1479;
var v$3396 = fix$5039.$type_lexp(env$1107,v$1487);
switch (v$3396[0]) { case 0: {ts$1479 = v$3396[1];
 break; }default: {ts$1479 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.REFprim"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1479,[v$1484,null])) {return [v$1485,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.Wrong number of args");
};
};
 break; }case 16: {var v$1442 = prim$1110[1];
var v$1443 = v$1442[0];
valid_t$749(env$1107,v$1443);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong number of args");
} else {var v$1388 = lexps$1113;
var v$1389 = v$1388[1];
if (v$1389 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong number of args");
} else {var v$1391 = v$1389;
if (v$1391[1] == null) {var v$1439 = v$1388[0];
var v$1440 = v$1391[0];
switch (v$1443[0]) { case 1: {var v$1407 = v$1443[1];
if (v$1407 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1409 = v$1407;
var v$1410 = v$1409[0];
switch (v$1410[0]) { case 2: {var v$1412 = v$1410[1];
var v$1413 = v$1412[0];
if (v$1413 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1415 = v$1413;
if (v$1415[1] == null) {var v$1417 = v$1409[1];
if (v$1417 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1419 = v$1417;
if (v$1419[1] == null) {var v$1435 = v$1415[0];
var v$1436 = v$1412[1];
var v$1437 = v$1419[0];
var ts1$1421;
var v$3431 = fix$5039.$type_lexp(env$1107,v$1439);
switch (v$3431[0]) { case 0: {ts1$1421 = v$3431[1];
 break; }default: {ts1$1421 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.ASSIGNprim1"));
} };
var ts2$1422;
var v$3439 = fix$5039.$type_lexp(env$1107,v$1440);
switch (v$3439[0]) { case 0: {ts2$1422 = v$3439[1];
 break; }default: {ts2$1422 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.ASSIGNprim2"));
} };
if ((compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1435,v$1437))?((compiler_objects$0LambdaBasics$1.eq_Types$2576(ts1$1421,[[2,[[v$1435,null],v$1436]],null]))?(compiler_objects$0LambdaBasics$1.eq_Types$2576(ts2$1422,[v$1437,null])):false):false) {return [unit_Type$910,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim3");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong number of args");
};
};
};
 break; }case 9: {if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DROPprim -- one parameter expected");
} else {var v$1370 = lexps$1113;
if (v$1370[1] == null) {var v$1374 = v$1370[0];
fix$5039.$type_lexp(env$1107,v$1374);
return null;
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DROPprim -- one parameter expected");
};
};
 break; }case 8: {var v$1361 = prim$1110[1];
var v$1362 = v$1361[0];
valid_t$749(env$1107,v$1362);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong number of args");
} else {var v$1319 = lexps$1113;
var v$1320 = v$1319[1];
if (v$1320 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong number of args");
} else {var v$1322 = v$1320;
if (v$1322[1] == null) {var v$1358 = v$1319[0];
var v$1359 = v$1322[0];
switch (v$1362[0]) { case 1: {var v$1334 = v$1362[1];
if (v$1334 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
} else {var v$1336 = v$1334;
var v$1337 = v$1336[1];
if (v$1337 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
} else {var v$1339 = v$1337;
if (v$1339[1] == null) {var v$1355 = v$1336[0];
var v$1356 = v$1339[0];
var ts1$1341;
var v$3491 = fix$5039.$type_lexp(env$1107,v$1358);
switch (v$3491[0]) { case 0: {ts1$1341 = v$3491[1];
 break; }default: {ts1$1341 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.EQUALprim1"));
} };
var ts2$1342;
var v$3499 = fix$5039.$type_lexp(env$1107,v$1359);
switch (v$3499[0]) { case 0: {ts2$1342 = v$3499[1];
 break; }default: {ts2$1342 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.EQUALprim2"));
} };
if ((compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1355,v$1356))?((compiler_objects$0LambdaBasics$1.eq_Types$2576(ts1$1341,[v$1355,null]))?(compiler_objects$0LambdaBasics$1.eq_Types$2576(ts2$1342,[v$1356,null])):false):false) {return [[2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]],null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim3");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
};
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong number of args");
};
};
};
 break; }case 14: {var v$1302 = prim$1110[1];
var v$1303 = v$1302[2];
var v$1304 = v$1302[1];
var v$1305 = v$1302[3];
var v$1306 = v$1302[0];
valid_ts$748(env$1107,v$1304);
(valid_s$811(env$1107[0],env$1107[1],env$1107[2],env$1107[3],env$1107[4]))([v$1305,v$1306]);
var v$1235;
var S$3534 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3535){return "mk_instance";
},[v$1305,v$1304]);
v$1235 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3534,v$1306));
switch (v$1235[0]) { case 3: {var v$1299 = v$1235[1];
var v$1300 = v$1299[0];
var v$1301 = v$1299[1];
var ts$1237 = basis$0List$1.map$697(function(x$3539){var v$4868 = fix$5039.$type_lexp(env$1107,x$3539);
switch (v$4868[0]) { case 0: {var v$4869 = v$4868[1];
if (v$4869 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.CCALL");
} else {var v$4870 = v$4869;
if (v$4870[1] == null) {return v$4870[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.CCALL");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.CCALL");
} };
},lexps$1113);
var ts_res$1238;
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1237,v$1300)) {ts_res$1238 = v$1301;
} else {var s$3540 = ("c function " + v$1303) + " expected types:\n";
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3540);
var stringtree$3543;
var t$5143;
var v$3550 = [0,","];
t$5143 = [basis$0List$1.map$697(function(v$4970){return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$4970);
},v$1300),v$3550,"]",0,"["];
stringtree$3543 = [0,t$5143];
tools$0PrettyPrint$1.outputTree$1072([function(s$3544){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3544);
},stringtree$3543,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"but found types:\n");
var stringtree$3552;
var t$5144;
var v$3559 = [0,","];
t$5144 = [basis$0List$1.map$697(function(v$4971){return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$4971);
},ts$1237),v$3559,"]",0,"["];
stringtree$3552 = [0,t$5144];
tools$0PrettyPrint$1.outputTree$1072([function(s$3553){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3553);
},stringtree$3552,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
ts_res$1238 = (tools$0Crash$1.impossible$59("LambdaStatSem.c function call"));
};
if ((v$1303 == "id")?true:(v$1303 == "ord")) {if (v$1300 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
} else {var v$1266 = v$1300;
if (v$1266[1] == null) {if (ts_res$1238 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
} else {var v$1270 = ts_res$1238;
if (v$1270[1] == null) {var v$1292 = v$1266[0];
var v$1293 = v$1270[0];
var unboxed_types$1272 = basis$0List$1.s$n$686([compiler_objects$0LambdaExp$1$4.boolType$1684,[compiler_objects$0LambdaExp$1$4.unitType$1691,[compiler_objects$0LambdaExp$1$4.int31Type$1669,[compiler_objects$0LambdaExp$1$4.word31Type$1677,[compiler_objects$0LambdaExp$1$4.int63Type$1671,[compiler_objects$0LambdaExp$1$4.word63Type$1679,[compiler_objects$0LambdaExp$1$4.intDefaultType$1674(0),[compiler_objects$0LambdaExp$1$4.wordDefaultType$1681(0),[compiler_objects$0LambdaExp$1$4.foreignptrType$1685,null]]]]]]]]],(tag_values$64(0))?null:[compiler_objects$0LambdaExp$1$4.int32Type$1670,[compiler_objects$0LambdaExp$1$4.word32Type$1678,null]]);
var t$5150;
var t$5149;
var fix$5147 = {};
fix$5147.$exists = function(v$3583){lab$exists: while (true) {if (v$3583 == null) {return false;
} else {var v$3584 = v$3583;
var v$3585 = v$3584[0];
var v$3586 = v$3584[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1292,v$3585)) {return true;
} else {var t$5148 = v$3586;
var v$3583 = t$5148;
continue lab$exists;
};
};
};
};
var exists$3582 = fix$5147.$exists;
t$5149 = (exists$3582(unboxed_types$1272));
if (t$5149) {var fix$5145 = {};
fix$5145.$exists = function(v$3590){lab$exists: while (true) {if (v$3590 == null) {return false;
} else {var v$3591 = v$3590;
var v$3592 = v$3591[0];
var v$3593 = v$3591[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1293,v$3592)) {return true;
} else {var t$5146 = v$3593;
var v$3590 = t$5146;
continue lab$exists;
};
};
};
};
var exists$3589 = fix$5145.$exists;
t$5150 = (exists$3589(unboxed_types$1272));
} else {t$5150 = false;
};
t$5150?0:(tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' is used to cast to or from a boxed type;  it is region-unsafe to   use `id' this way! Rewrite your program!!"));
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
};
};
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
};
};
} else {0;
};
return ts_res$1238;
 break; }default: {var s$3609 = ("c function " + v$1303) + " does not have arrow type";
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$3609);
} };
 break; }case 15: {var ts$1215 = basis$0List$1.map$697(function(x$3616){var v$4874 = fix$5039.$type_lexp(env$1107,x$3616);
switch (v$4874[0]) { case 0: {var v$4875 = v$4874[1];
if (v$4875 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.BLOCKF64");
} else {var v$4876 = v$4875;
if (v$4876[1] == null) {return v$4876[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.BLOCKF64");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.BLOCKF64");
} };
},lexps$1113);
var fix$5139 = {};
fix$5139.$app = function(v$3622){lab$app: while (true) {if (v$3622 == null) {return 0;
} else {var v$3623 = v$3622;
var v$3624 = v$3623[0];
var v$3625 = v$3623[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$3624,compiler_objects$0LambdaExp$1$4.f64Type$1688)) {0;
} else {var s$3630;
var t$5141 = "wrong blockf64 element type; got ";
var t$5140;
var st$4814 = compiler_objects$0LambdaExp$1$4.layoutType$2964(v$3624);
t$5140 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4814)));
s$3630 = (t$5141 + t$5140);
tools$0Crash$1.impossible$59("LambdaStatSem." + s$3630);
};
var t$5142 = v$3625;
var v$3622 = t$5142;
continue lab$app;
};
};
};
var app$3621 = fix$5139.$app;
app$3621(ts$1215);
return [compiler_objects$0LambdaExp$1$4.stringType$1689,null];
 break; }case 6: {var v$1211 = prim$1110[1];
var v$1212 = v$1211[2];
var v$1213 = v$1211[0];
var v$1214 = v$1211[1];
valid_t$749(env$1107,v$1213);
valid_t$749(env$1107,v$1214);
var arrowType$1197 = [3,[[v$1213,null],[v$1214,null]]];
var ts$1198 = basis$0List$1.map$697(function(x$3636){var v$4880 = fix$5039.$type_lexp(env$1107,x$3636);
switch (v$4880[0]) { case 0: {var v$4881 = v$4880[1];
if (v$4881 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.EXPORT");
} else {var v$4882 = v$4881;
if (v$4882[1] == null) {return v$4882[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.EXPORT");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.EXPORT");
} };
},lexps$1113);
if (compiler_objects$0LambdaBasics$1.eq_Types$2576([arrowType$1197,null],ts$1198)) {return [compiler_objects$0LambdaExp$1$4.unitType$1691,null];
} else {var s$3637 = ("Exported function " + v$1212) + " expected function of type:\n";
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3637);
var stringtree$3640 = compiler_objects$0LambdaExp$1$4.layoutType$2964(arrowType$1197);
tools$0PrettyPrint$1.outputTree$1072([function(s$3641){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3641);
},stringtree$3640,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"but found type:\n");
var stringtree$3643;
var t$5138;
var v$3650 = [0,","];
t$5138 = [basis$0List$1.map$697(function(v$4972){return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$4972);
},ts$1198),v$3650,"]",0,"["];
stringtree$3643 = [0,t$5138];
tools$0PrettyPrint$1.outputTree$1072([function(s$3644){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3644);
},stringtree$3643,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
return tools$0Crash$1.impossible$59("LambdaStatSem.Export of function");
};
 break; }case 2: {var v$1190 = prim$1110[1];
var v$1191 = v$1190[0];
valid_t$749(env$1107,v$1191);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.RESET_REGIONSprim.Wrong number of args");
} else {var v$1181 = lexps$1113;
if (v$1181[1] == null) {var v$1188 = v$1181[0];
var ts$1183;
var v$3656 = fix$5039.$type_lexp(env$1107,v$1188);
switch (v$3656[0]) { case 0: {ts$1183 = v$3656[1];
 break; }default: {ts$1183 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.RESET_REGIONSprim1"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1183,[v$1191,null])) {return [unit_Type$910,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.RESET_REGIONSprim2");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.RESET_REGIONSprim.Wrong number of args");
};
};
 break; }default: {var v$1725 = prim$1110[1];
var v$1726 = v$1725[0];
valid_t$749(env$1107,v$1726);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.FORCE_RESET_REGIONSprim.Wrong number of args");
} else {var v$1716 = lexps$1113;
if (v$1716[1] == null) {var v$1723 = v$1716[0];
var ts$1718;
var v$3674 = fix$5039.$type_lexp(env$1107,v$1723);
switch (v$3674[0]) { case 0: {ts$1718 = v$3674[1];
 break; }default: {ts$1718 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.FORCE_RESET_REGIONSprim"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1718,[v$1726,null])) {return [unit_Type$910,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.FORCE_RESET_REGIONSprim");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.FORCE_RESET_REGIONSprim.Wrong number of args");
};
};
} };
};
fix$5039.$type_lexp = function(env$1729,lexp$1732){try {switch (lexp$1732[0]) { case 1: {var v$2187 = lexp$1732[1];
var v$2188 = v$2187[1];
var v$2189 = v$2187[0];
valid_ts$748(env$1729,v$2189);
var t$5133;
var t$5132;
var t$5131;
var v$2794 = env$1729[3];
var v$4178;
var v$2796 = compiler_objects$0Lvars$1$2.lookup$642(v$2794,v$2188);
switch (v$2796[0]) { case 0: {v$4178 = v$2796[1];
 break; }default: {var s$2797 = "lookup_lvar.Cannot find " + (compiler_objects$0Lvars$1$1.pr_lvar$78(v$2188[0],v$2188[1],v$2188[2],v$2188[3],v$2188[4],v$2188[5]));
v$4178 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$2797));
} };
var v$2788 = v$4178[0];
var v$2789 = v$4178[1];
var S$2791 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$2792){return "mk_instance";
},[v$2788,v$2189]);
t$5131 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$2791,v$2789));
t$5132 = [t$5131,null];
t$5133 = t$5132;
return [0,t$5133];
 break; }case 13: {var v$2181 = lexp$1732[1];
var v$2183 = v$2181[1];
valid_t$749(env$1729,v$2183);
return [0,[v$2183,null]];
 break; }case 0: {var v$2175 = lexp$1732[1];
var v$2177 = v$2175[1];
valid_t$749(env$1729,v$2177);
return [0,[v$2177,null]];
 break; }case 7: {return [0,[[2,[null,special_objects$0TyName$1$1.tyName_STRING$264]],null]];
 break; }case 8: {return [0,[[2,[null,special_objects$0TyName$1$1.tyName_REAL$256]],null]];
 break; }case 18: {return [0,[[2,[null,special_objects$0TyName$1$1.tyName_F64$260]],null]];
 break; }case 16: {var v$2163 = lexp$1732[1];
var v$2164 = v$2163[1];
var v$2165 = v$2163[0];
var env$$2145;
var fix$5121 = {};
fix$5121.$foldl = function(v$2804,v$2805){lab$foldl: while (true) {if (v$2805 == null) {return v$2804;
} else {var v$2806 = v$2805;
var v$2807 = v$2806[0];
var v$2808 = v$2806[1];
var t$5122;
var v$4707 = v$2807[0];
var v$4708 = v$2807[1];
var v$4710 = [null,v$4708];
var v$4711 = v$2804[2];
var v$4712 = v$2804[0];
var v$4713 = v$2804[4];
var v$4714 = v$2804[3];
var t$5128 = v$4712;
var t$5127 = v$2804[1];
var t$5126;
var t$5125 = tools$0NatSet$1.union$664;
var t$5124 = v$4711;
var t$5123;
var v$4715 = v$4710[0];
var v$4716 = v$4710[1];
t$5123 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4716),tools$0NatSet$1.fromList$614(v$4715)));
t$5126 = (t$5125(t$5124,t$5123));
t$5122 = [t$5128,t$5127,t$5126,compiler_objects$0Lvars$1$2.add$664(v$4707,v$4710,v$4714),v$4713];
var t$5129 = t$5122;
var t$5130 = v$2808;
var v$2804 = t$5129;
var v$2805 = t$5130;
continue lab$foldl;
};
};
};
var foldl$2803 = fix$5121.$foldl;
env$$2145 = (foldl$2803(env$1729,v$2164));
var ts_body$2155;
var v$2821 = fix$5039.$type_lexp(env$$2145,v$2165);
switch (v$2821[0]) { case 0: {ts_body$2155 = v$2821[1];
 break; }default: {ts_body$2155 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.FN"));
} };
var ts_arg$2156 = basis$0List$1.map$697(function(v$2159){return v$2159[1];
},v$2164);
valid_ts$748(env$1729,ts_arg$2156);
return [0,[[3,[ts_arg$2156,ts_body$2155]],null]];
 break; }case 12: {var v$2073 = lexp$1732[1];
var v$2074 = v$2073[1];
if (v$2074 == null) {var v$2080 = v$2073[0];
var v$2081 = v$2073[2];
var ts$2075;
var v$2829 = fix$5039.$type_lexp(env$1729,v$2080);
switch (v$2829[0]) { case 0: {ts$2075 = v$2829[1];
 break; }default: {ts$2075 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.WILD"));
} };
((ts$2075 == null)?true:false)?0:(tools$0Crash$1.impossible$59("LambdaStatSem.LET.wild -- the binding must be surrounded by a drop expression"));
return fix$5039.$type_lexp(env$1729,v$2081);
} else {var v$2142 = v$2073[0];
var v$2143 = v$2073[2];
var env_scope$2082;
var fix$5103 = {};
fix$5103.$foldl = function(v$2843,v$2844){lab$foldl: while (true) {if (v$2844 == null) {return v$2843;
} else {var v$2845 = v$2844;
var v$2846 = v$2845[0];
var v$2847 = v$2845[1];
var t$5104;
var v$4719 = v$2846[0];
var v$4720 = v$2846[1];
var v$4721 = v$2846[2];
var v$4723 = [v$4720,v$4721];
var v$4724 = v$2843[2];
var v$4725 = v$2843[0];
var v$4726 = v$2843[4];
var v$4727 = v$2843[3];
var t$5110 = v$4725;
var t$5109 = v$2843[1];
var t$5108;
var t$5107 = tools$0NatSet$1.union$664;
var t$5106 = v$4724;
var t$5105;
var v$4728 = v$4723[0];
var v$4729 = v$4723[1];
t$5105 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4729),tools$0NatSet$1.fromList$614(v$4728)));
t$5108 = (t$5107(t$5106,t$5105));
t$5104 = [t$5110,t$5109,t$5108,compiler_objects$0Lvars$1$2.add$664(v$4719,v$4723,v$4727),v$4726];
var t$5111 = t$5104;
var t$5112 = v$2847;
var v$2843 = t$5111;
var v$2844 = t$5112;
continue lab$foldl;
};
};
};
var foldl$2842 = fix$5103.$foldl;
env_scope$2082 = (foldl$2842(env$1729,v$2074));
var tvs$2094;
var b$2860 = null;
var fix$5113 = {};
fix$5113.$foldl = function(v$2863,v$2864){lab$foldl: while (true) {if (v$2864 == null) {return v$2863;
} else {var v$2865 = v$2864;
var v$2866 = v$2865[0];
var v$2867 = v$2865[1];
var t$5114;
var v$4732 = v$2866[1];
t$5114 = (basis$0List$1.s$n$686(v$4732,v$2863));
var t$5115 = t$5114;
var t$5116 = v$2867;
var v$2863 = t$5115;
var v$2864 = t$5116;
continue lab$foldl;
};
};
};
var foldl$2862 = fix$5113.$foldl;
tvs$2094 = (foldl$2862(b$2860,v$2074));
var v$2871 = env$1729[2];
var v$2872 = env$1729[0];
var v$2873 = env$1729[4];
var v$2874 = env$1729[3];
var env_bind$2102 = [v$2872,env$1729[1],tools$0NatSet$1.addList$615(tvs$2094,v$2871),v$2874,v$2873];
var check_polymorphism$2103 = letrec_polymorphism_only$63[0]?(function(v$2111){if (v$2111 == null) {return 0;
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.LET.polymorphic let -- Polymorphism only allowed in FIX.");
};
}):(function(v$2113){return 0;
});
var ts_bind$2127;
var v$2884 = fix$5039.$type_lexp(env_bind$2102,v$2142);
switch (v$2884[0]) { case 0: {ts_bind$2127 = v$2884[1];
 break; }default: {ts_bind$2127 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.LET.bind"));
} };
try {var l$2892 = basis$0ListPair$1.zipEq$96(v$2074,ts_bind$2127);
var fix$5118 = {};
fix$5118.$app = function(v$2894){lab$app: while (true) {if (v$2894 == null) {return 0;
} else {var v$2895 = v$2894;
var v$2896 = v$2895[0];
var v$2897 = v$2895[1];
var v$4735 = v$2896[0];
var v$4736 = v$4735[1];
var v$4737 = v$4735[2];
var v$4738 = v$2896[1];
(valid_s$811(env$1729[0],env$1729[1],env$1729[2],env$1729[3],env$1729[4]))([v$4736,v$4737]);
eqType$844("LET",[v$4737,v$4738]);
check_polymorphism$2103(v$4736);
(tools$0NatSet$1.isEmpty$598(tools$0NatSet$1.intersect$657(tools$0NatSet$1.fromList$614(v$4736),env$1729[2])))?0:(tools$0Crash$1.impossible$59("LambdaStatSem.tyvars_not_in_env.TYVARS in Env!!"));
var t$5119 = v$2897;
var v$2894 = t$5119;
continue lab$app;
};
};
};
var app$2893 = fix$5118.$app;
app$2893(l$2892);
} catch(v$5117) {(function(ListPair$UnequalLengths$2141){var t$5120 = ListPair$UnequalLengths$2141;
if (t$5120[0] == basis$0ListPair$1.en$UnequalLengths$54) {return tools$0Crash$1.impossible$59("LambdaStatSem.LET.pattern and bind type differ in numbers of components");
} else {throw ListPair$UnequalLengths$2141;
};
})(v$5117);
};
return fix$5039.$type_lexp(env_scope$2082,v$2143);
};
 break; }case 11: {var v$2069 = lexp$1732[1];
var v$2071 = v$2069[1];
return fix$5039.$type_lexp(env$1729,v$2071);
 break; }case 17: {var v$2065 = lexp$1732[1];
var v$2066 = v$2065[0];
var v$2067 = v$2065[1];
var env$$2022;
var fix$5080 = {};
fix$5080.$foldl = function(v$2912,v$2913){lab$foldl: while (true) {if (v$2913 == null) {return v$2912;
} else {var v$2914 = v$2913;
var v$2915 = v$2914[0];
var v$2916 = v$2914[1];
var t$5081;
var v$4741 = v$2915[2];
var v$4742 = v$2915[4];
var v$4743 = v$2915[0];
(valid_s$811(v$2912[0],v$2912[1],v$2912[2],v$2912[3],v$2912[4]))([v$4742,v$4743]);
var v$4745 = [null,v$4743];
var v$4746 = v$2912[2];
var v$4747 = v$2912[0];
var v$4748 = v$2912[4];
var v$4749 = v$2912[3];
var v$4833 = v$2912[1];
var v$4834 = tools$0NatSet$1.addList$615(v$4742,v$4746);
var t$5087 = v$4747;
var t$5086 = v$4833;
var t$5085;
var t$5084 = tools$0NatSet$1.union$664;
var t$5083 = v$4834;
var t$5082;
var v$4755 = v$4745[0];
var v$4756 = v$4745[1];
t$5082 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4756),tools$0NatSet$1.fromList$614(v$4755)));
t$5085 = (t$5084(t$5083,t$5082));
t$5081 = [t$5087,t$5086,t$5085,compiler_objects$0Lvars$1$2.add$664(v$4741,v$4745,v$4749),v$4748];
var t$5088 = t$5081;
var t$5089 = v$2916;
var v$2912 = t$5088;
var v$2913 = t$5089;
continue lab$foldl;
};
};
};
var foldl$2911 = fix$5080.$foldl;
env$$2022 = (foldl$2911(env$1729,v$2066));
var type_pairs$2040 = basis$0List$1.map$697(function(v$2044){var v$2045 = v$2044[1];
var v$2046 = v$2044[0];
var t$5090;
var v$4758 = fix$5039.$type_lexp(env$$2022,v$2045);
switch (v$4758[0]) { case 0: {var v$4759 = v$4758[1];
if (v$4759 == null) {t$5090 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.FIX"));
} else {var v$4760 = v$4759;
t$5090 = ((v$4760[1] == null)?v$4760[0]:(tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.FIX")));
};
 break; }default: {t$5090 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.FIX"));
} };
return [t$5090,v$2046];
},v$2066);
var fix$5091 = {};
fix$5091.$app = function(v$2938){lab$app: while (true) {if (v$2938 == null) {return 0;
} else {var v$2939 = v$2938;
var v$2940 = v$2939[0];
var v$2941 = v$2939[1];
eqType$844("FIX",v$2940);
var t$5092 = v$2941;
var v$2938 = t$5092;
continue lab$app;
};
};
};
var app$2937 = fix$5091.$app;
app$2937(type_pairs$2040);
var env_scope$2047;
var fix$5093 = {};
fix$5093.$foldl = function(v$2946,v$2947){lab$foldl: while (true) {if (v$2947 == null) {return v$2946;
} else {var v$2948 = v$2947;
var v$2949 = v$2948[0];
var v$2950 = v$2948[1];
var t$5094;
var v$4766 = v$2949[2];
var v$4767 = v$2949[4];
var v$4768 = v$2949[0];
(tools$0NatSet$1.isEmpty$598(tools$0NatSet$1.intersect$657(tools$0NatSet$1.fromList$614(v$4767),v$2946[2])))?0:(tools$0Crash$1.impossible$59("LambdaStatSem.tyvars_not_in_env.TYVARS in Env!!"));
var v$4770 = [v$4767,v$4768];
var v$4771 = v$2946[2];
var v$4772 = v$2946[0];
var v$4773 = v$2946[4];
var v$4774 = v$2946[3];
var t$5100 = v$4772;
var t$5099 = v$2946[1];
var t$5098;
var t$5097 = tools$0NatSet$1.union$664;
var t$5096 = v$4771;
var t$5095;
var v$4775 = v$4770[0];
var v$4776 = v$4770[1];
t$5095 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4776),tools$0NatSet$1.fromList$614(v$4775)));
t$5098 = (t$5097(t$5096,t$5095));
t$5094 = [t$5100,t$5099,t$5098,compiler_objects$0Lvars$1$2.add$664(v$4766,v$4770,v$4774),v$4773];
var t$5101 = t$5094;
var t$5102 = v$2950;
var v$2946 = t$5101;
var v$2947 = t$5102;
continue lab$foldl;
};
};
};
var foldl$2945 = fix$5093.$foldl;
env_scope$2047 = (foldl$2945(env$1729,v$2066));
return fix$5039.$type_lexp(env_scope$2047,v$2067);
 break; }case 20: {var v$2018 = lexp$1732[1];
var v$2019 = v$2018[0];
var v$2020 = v$2018[1];
var v$1989 = fix$5039.$type_lexp(env$1729,v$2019);
switch (v$1989[0]) { case 0: {var v$1991 = v$1989[1];
if (v$1991 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
} else {var v$1993 = v$1991;
var v$1994 = v$1993[0];
switch (v$1994[0]) { case 3: {if (v$1993[1] == null) {var v$2014 = v$1994[1];
var v$2015 = v$2014[0];
var v$2016 = v$2014[1];
var ts$1997;
var v$2970 = fix$5039.$type_lexp(env$1729,v$2020);
switch (v$2970[0]) { case 0: {ts$1997 = v$2970[1];
 break; }default: {ts$1997 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.APP"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1997,v$2015)) {return [0,v$2016];
} else {basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"types expected:\n");
var stringtree$2978;
var t$5078;
var v$2985 = [0,","];
t$5078 = [basis$0List$1.map$697(function(v$4967){return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$4967);
},v$2015),v$2985,"]",0,"["];
stringtree$2978 = [0,t$5078];
tools$0PrettyPrint$1.outputTree$1072([function(s$2979){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2979);
},stringtree$2978,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\ntypes:\n");
var stringtree$2987;
var t$5079;
var v$2994 = [0,","];
t$5079 = [basis$0List$1.map$697(function(v$4968){return compiler_objects$0LambdaExp$1$4.layoutType$2964(v$4968);
},ts$1997),v$2994,"]",0,"["];
stringtree$2987 = [0,t$5079];
tools$0PrettyPrint$1.outputTree$1072([function(s$2988){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2988);
},stringtree$2987,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"application:\n");
var stringtree$2996 = compiler_objects$0LambdaExp$1$4.layoutLambdaExp$5066(lexp$1732);
tools$0PrettyPrint$1.outputTree$1072([function(s$2997){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2997);
},stringtree$2996,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
return tools$0Crash$1.impossible$59("LambdaStatSem.APP");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
} };
 break; }case 19: {var v$1976 = lexp$1732[1];
var v$1977 = v$1976[0];
var v$1978 = v$1976[1];
var v$1979 = v$1976[2];
switch (v$1978[0]) { case 0: {var v$1975 = v$1978[1];
valid_t$749(env$1729,v$1975);
 break; }default: {0;
} };
var t$5077 = fix$5039.$type_lexp;
var t$5076;
var v$3016 = env$1729[2];
var v$3017 = env$1729[0];
var v$3018 = env$1729[4];
var v$3019 = env$1729[3];
var v$3020 = env$1729[1];
var ftv$$3021;
switch (v$1978[0]) { case 0: {var v$3022 = v$1978[1];
ftv$$3021 = (tools$0NatSet$1.union$664(v$3016,ftv_Type$155(v$3022)));
 break; }default: {ftv$$3021 = v$3016;
} };
t$5076 = [v$3017,compiler_objects$0Excon$1$2.add$493(v$1977,v$1978,v$3020),ftv$$3021,v$3019,v$3018];
return t$5077(t$5076,v$1979);
 break; }case 9: {var v$1963 = lexp$1732[1];
var v$1964 = v$1963[0];
var v$1965 = v$1963[1];
var v$1951 = fix$5039.$type_lexp(env$1729,v$1964);
switch (v$1951[0]) { case 0: {var v$1953 = v$1951[1];
if (v$1953 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn");
} else {var v$1955 = v$1953;
var v$1956 = v$1955[0];
switch (v$1956[0]) { case 2: {var v$1958 = v$1956[1];
return (v$1958[0] == null)?((v$1955[1] == null)?v$1965:(tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn"))):(tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn"));
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn");
} };
 break; }case 14: {var v$1939 = lexp$1732[1];
var v$1940 = v$1939[0];
var v$1941 = v$1939[1];
var v$1914 = fix$5039.$type_lexp(env$1729,v$1941);
switch (v$1914[0]) { case 0: {var v$1916 = v$1914[1];
if (v$1916 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} else {var v$1918 = v$1916;
var v$1919 = v$1918[0];
switch (v$1919[0]) { case 3: {var v$1921 = v$1919[1];
var v$1922 = v$1921[0];
if (v$1922 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} else {var v$1924 = v$1922;
var v$1925 = v$1924[0];
switch (v$1925[0]) { case 2: {var v$1927 = v$1925[1];
if (v$1927[0] == null) {if (v$1924[1] == null) {if (v$1918[1] == null) {var v$1937 = v$1921[1];
var ts$1931;
var v$3043 = fix$5039.$type_lexp(env$1729,v$1940);
switch (v$3043[0]) { case 0: {ts$1931 = v$3043[1];
 break; }default: {ts$1931 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.HANDLE"));
} };
return (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1931,v$1937))?[0,v$1937]:(tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE"));
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} };
 break; }case 4: {var v$1898 = lexp$1732[1];
var v$1899 = v$1898[1];
var v$1900 = v$1898[0];
var tn$1885;
switch (v$1900) { case 31: {tn$1885 = special_objects$0TyName$1$1.tyName_INT31$216;
 break; }case 32: {tn$1885 = special_objects$0TyName$1$1.tyName_INT32$220;
 break; }case 63: {tn$1885 = special_objects$0TyName$1$1.tyName_INT63$224;
 break; }case 64: {tn$1885 = special_objects$0TyName$1$1.tyName_INT64$228;
 break; }default: {var s$3076 = "SWITCH_I.precision = " + (basis$0Int32$1.toString$458(v$1900));
tn$1885 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3076));
} };
return type_switch$999(function(v$4920){return fix$5039.$type_lexp(env$1729,v$4920);
},function(v$1897){return tn$1885;
},v$1899);
 break; }case 2: {var v$1881 = lexp$1732[1];
var v$1882 = v$1881[1];
var v$1883 = v$1881[0];
var tn$1868;
switch (v$1883) { case 31: {tn$1868 = special_objects$0TyName$1$1.tyName_WORD31$240;
 break; }case 32: {tn$1868 = special_objects$0TyName$1$1.tyName_WORD32$244;
 break; }case 63: {tn$1868 = special_objects$0TyName$1$1.tyName_WORD63$248;
 break; }case 64: {tn$1868 = special_objects$0TyName$1$1.tyName_WORD64$252;
 break; }default: {tn$1868 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_I"));
} };
return type_switch$999(function(v$4922){return fix$5039.$type_lexp(env$1729,v$4922);
},function(v$1880){return tn$1868;
},v$1882);
 break; }case 3: {var v$1866 = lexp$1732[1];
return type_switch$999(function(v$4924){return fix$5039.$type_lexp(env$1729,v$4924);
},function(s$1865){return special_objects$0TyName$1$1.tyName_STRING$264;
},v$1866);
 break; }case 6: {var v$1861 = lexp$1732[1];
return type_switch$999(function(v$4926){return fix$5039.$type_lexp(env$1729,v$4926);
},function(v$1833){var v$1860 = v$1833[0];
var v$3082 = env$1729[0];
var v$1844;
var v$3084 = compiler_objects$0Con$1$2.lookup$499(v$3082,v$1860);
switch (v$3084[0]) { case 0: {v$1844 = v$3084[1];
 break; }default: {var s$3085 = "lookup_con.Cannot find " + v$1860[1];
v$1844 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3085));
} };
var v$1845 = v$1844[1];
switch (v$1845[0]) { case 2: {return v$1845[1][1];
 break; }case 3: {var v$1847 = v$1845[1];
var v$1848 = v$1847[1];
if (v$1848 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
} else {var v$1850 = v$1848;
var v$1851 = v$1850[0];
switch (v$1851[0]) { case 2: {if (v$1850[1] == null) {return v$1851[1][1];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
} };
},v$1861);
 break; }case 5: {var v$1829 = lexp$1732[1];
return type_switch$999(function(v$4928){return fix$5039.$type_lexp(env$1729,v$4928);
},function(v$1825){var v$1828 = v$1825[0];
var v$3103 = env$1729[1];
var v$3105 = compiler_objects$0Excon$1$2.lookup$471(v$3103,v$1828);
switch (v$3105[0]) { case 0: {v$3105[1];
 break; }default: {var s$3106 = "lookup_excon.Cannot find " + v$1828[1];
tools$0Crash$1.impossible$59("LambdaStatSem." + s$3106);
} };
return special_objects$0TyName$1$1.tyName_EXN$300;
},v$1829);
 break; }case 10: {var v$1819 = lexp$1732[1];
var v$1820 = v$1819[0];
var v$1821 = v$1819[1];
return [0,fix$5039.$type_prim(env$1729,v$1820,v$1821)];
 break; }default: {var v$2220 = lexp$1732[1];
var v$2221 = v$2220[1];
var v$2222 = v$2220[0];
var t$5134;
var v$2218 = basis$0List$1.map$697(function(p$3123){var v$3124 = p$3123[1];
var v$3127 = env$1729[3];
var v$3126;
var v$3129 = compiler_objects$0Lvars$1$2.lookup$642(v$3127,v$3124);
switch (v$3129[0]) { case 0: {v$3126 = v$3129[1];
 break; }default: {var s$3130 = "lookup_lvar.Cannot find " + (compiler_objects$0Lvars$1$1.pr_lvar$78(v$3124[0],v$3124[1],v$3124[2],v$3124[3],v$3124[4],v$3124[5]));
v$3126 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3130));
} };
return [v$3126[1],v$3124,v$3126[0]];
},v$2221);
t$5134 = [basis$0List$1.map$697(function(v$3133){var v$3134 = v$3133[0];
var t$5136 = v$3134;
var t$5135;
var v$3136 = env$1729[1];
var v$3138 = compiler_objects$0Excon$1$2.lookup$471(v$3136,v$3134);
switch (v$3138[0]) { case 0: {t$5135 = v$3138[1];
 break; }default: {var s$3139 = "lookup_excon.Cannot find " + v$3134[1];
t$5135 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3139));
} };
return [t$5136,t$5135];
},v$2222),v$2218];
return [2,t$5134];
} };
} catch(v$5075) {return (function(v$2227){var t$5137 = v$2227;
if (t$5137[0] == en$AbortExp$1102) {throw exn$AbortExp$1102;
} else {var stringtree$3142 = compiler_objects$0LambdaExp$1$4.layoutLambdaExp$5066(lexp$1732);
tools$0PrettyPrint$1.outputTree$1072([function(s$3143){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3143);
},stringtree$3142,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
var stringtree$3144 = compiler0$0LambdaStatSem$1.layout_env$590(env$1729[0],env$1729[1],env$1729[2],env$1729[3],env$1729[4]);
tools$0PrettyPrint$1.outputTree$1072([function(s$3145){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3145);
},stringtree$3144,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
throw exn$AbortExp$1102;
};
})(v$5075);
};
};
var type_prim$1104 = fix$5039.$type_prim;
var type_lexp$1103 = fix$5039.$type_lexp;
compiler0$0LambdaStatSem$1.type_check$2318 = function(v$2336,v$4898,v$2337){var v$2338 = v$2337[1];
var v$2339 = v$2338[0];
var v$2340 = v$2338[1];
(letrec_polymorphism_only$63[0] = v$4898,0);
var env$$2328;
var v$3844 = v$2339[1];
var concat$3845;
var b$3847 = null;
concat$3845 = (function(c$3848){var fix$5040 = {};
fix$5040.$foldl = function(v$3850,v$3851){lab$foldl: while (true) {if (v$3851 == null) {return v$3850;
} else {var v$3852 = v$3851;
var v$3853 = v$3852[0];
var v$3854 = v$3852[1];
var t$5041 = basis$0List$1.s$n$686(v$3853,v$3850);
var t$5042 = v$3854;
var v$3850 = t$5041;
var v$3851 = t$5042;
continue lab$foldl;
};
};
};
var foldl$3849 = fix$5040.$foldl;
return foldl$3849(b$3847,c$3848);
});
var c$3898 = concat$3845(v$3844);
var fix$5043 = {};
fix$5043.$foldl = function(v$3900,v$3901){lab$foldl: while (true) {if (v$3901 == null) {return v$3900;
} else {var v$3902 = v$3901;
var v$3903 = v$3902[0];
var v$3904 = v$3902[1];
var t$5057;
var t$5056 = compiler0$0LambdaStatSem$1.plus$262;
var t$5055 = v$3900;
var t$5044;
var v$3908 = v$3903[0];
var v$3909 = v$3903[1];
var v$3910 = v$3903[2];
var env$3911;
var fix$5045 = {};
fix$5045.$foldl = function(v$3913,v$3914){lab$foldl: while (true) {if (v$3914 == null) {return v$3913;
} else {var v$3915 = v$3914;
var v$3916 = v$3915[0];
var v$3917 = v$3915[1];
var t$5046;
var v$3920 = v$3916[0];
var v$3921 = v$3916[1];
var v$4631;
switch (v$3921[0]) { case 0: {v$4631 = [v$3908,[3,[[v$3921[1],null],[[2,[basis$0List$1.map$697((function(env$5047){return function(v$3924){return [0,v$3924];
};
})([]),v$3908),v$3909]],null]]]];
 break; }default: {v$4631 = [v$3908,[2,[basis$0List$1.map$697((function(env$5048){return function(v$3925){return [0,v$3925];
};
})([]),v$3908),v$3909]]];
} };
var v$3929 = v$3913[2];
var v$3930 = v$3913[0];
var v$3931 = v$3913[4];
var v$3932 = v$3913[3];
var v$3933 = v$3913[1];
var v$3934;
var t$5051 = tools$0NatSet$1.union$664;
var t$5050 = v$3929;
var t$5049;
var v$3935 = v$4631[0];
var v$3936 = v$4631[1];
t$5049 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$3936),tools$0NatSet$1.fromList$614(v$3935)));
v$3934 = (t$5051(t$5050,t$5049));
t$5046 = [compiler_objects$0Con$1$2.add$521(v$3920,v$4631,v$3930),v$3933,v$3934,v$3932,v$3931];
var t$5052 = t$5046;
var t$5053 = v$3917;
var v$3913 = t$5052;
var v$3914 = t$5053;
continue lab$foldl;
};
};
};
var foldl$3912 = fix$5045.$foldl;
env$3911 = (foldl$3912(compiler0$0LambdaStatSem$1.empty$210,v$3910));
var v$4634 = basis$0List$1.map$697((function(env$5054){return function(v$3938){return v$3938[0];
};
})([]),v$3910);
var v$3942 = env$3911[2];
var v$3943 = env$3911[0];
var v$3944 = env$3911[4];
t$5044 = [v$3943,env$3911[1],v$3942,env$3911[3],special_objects$0TyName$1$2.add$1390(v$3909,v$4634,v$3944)];
t$5057 = (t$5056(t$5055,t$5044));
var t$5058 = t$5057;
var t$5059 = v$3904;
var v$3900 = t$5058;
var v$3901 = t$5059;
continue lab$foldl;
};
};
};
var foldl$3899 = fix$5043.$foldl;
env$$2328 = (foldl$3899(compiler0$0LambdaStatSem$1.empty$210,c$3898));
var fr$2329;
try {fr$2329 = (type_lexp$1103(compiler0$0LambdaStatSem$1.plus$262(v$2336,env$$2328),v$2340));
} catch(v$5060) {fr$2329 = ((function(s$m$2332){var stringtree$3945 = compiler_objects$0LambdaExp$1$4.layoutLambdaExp$5066(v$2340);
tools$0PrettyPrint$1.outputTree$1072([function(s$3946){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3946);
},stringtree$3945,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
throw s$m$2332;
})(v$5060));
};
var env$$$2335;
switch (fr$2329[0]) { case 2: {var v$3948 = fr$2329[1];
var v$3949 = v$3948[1];
var v$3950 = v$3948[0];
var env$$3951;
var fix$5061 = {};
fix$5061.$foldl = function(v$3972,v$3973){lab$foldl: while (true) {if (v$3973 == null) {return v$3972;
} else {var v$3974 = v$3973;
var v$3975 = v$3974[0];
var v$3976 = v$3974[1];
var t$5062;
var v$4006 = v$3975[1];
var v$4007 = v$3975[2];
var v$4008 = v$3975[0];
var v$4639 = [v$4007,v$4008];
var v$4014 = v$3972[2];
var v$4015 = v$3972[0];
var v$4016 = v$3972[4];
var v$4017 = v$3972[3];
var t$5068 = v$4015;
var t$5067 = v$3972[1];
var t$5066;
var t$5065 = tools$0NatSet$1.union$664;
var t$5064 = v$4014;
var t$5063;
var v$4018 = v$4639[0];
var v$4019 = v$4639[1];
t$5063 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4019),tools$0NatSet$1.fromList$614(v$4018)));
t$5066 = (t$5065(t$5064,t$5063));
t$5062 = [t$5068,t$5067,t$5066,compiler_objects$0Lvars$1$2.add$664(v$4006,v$4639,v$4017),v$4016];
var t$5069 = t$5062;
var t$5070 = v$3976;
var v$3972 = t$5069;
var v$3973 = t$5070;
continue lab$foldl;
};
};
};
var foldl$3971 = fix$5061.$foldl;
env$$3951 = (foldl$3971(compiler0$0LambdaStatSem$1.empty$210,v$3949));
var fix$5071 = {};
fix$5071.$foldl = function(v$3997,v$3998){lab$foldl: while (true) {if (v$3998 == null) {return v$3997;
} else {var v$3999 = v$3998;
var v$4000 = v$3999[0];
var v$4001 = v$3999[1];
var t$5072;
var v$4022 = v$4000[0];
var v$4023 = v$4000[1];
var v$4029 = v$3997[2];
var v$4030 = v$3997[0];
var v$4031 = v$3997[4];
var v$4032 = v$3997[3];
var v$4033 = v$3997[1];
var ftv$$4034;
switch (v$4023[0]) { case 0: {var v$4035 = v$4023[1];
ftv$$4034 = (tools$0NatSet$1.union$664(v$4029,ftv_Type$155(v$4035)));
 break; }default: {ftv$$4034 = v$4029;
} };
t$5072 = [v$4030,compiler_objects$0Excon$1$2.add$493(v$4022,v$4023,v$4033),ftv$$4034,v$4032,v$4031];
var t$5073 = t$5072;
var t$5074 = v$4001;
var v$3997 = t$5073;
var v$3998 = t$5074;
continue lab$foldl;
};
};
};
var foldl$3996 = fix$5071.$foldl;
env$$$2335 = (foldl$3996(env$$3951,v$3950));
 break; }default: {env$$$2335 = (tools$0Crash$1.impossible$59("LambdaStatSem.env_from_frame. No frame"));
} };
return compiler0$0LambdaStatSem$1.plus$262(env$$2328,env$$$2335);
};
return 0;
})();
