if ((typeof(compiler0$0LambdaStatSem$1)) == "undefined") {compiler0$0LambdaStatSem$1 = {};
};
(function(){var letrec_polymorphism_only$63 = [false];
var tag_values$64 = tools$0Flags$1$6.is_on0$5191("tag_values");
var ftv_Type$155 = function(Type$158){var fix$5076 = {};
fix$5076.$f = function(v$180,v$4984){switch (v$180[0]) { case 0: {var v$191 = v$180[1];
return tools$0NatSet$1.insert$636(v$191,v$4984);
 break; }case 3: {var v$186 = v$180[1];
var v$187 = v$186[0];
var v$188 = v$186[1];
var b$2422;
var fix$5080 = {};
fix$5080.$foldl = function(v$2434,v$2435){lab$foldl: while (true) {if (v$2435 == null) {return v$2434;
} else {var v$2436 = v$2435;
var v$2437 = v$2436[0];
var v$2438 = v$2436[1];
var t$5081 = fix$5076.$f(v$2437,v$2434);
var t$5082 = v$2438;
var v$2434 = t$5081;
var v$2435 = t$5082;
continue lab$foldl;
};
};
};
var foldl$2433 = fix$5080.$foldl;
b$2422 = (foldl$2433(v$4984,v$187));
var fix$5083 = {};
fix$5083.$foldl = function(v$2425,v$2426){lab$foldl: while (true) {if (v$2426 == null) {return v$2425;
} else {var v$2427 = v$2426;
var v$2428 = v$2427[0];
var v$2429 = v$2427[1];
var t$5084 = fix$5076.$f(v$2428,v$2425);
var t$5085 = v$2429;
var v$2425 = t$5084;
var v$2426 = t$5085;
continue lab$foldl;
};
};
};
var foldl$2424 = fix$5083.$foldl;
return foldl$2424(b$2422,v$188);
 break; }case 2: {var v$182 = v$180[1];
var v$183 = v$182[0];
var fix$5077 = {};
fix$5077.$foldl = function(v$2443,v$2444){lab$foldl: while (true) {if (v$2444 == null) {return v$2443;
} else {var v$2445 = v$2444;
var v$2446 = v$2445[0];
var v$2447 = v$2445[1];
var t$5078 = fix$5076.$f(v$2446,v$2443);
var t$5079 = v$2447;
var v$2443 = t$5078;
var v$2444 = t$5079;
continue lab$foldl;
};
};
};
var foldl$2442 = fix$5077.$foldl;
return foldl$2442(v$4984,v$183);
 break; }default: {var v$193 = v$180[1];
var fix$5086 = {};
fix$5086.$foldl = function(v$2452,v$2453){lab$foldl: while (true) {if (v$2453 == null) {return v$2452;
} else {var v$2454 = v$2453;
var v$2455 = v$2454[0];
var v$2456 = v$2454[1];
var t$5087 = fix$5076.$f(v$2455,v$2452);
var t$5088 = v$2456;
var v$2452 = t$5087;
var v$2453 = t$5088;
continue lab$foldl;
};
};
};
var foldl$2451 = fix$5086.$foldl;
return foldl$2451(v$4984,v$193);
} };
};
var f$159 = fix$5076.$f;
return f$159(Type$158,null);
};
compiler0$0LambdaStatSem$1.empty$210 = [compiler_objects$0Con$1$2.empty$364(0),compiler_objects$0Excon$1$2.empty$336(0),null,compiler_objects$0Lvars$1$2.empty$502(0),special_objects$0TyName$1$2.empty$1260(0)];
var initial_con_env$216;
var typescheme_TRUE$217;
var Type$2457 = [2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]];
typescheme_TRUE$217 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2457)),Type$2457];
var typescheme_FALSE$218;
var Type$2458 = [2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]];
typescheme_FALSE$218 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2458)),Type$2458];
var typescheme_NIL$219;
var tyvar$220 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1602(0);
var Type$2459 = [2,[[[0,tyvar$220],null],special_objects$0TyName$1$1.tyName_LIST$272]];
typescheme_NIL$219 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2459)),Type$2459];
var typescheme_CONS$221;
var tyvar$222 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1602(0);
var Type$2460 = [3,[[[1,[[0,tyvar$222],[[2,[[[0,tyvar$222],null],special_objects$0TyName$1$1.tyName_LIST$272]],null]]],null],[[2,[[[0,tyvar$222],null],special_objects$0TyName$1$1.tyName_LIST$272]],null]]];
typescheme_CONS$221 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2460)),Type$2460];
var typescheme_QUOTE$223;
var tyvar$224 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1602(0);
var Type$2461 = [3,[[[2,[null,special_objects$0TyName$1$1.tyName_STRING$264]],null],[[2,[[[0,tyvar$224],null],special_objects$0TyName$1$1.tyName_FRAG$276]],null]]];
typescheme_QUOTE$223 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2461)),Type$2461];
var typescheme_ANTIQUOTE$225;
var tyvar$226 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1602(0);
var Type$2462 = [3,[[[0,tyvar$226],null],[[2,[[[0,tyvar$226],null],special_objects$0TyName$1$1.tyName_FRAG$276]],null]]];
typescheme_ANTIQUOTE$225 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2462)),Type$2462];
var typescheme_INTINF$227;
var Type$2463 = [3,[[[1,[[2,[[[2,[null,special_objects$0TyName$1$1.tyName_INT31$216]],null],special_objects$0TyName$1$1.tyName_LIST$272]],[[2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]],null]]],null],[[2,[null,special_objects$0TyName$1$1.tyName_INTINF$232]],null]]];
typescheme_INTINF$227 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$2463)),Type$2463];
initial_con_env$216 = (compiler_objects$0Con$1$2.fromList$679([[compiler_objects$0Con$1$1.con_TRUE$127,typescheme_TRUE$217],[[compiler_objects$0Con$1$1.con_FALSE$128,typescheme_FALSE$218],[[compiler_objects$0Con$1$1.con_NIL$129,typescheme_NIL$219],[[compiler_objects$0Con$1$1.con_CONS$130,typescheme_CONS$221],[[compiler_objects$0Con$1$1.con_QUOTE$131,typescheme_QUOTE$223],[[compiler_objects$0Con$1$1.con_ANTIQUOTE$132,typescheme_ANTIQUOTE$225],[[compiler_objects$0Con$1$1.con_INTINF$133,typescheme_INTINF$227],null]]]]]]]));
var initial_tyname_env$228 = special_objects$0TyName$1$2.fromList$1575([[special_objects$0TyName$1$1.tyName_BOOL$212,[compiler_objects$0Con$1$1.con_TRUE$127,[compiler_objects$0Con$1$1.con_FALSE$128,null]]],[[special_objects$0TyName$1$1.tyName_INT31$216,null],[[special_objects$0TyName$1$1.tyName_INT32$220,null],[[special_objects$0TyName$1$1.tyName_INT63$224,null],[[special_objects$0TyName$1$1.tyName_INT64$228,null],[[special_objects$0TyName$1$1.tyName_INTINF$232,[compiler_objects$0Con$1$1.con_INTINF$133,null]],[[special_objects$0TyName$1$1.tyName_WORD8$236,null],[[special_objects$0TyName$1$1.tyName_WORD31$240,null],[[special_objects$0TyName$1$1.tyName_WORD32$244,null],[[special_objects$0TyName$1$1.tyName_WORD63$248,null],[[special_objects$0TyName$1$1.tyName_WORD64$252,null],[[special_objects$0TyName$1$1.tyName_REAL$256,null],[[special_objects$0TyName$1$1.tyName_F64$260,null],[[special_objects$0TyName$1$1.tyName_STRING$264,null],[[special_objects$0TyName$1$1.tyName_CHAR$268,null],[[special_objects$0TyName$1$1.tyName_LIST$272,[compiler_objects$0Con$1$1.con_NIL$129,[compiler_objects$0Con$1$1.con_CONS$130,null]]],[[special_objects$0TyName$1$1.tyName_FRAG$276,[compiler_objects$0Con$1$1.con_QUOTE$131,[compiler_objects$0Con$1$1.con_ANTIQUOTE$132,null]]],[[special_objects$0TyName$1$1.tyName_CHARARRAY$292,null],[[special_objects$0TyName$1$1.tyName_FOREIGNPTR$296,null],[[special_objects$0TyName$1$1.tyName_ARRAY$284,null],[[special_objects$0TyName$1$1.tyName_VECTOR$288,null],[[special_objects$0TyName$1$1.tyName_REF$280,null],[[special_objects$0TyName$1$1.tyName_EXN$300,null],null]]]]]]]]]]]]]]]]]]]]]]]);
var initial_excon_env$230 = compiler_objects$0Excon$1$2.fromList$651([[compiler_objects$0Excon$1$1.ex_DIV$117,[1]],[[compiler_objects$0Excon$1$1.ex_MATCH$118,[1]],[[compiler_objects$0Excon$1$1.ex_BIND$119,[1]],[[compiler_objects$0Excon$1$1.ex_OVERFLOW$120,[1]],[[compiler_objects$0Excon$1$1.ex_INTERRUPT$121,[1]],[[compiler_objects$0Excon$1$1.ex_SUBSCRIPT$122,[1]],[[compiler_objects$0Excon$1$1.ex_SIZE$123,[1]],null]]]]]]]);
var ftv_initial$231 = compiler_objects$0Con$1$2.fold$790(function(v$235){var v$236 = v$235[0];
var v$237 = v$235[1];
var t$5092 = tools$0NatSet$1.union$664;
var t$5091;
var v$2465 = v$236[0];
var v$2466 = v$236[1];
t$5091 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$2466),tools$0NatSet$1.fromList$614(v$2465)));
return t$5092(t$5091,v$237);
},compiler_objects$0Lvars$1$2.fold$928(function(v$241){var v$242 = v$241[0];
var v$243 = v$241[1];
var t$5090 = tools$0NatSet$1.union$664;
var t$5089;
var v$2468 = v$242[0];
var v$2469 = v$242[1];
t$5089 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$2469),tools$0NatSet$1.fromList$614(v$2468)));
return t$5090(t$5089,v$243);
},compiler_objects$0Excon$1$2.fold$762(function(v$250){var v$251 = v$250[0];
switch (v$251[0]) { case 0: {var v$253 = v$251[1];
var v$254 = v$250[1];
return tools$0NatSet$1.union$664(ftv_Type$155(v$253),v$254);
 break; }default: {return v$250[1];
} };
},null,initial_excon_env$230),compiler_objects$0Lvars$1$2.empty$502(0)),initial_con_env$216);
compiler0$0LambdaStatSem$1.initial$256 = [initial_con_env$216,initial_excon_env$230,ftv_initial$231,compiler_objects$0Lvars$1$2.empty$502(0),initial_tyname_env$228];
compiler0$0LambdaStatSem$1.plus$262 = function(v$280,v$4985){var v$281 = v$280[2];
var v$282 = v$280[0];
var v$283 = v$280[4];
var v$284 = v$280[3];
var v$285 = v$280[1];
var v$287 = v$4985[2];
var v$288 = v$4985[0];
var v$289 = v$4985[4];
var v$290 = v$4985[3];
var v$291 = v$4985[1];
var v$275 = tools$0NatSet$1.union$664(v$281,v$287);
var v$276 = compiler_objects$0Con$1$2.plus$565(v$282,v$288);
var v$277 = special_objects$0TyName$1$2.plus$1461(v$283,v$289);
var v$278 = compiler_objects$0Lvars$1$2.plus$703(v$284,v$290);
return [v$276,compiler_objects$0Excon$1$2.plus$537(v$285,v$291),v$275,v$278,v$277];
};
compiler0$0LambdaStatSem$1.layout_env$590 = function(v$602,v$605,v$4986,v$604,v$603){var t$5093;
var v$599 = [0,"; "];
t$5093 = [[(((compiler_objects$0Con$1$2.layoutMap$996(" -> ","}",", ","ConEnv: {"))(function(con$2596){return [1,con$2596[1]];
}))(function(v$2597){var v$2598 = v$2597[0];
var v$2599 = v$2597[1];
var t$5100;
var v$2600 = [2,"."];
var t$5104;
var t$5103;
var t$5102;
var t$5101;
var v$2607 = [0,","];
t$5101 = [basis$0List$1.map$697(function(x$4773){var v$4774 = compiler_objects$0LambdaExp$1$4.pr_tyvar$1581(x$4773);
return [1,v$4774];
},v$2598),v$2607,")",0,"("];
t$5102 = [0,t$5101];
t$5103 = [t$5102,[compiler_objects$0LambdaExp$1$4.layoutType$2999(v$2599),null]];
t$5104 = t$5103;
t$5100 = [t$5104,v$2600,"",0,"\\/"];
return [0,t$5100];
}))(v$602),[(((special_objects$0TyName$1$2.layoutMap$1892(" -> ","}",", ","TyNameEnv: {"))(function(tyname$2609){return [1,special_objects$0TyName$1$1.pr_TyName$333(tyname$2609[0],tyname$2609[1],tyname$2609[2],tyname$2609[3],tyname$2609[4],tyname$2609[5])];
}))(function(cons$2610){var t$5099;
var v$2611 = [0,","];
t$5099 = [basis$0List$1.map$697(function(con$2612){return [1,con$2612[1]];
},cons$2610),v$2611,"]",0,"["];
return [0,t$5099];
}))(v$603),[(((compiler_objects$0Lvars$1$2.layoutMap$1134(" -> ","}",", ","LvarEnv: {"))(function(lvar$2614){return [1,compiler_objects$0Lvars$1$1.pr_lvar$78(lvar$2614[0],lvar$2614[1],lvar$2614[2],lvar$2614[3],lvar$2614[4],lvar$2614[5])];
}))(function(v$2615){var v$2616 = v$2615[0];
var v$2617 = v$2615[1];
var t$5094;
var v$2618 = [2,"."];
var t$5098;
var t$5097;
var t$5096;
var t$5095;
var v$2625 = [0,","];
t$5095 = [basis$0List$1.map$697(function(x$4777){var v$4778 = compiler_objects$0LambdaExp$1$4.pr_tyvar$1581(x$4777);
return [1,v$4778];
},v$2616),v$2625,")",0,"("];
t$5096 = [0,t$5095];
t$5097 = [t$5096,[compiler_objects$0LambdaExp$1$4.layoutType$2999(v$2617),null]];
t$5098 = t$5097;
t$5094 = [t$5098,v$2618,"",0,"\\/"];
return [0,t$5094];
}))(v$604),[(((compiler_objects$0Excon$1$2.layoutMap$968(" -> ","}",", ","ExConEnv: {"))(function(excon$2627){return [1,excon$2627[1]];
}))(function(v$2628){switch (v$2628[0]) { case 0: {var v$2629 = v$2628[1];
return compiler_objects$0LambdaExp$1$4.layoutType$2999(v$2629);
 break; }default: {return [1,"NONE"];
} };
}))(v$605),null]]]],v$599,"]",2,"LambdaStatEnv: ["];
return [0,t$5093];
};
compiler0$0LambdaStatSem$1.restrict$606 = function(v$696,v$4987){var v$697 = v$696[2];
var v$698 = v$696[0];
var v$699 = v$696[4];
var v$700 = v$696[3];
var v$701 = v$696[1];
var v$703 = v$4987[0];
var v$704 = v$4987[3];
var v$705 = v$4987[2];
var v$706 = v$4987[1];
if (tools$0NatSet$1.isEmpty$598(v$697)) {0;
} else {basis$0General$1.print$163("Restrict: Problem with set of free type variables\n");
basis$0General$1.print$163("not being empty. Here is the environment: \n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5064){return basis$0General$1.print$163(v$5064);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
basis$0General$1.print$163("Non-empty set is:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5065){return basis$0General$1.print$163(v$5065);
},((tools$0NatSet$1.layoutSet$740("}",",","{"))(function(x$2649){var v$4780 = compiler_objects$0LambdaExp$1$4.pr_tyvar$1581(x$2649);
return [1,v$4780];
}))(v$697),tools$0Flags$1$1.colwidth$100[0]]);
tools$0Crash$1.impossible$59("LambdaStatSem.restrict.ftvset not empty");
};
var con_env1$647;
try {con_env1$647 = (compiler_objects$0Con$1$2.restrict$916(function(v$2652){return v$2652[1];
},v$698,v$703));
} catch(v$5105) {con_env1$647 = ((function(v$651){var t$5106 = v$651;
if (t$5106[0] == compiler_objects$0Con$1$2.en$Restrict$915) {var s$648 = v$651[1];
var s$2653 = "Problem with constructor environment; constructor " + s$648;
basis$0General$1.print$163(s$2653 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5066){return basis$0General$1.print$163(v$5066);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$651;
};
})(v$5105));
};
var tyname_env1$658;
try {tyname_env1$658 = (special_objects$0TyName$1$2.restrict$1812(function(v$4988){return special_objects$0TyName$1$1.pr_TyName$333(v$4988[0],v$4988[1],v$4988[2],v$4988[3],v$4988[4],v$4988[5]);
},v$699,v$704));
} catch(v$5107) {tyname_env1$658 = ((function(v$662){var t$5108 = v$662;
if (t$5108[0] == special_objects$0TyName$1$2.en$Restrict$1811) {var s$659 = v$662[1];
var s$2661 = "Problem with tyname environment; tyname " + s$659;
basis$0General$1.print$163(s$2661 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5067){return basis$0General$1.print$163(v$5067);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$662;
};
})(v$5107));
};
var lvar_env1$669;
try {lvar_env1$669 = (compiler_objects$0Lvars$1$2.restrict$1054(function(v$4989){return compiler_objects$0Lvars$1$1.pr_lvar$78(v$4989[0],v$4989[1],v$4989[2],v$4989[3],v$4989[4],v$4989[5]);
},v$700,v$705));
} catch(v$5109) {lvar_env1$669 = ((function(v$673){var t$5110 = v$673;
if (t$5110[0] == compiler_objects$0Lvars$1$2.en$Restrict$1053) {var s$670 = v$673[1];
var s$2669 = "Problem with lvar environment; lvar " + s$670;
basis$0General$1.print$163(s$2669 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5068){return basis$0General$1.print$163(v$5068);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$673;
};
})(v$5109));
};
var t$5114 = con_env1$647;
var t$5112;
try {t$5112 = (compiler_objects$0Excon$1$2.restrict$888(function(v$2677){return v$2677[1];
},v$701,v$706));
} catch(v$5111) {t$5112 = ((function(v$684){var t$5113 = v$684;
if (t$5113[0] == compiler_objects$0Excon$1$2.en$Restrict$887) {var s$681 = v$684[1];
var s$2678 = "Problem with excon environment; excon " + s$681;
basis$0General$1.print$163(s$2678 + "\n");
basis$0General$1.print$163("is not in the domain of the environment:\n");
tools$0PrettyPrint$1.outputTree$1072([function(v$5069){return basis$0General$1.print$163(v$5069);
},compiler0$0LambdaStatSem$1.layout_env$590(v$696[0],v$696[1],v$696[2],v$696[3],v$696[4]),tools$0Flags$1$1.colwidth$100[0]]);
return tools$0Crash$1.impossible$59("LambdaStatSem.restrict");
} else {throw v$684;
};
})(v$5111));
};
return [t$5114,t$5112,v$697,lvar_env1$669,tyname_env1$658];
};
compiler0$0LambdaStatSem$1.enrich$707 = function(v$709){return true;
};
compiler0$0LambdaStatSem$1.pu$710;
var pu_f$743 = tools$0NatSet$1.pu$771(compiler_objects$0LambdaExp$1$4.pu_tyvar$5116);
var pu_ce$744 = compiler_objects$0Con$1$2.pu$1097(compiler_objects$0Con$1$1.pu$135,compiler_objects$0LambdaExp$1$4.pu_TypeScheme$5121);
var pu_te$745 = special_objects$0TyName$1$2.pu$1993(special_objects$0TyName$1$1.pu$426,pickle$0pickle$1.listGen$2109(compiler_objects$0Con$1$1.pu$135));
var pu_le$746 = compiler_objects$0Lvars$1$2.pu$1235(compiler_objects$0Lvars$1$3.pu$2007,compiler_objects$0LambdaExp$1$4.pu_TypeScheme$5121);
var pu_ee$747 = compiler_objects$0Excon$1$2.pu$1069(compiler_objects$0Excon$1$1.pu$125,pickle$0pickle$1.optionGen$2134(compiler_objects$0LambdaExp$1$4.pu_Type$5118));
var b$2687 = pickle$0pickle$1.pairGen0$983((pickle$0pickle$1.convert0$2299(function(v$2696){var v$2697 = v$2696[0];
var v$2698 = v$2697[0];
var v$2699 = v$2697[1];
var v$2700 = v$2696[1];
return [v$2698,v$2699,v$2700[0],v$2700[1]];
},function(v$2701){return [[v$2701[0],v$2701[1]],[v$2701[2],v$2701[3]]];
}))(pickle$0pickle$1.pairGen0$983(pickle$0pickle$1.pairGen0$983(pu_f$743,pu_ce$744),pickle$0pickle$1.pairGen0$983(pu_te$745,pu_le$746))),pu_ee$747);
compiler0$0LambdaStatSem$1.pu$710 = (pickle$0pickle$1.shareGen$878((pickle$0pickle$1.convert0$2299(function(v$5061){var v$5062 = v$5061[0];
return [v$5062[1],v$5061[1],v$5062[0],v$5062[3],v$5062[2]];
},function(v$5063){return [[v$5063[2],v$5063[0],v$5063[4],v$5063[3]],v$5063[1]];
}))(b$2687)));
var fix$5115 = {};
fix$5115.$valid_t = function(e$752,ty$755){switch (ty$755[0]) { case 2: {var v$785 = ty$755[1];
var v$786 = v$785[0];
var v$787 = v$785[1];
var v$2703 = e$752[4];
var v$2705 = special_objects$0TyName$1$2.lookup$1411(v$2703,v$787);
switch (v$2705[0]) { case 0: {v$2705[1];
 break; }default: {var s$2706 = "lookup_tyname.Cannot find " + (special_objects$0TyName$1$1.pr_TyName$333(v$787[0],v$787[1],v$787[2],v$787[3],v$787[4],v$787[5]));
tools$0Crash$1.impossible$59("LambdaStatSem." + s$2706);
} };
return fix$5115.$valid_ts(e$752,v$786);
 break; }case 3: {var v$779 = ty$755[1];
var v$780 = v$779[0];
var v$781 = v$779[1];
fix$5115.$valid_ts(e$752,v$780);
return fix$5115.$valid_ts(e$752,v$781);
 break; }case 0: {var v$775 = ty$755[1];
if (tools$0NatSet$1.member$591(v$775,e$752[2])) {return 0;
} else {var s$2711 = "valid_t.non-bound type variable " + (compiler_objects$0LambdaExp$1$4.pr_tyvar$1581(v$775));
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$2711);
};
 break; }default: {var v$788 = ty$755[1];
return fix$5115.$valid_ts(e$752,v$788);
} };
};
fix$5115.$valid_ts = function(v$791,v$794){if (v$794 == null) {return 0;
} else {var v$808 = v$794;
var v$809 = v$808[0];
var v$810 = v$808[1];
fix$5115.$valid_t(v$791,v$809);
return fix$5115.$valid_ts(v$791,v$810);
};
};
var valid_t$749 = fix$5115.$valid_t;
var valid_ts$748 = fix$5115.$valid_ts;
var valid_s$811 = function(v$4990,v$4991,v$4992,v$4993,v$4994){return function(v$818){var v$827 = v$818[0];
var v$828 = v$818[1];
var s$819 = compiler_objects$0LambdaExp$1$4.tyvars_Type$6017(null,v$828,null);
var fix$5116 = {};
fix$5116.$app = function(v$2717){lab$app: while (true) {if (v$2717 == null) {return 0;
} else {var v$2718 = v$2717;
var v$2719 = v$2718[0];
var v$2720 = v$2718[1];
if (tools$0NatSet$1.member$591(v$2719,s$819)) {0;
} else {var s$4791;
var t$5125 = ("valid_s.Type variable " + (compiler_objects$0LambdaExp$1$4.pr_tyvar$1581(v$2719))) + " not in ";
var t$5124;
var st$4793;
var t$5117;
var v$4796 = [2,"."];
var t$5123;
var t$5122;
var t$5121;
var t$5118;
var v$4797 = [0,","];
t$5118 = [basis$0List$1.map$697((function(env$5120){return function(x$4798){var v$5119 = env$5120[0];
var v$4799 = v$5119(x$4798);
return [1,v$4799];
};
})([compiler_objects$0LambdaExp$1$4.pr_tyvar$1581]),v$827),v$4797,")",0,"("];
t$5121 = [0,t$5118];
t$5122 = [t$5121,[compiler_objects$0LambdaExp$1$4.layoutType$2999(v$828),null]];
t$5123 = t$5122;
t$5117 = [t$5123,v$4796,"",0,"\\/"];
st$4793 = [0,t$5117];
t$5124 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4793)));
s$4791 = (t$5125 + t$5124);
tools$0Crash$1.impossible$59("LambdaStatSem." + s$4791);
};
var t$5126 = v$2720;
var v$2717 = t$5126;
continue lab$app;
};
};
};
var app$2716 = fix$5116.$app;
app$2716(v$827);
return valid_t$749([v$4990,v$4991,tools$0NatSet$1.addList$615(v$827,v$4992),v$4993,v$4994],v$828);
};
};
var eqType$844 = function(s$847,v$851){var v$870 = v$851[0];
var v$871 = v$851[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$870,v$871)) {return 0;
} else {basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"--------------------------------\n");
var s$2734 = ("Error in lambda type checking (" + s$847) + "):\n";
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2734);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"The type\n");
var stringtree$2738 = compiler_objects$0LambdaExp$1$4.layoutType$2999(v$870);
tools$0PrettyPrint$1.outputTree$1072([function(s$2739){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2739);
},stringtree$2738,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"is not compatible with type\n");
var stringtree$2741 = compiler_objects$0LambdaExp$1$4.layoutType$2999(v$871);
tools$0PrettyPrint$1.outputTree$1072([function(s$2742){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$2742);
},stringtree$2741,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"--------------------------------\n");
return tools$0Crash$1.impossible$59("LambdaStatSem.eqType");
};
};
var unit_Type$910 = [1,null];
var type_switch$999 = function(type_lexp$1002,get_tyname$1005,v$1008){var v$1098 = v$1008[1];
var v$1099 = v$1098[0];
var v$1100 = v$1098[1];
var v$1101 = v$1098[2];
var tyname$1016;
var v$1024 = type_lexp$1002(v$1099);
switch (v$1024[0]) { case 0: {var v$1026 = v$1024[1];
if (v$1026 == null) {tyname$1016 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind"));
} else {var v$1028 = v$1026;
var v$1029 = v$1028[0];
switch (v$1029[0]) { case 2: {tyname$1016 = ((v$1028[1] == null)?v$1029[1][1]:(tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind")));
 break; }default: {tyname$1016 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind"));
} };
};
 break; }default: {tyname$1016 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH.Wrong typelist kind"));
} };
var fix$5127 = {};
fix$5127.$check = function(v$1038,v$1041,v$1044){lab$check: while (true) {switch (v$1041[0]) { case 0: {switch (v$1044[0]) { case 1: {var v$1065 = v$1041[1];
var t$5128 = v$1038;
var t$5129 = [1];
var t$5130 = [0,type_lexp$1002(v$1065)];
var v$1038 = t$5128;
var v$1041 = t$5129;
var v$1044 = t$5130;
continue lab$check;
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.check. error");
} };
 break; }default: {if (v$1038 == null) {switch (v$1044[0]) { case 0: {return v$1044[1];
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.check. error");
} };
} else {var v$1089 = v$1038;
var v$1090 = v$1089[0];
var v$1091 = v$1090[0];
var v$1092 = v$1090[1];
var v$1093 = v$1089[1];
var tn$1071 = get_tyname$1005(v$1091);
var tl$1072 = type_lexp$1002(v$1092);
var t$5131;
var v$2813 = tn$1071[2];
var v$2814 = tyname$1016[2];
var v$2815 = v$2813[0][1];
var v$2816 = v$2814[0][1];
t$5131 = ((v$2815[0] == v$2816[0])?(v$2815[1] == v$2816[1]):false);
if (t$5131) {switch (v$1044[0]) { case 0: {var v$1083 = v$1044[1];
var t$5135 = v$1093;
var t$5134 = [1];
var t$5133;
var t$5132;
switch (tl$1072[0]) { case 0: {switch (v$1083[0]) { case 0: {var v$2820 = tl$1072[1];
var v$2821 = v$1083[1];
t$5132 = ((compiler_objects$0LambdaBasics$1.eq_Types$2576(v$2820,v$2821))?tl$1072:(tools$0Crash$1.impossible$59("LambdaStatSem.lub. Types vs. Types")));
 break; }default: {switch (v$1083[0]) { case 1: {t$5132 = tl$1072;
 break; }default: {t$5132 = (tools$0Crash$1.impossible$59("LambdaStatSem.lub. not defined for these args"));
} };
} };
 break; }case 1: {t$5132 = v$1083;
 break; }default: {switch (v$1083[0]) { case 1: {t$5132 = tl$1072;
 break; }default: {t$5132 = (tools$0Crash$1.impossible$59("LambdaStatSem.lub. not defined for these args"));
} };
} };
t$5133 = [0,t$5132];
var t$5136 = t$5135;
var t$5137 = t$5134;
var t$5138 = t$5133;
var v$1038 = t$5136;
var v$1041 = t$5137;
var v$1044 = t$5138;
continue lab$check;
 break; }default: {var t$5139 = v$1093;
var t$5140 = [1];
var t$5141 = [0,tl$1072];
var v$1038 = t$5139;
var v$1041 = t$5140;
var v$1044 = t$5141;
continue lab$check;
} };
} else {var save_flag$1084 = (tools$0Flags$1$6.lookup_flag_entry$5194("print_type_name_stamps"))[0];
((tools$0Flags$1$6.lookup_flag_entry$5194("print_type_name_stamps"))[0] = true,0);
var tn_s$1085 = special_objects$0TyName$1$1.pr_TyName$333(tn$1071[0],tn$1071[1],tn$1071[2],tn$1071[3],tn$1071[4],tn$1071[5]);
var tyname_s$1086 = special_objects$0TyName$1$1.pr_TyName$333(tyname$1016[0],tyname$1016[1],tyname$1016[2],tyname$1016[3],tyname$1016[4],tyname$1016[5]);
((tools$0Flags$1$6.lookup_flag_entry$5194("print_type_name_stamps"))[0] = save_flag$1084,0);
var s$2829 = ((("SWITCH.wrong tyname; the type names " + tn_s$1085) + " and ") + tyname_s$1086) + " disagree";
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$2829);
};
};
} };
};
};
var check$1035 = fix$5127.$check;
return check$1035(v$1100,v$1101,[1]);
};
var en$AbortExp$1102 = new String("AbortExp");
var exn$AbortExp$1102 = [en$AbortExp$1102];
var fix$5142 = {};
fix$5142.$type_prim = function(env$1107,prim$1110,lexps$1113){switch (prim$1110[0]) { case 14: {var v$1738 = prim$1110[1];
var v$1739 = v$1738[0];
var v$1740 = v$1738[1];
valid_ts$748(env$1107,v$1740);
if (lexps$1113 == null) {var t$5272;
var t$5271;
var v$3203 = env$1107[0];
var v$4399;
var v$3205 = compiler_objects$0Con$1$2.lookup$515(v$3203,v$1739);
switch (v$3205[0]) { case 0: {v$4399 = v$3205[1];
 break; }default: {var s$3206 = "lookup_con.Cannot find " + v$1739[1];
v$4399 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3206));
} };
var v$3197 = v$4399[0];
var v$3198 = v$4399[1];
var S$3200 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3201){return "mk_instance";
},[v$3197,v$1740]);
t$5271 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3200,v$3198));
t$5272 = [t$5271,null];
return t$5272;
} else {var v$1709 = lexps$1113;
if (v$1709[1] == null) {var v$1737 = v$1709[0];
var v$1720;
var v$3217 = env$1107[0];
var v$4405;
var v$3219 = compiler_objects$0Con$1$2.lookup$515(v$3217,v$1739);
switch (v$3219[0]) { case 0: {v$4405 = v$3219[1];
 break; }default: {var s$3220 = "lookup_con.Cannot find " + v$1739[1];
v$4405 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3220));
} };
var v$3211 = v$4405[0];
var v$3212 = v$4405[1];
var S$3214 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3215){return "mk_instance";
},[v$3211,v$1740]);
v$1720 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3214,v$3212));
switch (v$1720[0]) { case 3: {var v$1722 = v$1720[1];
var v$1723 = v$1722[0];
if (v$1723 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} else {var v$1725 = v$1723;
if (v$1725[1] == null) {var v$1727 = v$1722[1];
if (v$1727 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} else {var v$1729 = v$1727;
if (v$1729[1] == null) {var v$1734 = v$1725[0];
var v$1735 = v$1729[0];
var ts$1731;
var v$3226 = fix$5142.$type_lexp(env$1107,v$1737);
switch (v$3226[0]) { case 0: {ts$1731 = v$3226[1];
 break; }default: {ts$1731 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.CONprim"));
} };
var fix$5273 = {};
fix$5273.$eqTypes = function(v$4946,v$4995){lab$eqTypes: while (true) {if (v$4946 == null) {if (v$4995 == null) {return 0;
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.eqTypes");
};
} else {if (v$4995 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.eqTypes");
} else {var v$4948 = v$4946;
var v$4949 = v$4948[0];
var v$4950 = v$4948[1];
var v$4951 = v$4995;
var v$4952 = v$4951[0];
var v$4953 = v$4951[1];
eqType$844("CONprim: ",[v$4949,v$4952]);
var t$5274 = v$4950;
var t$5275 = v$4953;
var v$4946 = t$5274;
var v$4995 = t$5275;
continue lab$eqTypes;
};
};
};
};
var eqTypes$4944 = fix$5273.$eqTypes;
eqTypes$4944([v$1734,null],ts$1731);
return [v$1735,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Unary constructor does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.CONprim.Wrong number of args");
};
};
 break; }case 13: {var v$1696 = prim$1110[1];
var v$1697 = v$1696[0];
var v$1698 = v$1696[1];
valid_ts$748(env$1107,v$1698);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Wrong number of args");
} else {var v$1664 = lexps$1113;
if (v$1664[1] == null) {var v$1694 = v$1664[0];
var v$1675;
var v$3260 = env$1107[0];
var v$4429;
var v$3262 = compiler_objects$0Con$1$2.lookup$515(v$3260,v$1697);
switch (v$3262[0]) { case 0: {v$4429 = v$3262[1];
 break; }default: {var s$3263 = "lookup_con.Cannot find " + v$1697[1];
v$4429 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3263));
} };
var v$3254 = v$4429[0];
var v$3255 = v$4429[1];
var S$3257 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3258){return "mk_instance";
},[v$3254,v$1698]);
v$1675 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3257,v$3255));
switch (v$1675[0]) { case 3: {var v$1677 = v$1675[1];
var v$1678 = v$1677[0];
if (v$1678 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} else {var v$1680 = v$1678;
if (v$1680[1] == null) {var v$1682 = v$1677[1];
if (v$1682 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} else {var v$1684 = v$1682;
if (v$1684[1] == null) {var v$1691 = v$1680[0];
var v$1692 = v$1684[0];
var ts$1686;
var v$3269 = fix$5142.$type_lexp(env$1107,v$1694);
switch (v$3269[0]) { case 0: {ts$1686 = v$3269[1];
 break; }default: {ts$1686 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.DECONprim0"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576([v$1692,null],ts$1686)) {return [v$1691,null];
} else {var s$3276;
var t$5270;
var t$5269;
var t$5268 = ("DECONprim: " + v$1697[1]) + "; ts = ";
var t$5267;
var st$4873;
var t$5266;
var v$4875 = [0,","];
t$5266 = [basis$0List$1.map$697(function(v$5072){return compiler_objects$0LambdaExp$1$4.layoutType$2999(v$5072);
},ts$1686),v$4875,"]",0,"["];
st$4873 = [0,t$5266];
t$5267 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4873)));
t$5269 = (t$5268 + t$5267);
t$5270 = (t$5269 + "; t2 = ");
var t$5265;
var st$4877 = compiler_objects$0LambdaExp$1$4.layoutType$2999(v$1692);
t$5265 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4877)));
s$3276 = (t$5270 + t$5265);
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$3276);
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Unary constructor does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DECONprim.Wrong number of args");
};
};
 break; }case 8: {var v$1653 = prim$1110[1];
if (lexps$1113 == null) {var t$5264;
var v$3306 = env$1107[1];
var v$3308 = compiler_objects$0Excon$1$2.lookup$487(v$3306,v$1653);
switch (v$3308[0]) { case 0: {t$5264 = v$3308[1];
 break; }default: {var s$3309 = "lookup_excon.Cannot find " + v$1653[1];
t$5264 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3309));
} };
switch (t$5264[0]) { case 1: {return [[2,[null,special_objects$0TyName$1$1.tyName_EXN$300]],null];
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim.Unary excon not fully applied");
} };
} else {var v$1637 = lexps$1113;
if (v$1637[1] == null) {var v$1652 = v$1637[0];
var v$1643;
var v$3315 = env$1107[1];
var v$3317 = compiler_objects$0Excon$1$2.lookup$487(v$3315,v$1653);
switch (v$3317[0]) { case 0: {v$1643 = v$3317[1];
 break; }default: {var s$3318 = "lookup_excon.Cannot find " + v$1653[1];
v$1643 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3318));
} };
switch (v$1643[0]) { case 0: {var v$1651 = v$1643[1];
var ts$1646;
var v$3322 = fix$5142.$type_lexp(env$1107,v$1652);
switch (v$3322[0]) { case 0: {ts$1646 = v$3322[1];
 break; }default: {ts$1646 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.EXCONprim: "));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576([v$1651,null],ts$1646)) {return [[2,[null,special_objects$0TyName$1$1.tyName_EXN$300]],null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim: ");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim.Nullary excon applied to arg.");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EXCONprim.Wrong number of args");
};
};
 break; }case 12: {var v$1624 = prim$1110[1];
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim.Wrong number of args");
} else {var v$1607 = lexps$1113;
if (v$1607[1] == null) {var v$1622 = v$1607[0];
var v$1613;
var v$3338 = env$1107[1];
var v$3340 = compiler_objects$0Excon$1$2.lookup$487(v$3338,v$1624);
switch (v$3340[0]) { case 0: {v$1613 = v$3340[1];
 break; }default: {var s$3341 = "lookup_excon.Cannot find " + v$1624[1];
v$1613 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3341));
} };
switch (v$1613[0]) { case 0: {var v$1621 = v$1613[1];
var ts$1616;
var v$3345 = fix$5142.$type_lexp(env$1107,v$1622);
switch (v$3345[0]) { case 0: {ts$1616 = v$3345[1];
 break; }default: {ts$1616 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.DEEXCONprim: "));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1616,[[2,[null,special_objects$0TyName$1$1.tyName_EXN$300]],null])) {return [v$1621,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim: ");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim.Unary excon does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEEXCONprim.Wrong number of args");
};
};
 break; }case 5: {return [[1,basis$0List$1.map$697(function(x$3365){var v$4954 = fix$5142.$type_lexp(env$1107,x$3365);
switch (v$4954[0]) { case 0: {var v$4955 = v$4954[1];
if (v$4955 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.RECORDprim");
} else {var v$4956 = v$4955;
if (v$4956[1] == null) {return v$4956[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.RECORDprim");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.RECORDprim");
} };
},lexps$1113)],null];
 break; }case 1: {var v$1597 = prim$1110[1];
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Wrong number of args.");
} else {var v$1574 = lexps$1113;
if (v$1574[1] == null) {var v$1595 = v$1574[0];
var v$1583 = fix$5142.$type_lexp(env$1107,v$1595);
switch (v$1583[0]) { case 0: {var v$1585 = v$1583[1];
if (v$1585 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
} else {var v$1587 = v$1585;
var v$1588 = v$1587[0];
switch (v$1588[0]) { case 1: {if (v$1587[1] == null) {var v$1593 = v$1588[1];
try {var t$5263;
var t$5262;
var fix$5259 = {};
fix$5259.$h = function(v$3374,v$3375){lab$h: while (true) {if (v$3374 == null) {throw CompilerInitial.exn$Subscript$52;
} else {var v$3376 = v$3374;
var v$3377 = v$3376[0];
var v$3378 = v$3376[1];
if (v$3375 == 0) {return v$3377;
} else {var t$5260 = v$3378;
var t$5261 = SmlPrims.chk_ovf_i32(v$3375 - 1);
var v$3374 = t$5260;
var v$3375 = t$5261;
continue lab$h;
};
};
};
};
var h$3373 = fix$5259.$h;
if (v$1597 < 0) {throw CompilerInitial.exn$Subscript$52;
} else {t$5262 = (h$3373(v$1593,v$1597));
};
t$5263 = [t$5262,null];
return t$5263;
} catch(v$5258) {return (function(v$1592){return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Index out of range");
})(v$5258);
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Arg not of record type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.SELECTprim.Wrong number of args.");
};
};
 break; }case 0: {return basis$0List$1.map$697(function(x$3402){var v$4960 = fix$5142.$type_lexp(env$1107,x$3402);
switch (v$4960[0]) { case 0: {var v$4961 = v$4960[1];
if (v$4961 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.UB_RECORDprim");
} else {var v$4962 = v$4961;
if (v$4962[1] == null) {return v$4962[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.UB_RECORDprim");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.UB_RECORDprim");
} };
},lexps$1113);
 break; }case 11: {var v$1564 = prim$1110[1];
var v$1565 = v$1564[0];
valid_t$749(env$1107,v$1565);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong number of args");
} else {var v$1537 = lexps$1113;
if (v$1537[1] == null) {var v$1562 = v$1537[0];
switch (v$1565[0]) { case 2: {var v$1548 = v$1565[1];
var v$1549 = v$1548[0];
if (v$1549 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong instance");
} else {var v$1551 = v$1549;
if (v$1551[1] == null) {var v$1559 = v$1551[0];
var ts$1554;
var v$3408 = fix$5142.$type_lexp(env$1107,v$1562);
switch (v$3408[0]) { case 0: {ts$1554 = v$3408[1];
 break; }default: {ts$1554 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.DEREFprim"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1554,[v$1565,null])) {return [v$1559,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong instance");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong instance");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DEREFprim.Wrong number of args");
};
};
 break; }case 4: {var v$1524 = prim$1110[1];
var v$1525 = v$1524[0];
var typescheme_REF$1480;
var tyvar$1481 = compiler_objects$0LambdaExp$1$4.fresh_tyvar$1602(0);
var Type$3432 = [3,[[[0,tyvar$1481],null],[[2,[[[0,tyvar$1481],null],special_objects$0TyName$1$1.tyName_REF$280]],null]]];
typescheme_REF$1480 = [tools$0NatSet$1.list$613(ftv_Type$155(Type$3432)),Type$3432];
valid_t$749(env$1107,v$1525);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.Wrong number of args");
} else {var v$1491 = lexps$1113;
if (v$1491[1] == null) {var v$1522 = v$1491[0];
var v$1502;
var v$4546 = [v$1525,null];
var v$3437 = typescheme_REF$1480[0];
var v$3438 = typescheme_REF$1480[1];
var S$3440 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3441){return "mk_instance";
},[v$3437,v$4546]);
v$1502 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3440,v$3438));
switch (v$1502[0]) { case 3: {var v$1504 = v$1502[1];
var v$1505 = v$1504[0];
if (v$1505 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} else {var v$1507 = v$1505;
if (v$1507[1] == null) {var v$1509 = v$1504[1];
if (v$1509 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} else {var v$1511 = v$1509;
if (v$1511[1] == null) {var v$1519 = v$1507[0];
var v$1520 = v$1511[0];
var ts$1514;
var v$3445 = fix$5142.$type_lexp(env$1107,v$1522);
switch (v$3445[0]) { case 0: {ts$1514 = v$3445[1];
 break; }default: {ts$1514 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.REFprim"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1514,[v$1519,null])) {return [v$1520,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.type scheme for ref does not have arrow type");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.REFprim.Wrong number of args");
};
};
 break; }case 17: {var v$1477 = prim$1110[1];
var v$1478 = v$1477[0];
valid_t$749(env$1107,v$1478);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong number of args");
} else {var v$1423 = lexps$1113;
var v$1424 = v$1423[1];
if (v$1424 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong number of args");
} else {var v$1426 = v$1424;
if (v$1426[1] == null) {var v$1474 = v$1423[0];
var v$1475 = v$1426[0];
switch (v$1478[0]) { case 1: {var v$1442 = v$1478[1];
if (v$1442 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1444 = v$1442;
var v$1445 = v$1444[0];
switch (v$1445[0]) { case 2: {var v$1447 = v$1445[1];
var v$1448 = v$1447[0];
if (v$1448 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1450 = v$1448;
if (v$1450[1] == null) {var v$1452 = v$1444[1];
if (v$1452 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} else {var v$1454 = v$1452;
if (v$1454[1] == null) {var v$1470 = v$1450[0];
var v$1471 = v$1447[1];
var v$1472 = v$1454[0];
var ts1$1456;
var v$3480 = fix$5142.$type_lexp(env$1107,v$1474);
switch (v$3480[0]) { case 0: {ts1$1456 = v$3480[1];
 break; }default: {ts1$1456 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.ASSIGNprim1"));
} };
var ts2$1457;
var v$3488 = fix$5142.$type_lexp(env$1107,v$1475);
switch (v$3488[0]) { case 0: {ts2$1457 = v$3488[1];
 break; }default: {ts2$1457 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.ASSIGNprim2"));
} };
if ((compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1470,v$1472))?((compiler_objects$0LambdaBasics$1.eq_Types$2576(ts1$1456,[[2,[[v$1470,null],v$1471]],null]))?(compiler_objects$0LambdaBasics$1.eq_Types$2576(ts2$1457,[v$1472,null])):false):false) {return [unit_Type$910,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim3");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
};
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong instance kind");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.ASSIGNprim.Wrong number of args");
};
};
};
 break; }case 10: {if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.DROPprim -- one parameter expected");
} else {var v$1405 = lexps$1113;
if (v$1405[1] == null) {var v$1409 = v$1405[0];
fix$5142.$type_lexp(env$1107,v$1409);
return null;
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.DROPprim -- one parameter expected");
};
};
 break; }case 9: {var v$1396 = prim$1110[1];
var v$1397 = v$1396[0];
valid_t$749(env$1107,v$1397);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong number of args");
} else {var v$1354 = lexps$1113;
var v$1355 = v$1354[1];
if (v$1355 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong number of args");
} else {var v$1357 = v$1355;
if (v$1357[1] == null) {var v$1393 = v$1354[0];
var v$1394 = v$1357[0];
switch (v$1397[0]) { case 1: {var v$1369 = v$1397[1];
if (v$1369 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
} else {var v$1371 = v$1369;
var v$1372 = v$1371[1];
if (v$1372 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
} else {var v$1374 = v$1372;
if (v$1374[1] == null) {var v$1390 = v$1371[0];
var v$1391 = v$1374[0];
var ts1$1376;
var v$3540 = fix$5142.$type_lexp(env$1107,v$1393);
switch (v$3540[0]) { case 0: {ts1$1376 = v$3540[1];
 break; }default: {ts1$1376 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.EQUALprim1"));
} };
var ts2$1377;
var v$3548 = fix$5142.$type_lexp(env$1107,v$1394);
switch (v$3548[0]) { case 0: {ts2$1377 = v$3548[1];
 break; }default: {ts2$1377 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.EQUALprim2"));
} };
if ((compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1390,v$1391))?((compiler_objects$0LambdaBasics$1.eq_Types$2576(ts1$1376,[v$1390,null]))?(compiler_objects$0LambdaBasics$1.eq_Types$2576(ts2$1377,[v$1391,null])):false):false) {return [[2,[null,special_objects$0TyName$1$1.tyName_BOOL$212]],null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim3");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
};
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong instance kind");
} };
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.EQUALprim.Wrong number of args");
};
};
};
 break; }case 15: {var v$1337 = prim$1110[1];
var v$1338 = v$1337[2];
var v$1339 = v$1337[1];
var v$1340 = v$1337[3];
var v$1341 = v$1337[0];
valid_ts$748(env$1107,v$1339);
(valid_s$811(env$1107[0],env$1107[1],env$1107[2],env$1107[3],env$1107[4]))([v$1340,v$1341]);
var v$1238;
var S$3583 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$3584){return "mk_instance";
},[v$1340,v$1339]);
v$1238 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$3583,v$1341));
switch (v$1238[0]) { case 3: {var v$1334 = v$1238[1];
var v$1335 = v$1334[0];
var v$1336 = v$1334[1];
var ts$1240 = basis$0List$1.map$697(function(x$3588){var v$4966 = fix$5142.$type_lexp(env$1107,x$3588);
switch (v$4966[0]) { case 0: {var v$4967 = v$4966[1];
if (v$4967 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.CCALL");
} else {var v$4968 = v$4967;
if (v$4968[1] == null) {return v$4968[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.CCALL");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.CCALL");
} };
},lexps$1113);
var ts_res$1241;
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1240,v$1335)) {ts_res$1241 = v$1336;
} else {var s$3589 = ("c function " + v$1338) + " expected types:\n";
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3589);
var stringtree$3592;
var t$5246;
var v$3599 = [0,","];
t$5246 = [basis$0List$1.map$697(function(v$5073){return compiler_objects$0LambdaExp$1$4.layoutType$2999(v$5073);
},v$1335),v$3599,"]",0,"["];
stringtree$3592 = [0,t$5246];
tools$0PrettyPrint$1.outputTree$1072([function(s$3593){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3593);
},stringtree$3592,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"but found types:\n");
var stringtree$3601;
var t$5247;
var v$3608 = [0,","];
t$5247 = [basis$0List$1.map$697(function(v$5074){return compiler_objects$0LambdaExp$1$4.layoutType$2999(v$5074);
},ts$1240),v$3608,"]",0,"["];
stringtree$3601 = [0,t$5247];
tools$0PrettyPrint$1.outputTree$1072([function(s$3602){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3602);
},stringtree$3601,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
ts_res$1241 = (tools$0Crash$1.impossible$59("LambdaStatSem.c function call"));
};
var unboxed_types$1254 = basis$0List$1.s$n$686([compiler_objects$0LambdaExp$1$4.boolType$1710,[compiler_objects$0LambdaExp$1$4.unitType$1717,[compiler_objects$0LambdaExp$1$4.int31Type$1695,[compiler_objects$0LambdaExp$1$4.word31Type$1703,[compiler_objects$0LambdaExp$1$4.int63Type$1697,[compiler_objects$0LambdaExp$1$4.word63Type$1705,[compiler_objects$0LambdaExp$1$4.intDefaultType$1700(0),[compiler_objects$0LambdaExp$1$4.wordDefaultType$1707(0),[compiler_objects$0LambdaExp$1$4.foreignptrType$1711,null]]]]]]]]],(tag_values$64(0))?null:[compiler_objects$0LambdaExp$1$4.int32Type$1696,[compiler_objects$0LambdaExp$1$4.word32Type$1704,null]]);
if ((v$1338 == "id")?true:(v$1338 == "ord")) {if (v$1335 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
} else {var v$1281 = v$1335;
if (v$1281[1] == null) {if (ts_res$1241 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
} else {var v$1285 = ts_res$1241;
if (v$1285[1] == null) {var v$1295 = v$1281[0];
var v$1296 = v$1285[0];
var t$5253;
var t$5252;
var fix$5250 = {};
fix$5250.$exists = function(v$3632){lab$exists: while (true) {if (v$3632 == null) {return false;
} else {var v$3633 = v$3632;
var v$3634 = v$3633[0];
var v$3635 = v$3633[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1295,v$3634)) {return true;
} else {var t$5251 = v$3635;
var v$3632 = t$5251;
continue lab$exists;
};
};
};
};
var exists$3631 = fix$5250.$exists;
t$5252 = (exists$3631(unboxed_types$1254));
if (t$5252) {var fix$5248 = {};
fix$5248.$exists = function(v$3639){lab$exists: while (true) {if (v$3639 == null) {return false;
} else {var v$3640 = v$3639;
var v$3641 = v$3640[0];
var v$3642 = v$3640[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1296,v$3641)) {return true;
} else {var t$5249 = v$3642;
var v$3639 = t$5249;
continue lab$exists;
};
};
};
};
var exists$3638 = fix$5248.$exists;
t$5253 = (exists$3638(unboxed_types$1254));
} else {t$5253 = false;
};
t$5253?0:(tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' is used to cast to or from a boxed type;  it is region-unsafe to   use `id' this way! Rewrite your program!!"));
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
};
};
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `id' does not have a valid type");
};
};
} else {if (v$1338 == "pointer") {if (v$1335 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer' does not have a valid type");
} else {var v$1313 = v$1335;
if (v$1313[1] == null) {if (ts_res$1241 == null) {tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer' does not have a valid type");
} else {var v$1317 = ts_res$1241;
if (v$1317[1] == null) {var v$1327 = v$1313[0];
var v$1328 = v$1317[0];
var t$5257;
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1328,compiler_objects$0LambdaExp$1$4.foreignptrType$1711)) {var t$5256;
var fix$5254 = {};
fix$5254.$exists = function(v$3667){lab$exists: while (true) {if (v$3667 == null) {return false;
} else {var v$3668 = v$3667;
var v$3669 = v$3668[0];
var v$3670 = v$3668[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$1327,v$3669)) {return true;
} else {var t$5255 = v$3670;
var v$3667 = t$5255;
continue lab$exists;
};
};
};
};
var exists$3666 = fix$5254.$exists;
t$5256 = (exists$3666(unboxed_types$1254));
t$5257 = (t$5256?false:true);
} else {t$5257 = false;
};
t$5257?0:(tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer': 'a -> foreignptr is used to cast a boxed object to a pointer;  it is a very region-unsafe operation; the programmer needs to  keep the boxed object live until it can be argued that the  object pointed to is no longer accessed.!!"));
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer' does not have a valid type");
};
};
} else {tools$0Crash$1.impossible$59("LambdaStatSem.c function `pointer' does not have a valid type");
};
};
} else {0;
};
};
return ts_res$1241;
 break; }default: {var s$3686 = ("c function " + v$1338) + " does not have arrow type";
return tools$0Crash$1.impossible$59("LambdaStatSem." + s$3686);
} };
 break; }case 16: {var ts$1218 = basis$0List$1.map$697(function(x$3693){var v$4972 = fix$5142.$type_lexp(env$1107,x$3693);
switch (v$4972[0]) { case 0: {var v$4973 = v$4972[1];
if (v$4973 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.BLOCKF64");
} else {var v$4974 = v$4973;
if (v$4974[1] == null) {return v$4974[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.BLOCKF64");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.BLOCKF64");
} };
},lexps$1113);
var fix$5242 = {};
fix$5242.$app = function(v$3699){lab$app: while (true) {if (v$3699 == null) {return 0;
} else {var v$3700 = v$3699;
var v$3701 = v$3700[0];
var v$3702 = v$3700[1];
if (compiler_objects$0LambdaBasics$1.eq_Type$2577(v$3701,compiler_objects$0LambdaExp$1$4.f64Type$1714)) {0;
} else {var s$3707;
var t$5244 = "wrong blockf64 element type; got ";
var t$5243;
var st$4910 = compiler_objects$0LambdaExp$1$4.layoutType$2999(v$3701);
t$5243 = (tools$0PrettyPrint$1.flatten$936(tools$0PrettyPrint$1.format$937(tools$0Flags$1$1.colwidth$100[0],st$4910)));
s$3707 = (t$5244 + t$5243);
tools$0Crash$1.impossible$59("LambdaStatSem." + s$3707);
};
var t$5245 = v$3702;
var v$3699 = t$5245;
continue lab$app;
};
};
};
var app$3698 = fix$5242.$app;
app$3698(ts$1218);
return [compiler_objects$0LambdaExp$1$4.stringType$1715,null];
 break; }case 2: {return [compiler_objects$0LambdaExp$1$4.stringType$1715,null];
 break; }case 7: {var v$1213 = prim$1110[1];
var v$1214 = v$1213[2];
var v$1215 = v$1213[0];
var v$1216 = v$1213[1];
valid_t$749(env$1107,v$1215);
valid_t$749(env$1107,v$1216);
var arrowType$1199 = [3,[[v$1215,null],[v$1216,null]]];
var ts$1200 = basis$0List$1.map$697(function(x$3713){var v$4978 = fix$5142.$type_lexp(env$1107,x$3713);
switch (v$4978[0]) { case 0: {var v$4979 = v$4978[1];
if (v$4979 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.EXPORT");
} else {var v$4980 = v$4979;
if (v$4980[1] == null) {return v$4980[0];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.EXPORT");
};
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.EXPORT");
} };
},lexps$1113);
if (compiler_objects$0LambdaBasics$1.eq_Types$2576([arrowType$1199,null],ts$1200)) {return [compiler_objects$0LambdaExp$1$4.unitType$1717,null];
} else {var s$3714 = ("Exported function " + v$1214) + " expected function of type:\n";
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3714);
var stringtree$3717 = compiler_objects$0LambdaExp$1$4.layoutType$2999(arrowType$1199);
tools$0PrettyPrint$1.outputTree$1072([function(s$3718){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3718);
},stringtree$3717,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"but found type:\n");
var stringtree$3720;
var t$5241;
var v$3727 = [0,","];
t$5241 = [basis$0List$1.map$697(function(v$5075){return compiler_objects$0LambdaExp$1$4.layoutType$2999(v$5075);
},ts$1200),v$3727,"]",0,"["];
stringtree$3720 = [0,t$5241];
tools$0PrettyPrint$1.outputTree$1072([function(s$3721){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3721);
},stringtree$3720,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
return tools$0Crash$1.impossible$59("LambdaStatSem.Export of function");
};
 break; }case 3: {var v$1192 = prim$1110[1];
var v$1193 = v$1192[0];
valid_t$749(env$1107,v$1193);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.RESET_REGIONSprim.Wrong number of args");
} else {var v$1183 = lexps$1113;
if (v$1183[1] == null) {var v$1190 = v$1183[0];
var ts$1185;
var v$3733 = fix$5142.$type_lexp(env$1107,v$1190);
switch (v$3733[0]) { case 0: {ts$1185 = v$3733[1];
 break; }default: {ts$1185 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.RESET_REGIONSprim1"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1185,[v$1193,null])) {return [unit_Type$910,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.RESET_REGIONSprim2");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.RESET_REGIONSprim.Wrong number of args");
};
};
 break; }default: {var v$1760 = prim$1110[1];
var v$1761 = v$1760[0];
valid_t$749(env$1107,v$1761);
if (lexps$1113 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.FORCE_RESET_REGIONSprim.Wrong number of args");
} else {var v$1751 = lexps$1113;
if (v$1751[1] == null) {var v$1758 = v$1751[0];
var ts$1753;
var v$3751 = fix$5142.$type_lexp(env$1107,v$1758);
switch (v$3751[0]) { case 0: {ts$1753 = v$3751[1];
 break; }default: {ts$1753 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.FORCE_RESET_REGIONSprim"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1753,[v$1761,null])) {return [unit_Type$910,null];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.FORCE_RESET_REGIONSprim");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.FORCE_RESET_REGIONSprim.Wrong number of args");
};
};
} };
};
fix$5142.$type_lexp = function(env$1764,lexp$1767){try {switch (lexp$1767[0]) { case 1: {var v$2222 = lexp$1767[1];
var v$2223 = v$2222[1];
var v$2224 = v$2222[0];
valid_ts$748(env$1764,v$2224);
var t$5236;
var t$5235;
var t$5234;
var v$2843 = env$1764[3];
var v$4259;
var v$2845 = compiler_objects$0Lvars$1$2.lookup$653(v$2843,v$2223);
switch (v$2845[0]) { case 0: {v$4259 = v$2845[1];
 break; }default: {var s$2846 = "lookup_lvar.Cannot find " + (compiler_objects$0Lvars$1$1.pr_lvar$78(v$2223[0],v$2223[1],v$2223[2],v$2223[3],v$2223[4],v$2223[5]));
v$4259 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$2846));
} };
var v$2837 = v$4259[0];
var v$2838 = v$4259[1];
var S$2840 = compiler_objects$0LambdaBasics$1.mk_subst$2569(function(v$2841){return "mk_instance";
},[v$2837,v$2224]);
t$5234 = (compiler_objects$0LambdaBasics$1.on_Type$2574(S$2840,v$2838));
t$5235 = [t$5234,null];
t$5236 = t$5235;
return [0,t$5236];
 break; }case 13: {var v$2216 = lexp$1767[1];
var v$2218 = v$2216[1];
valid_t$749(env$1764,v$2218);
return [0,[v$2218,null]];
 break; }case 0: {var v$2210 = lexp$1767[1];
var v$2212 = v$2210[1];
valid_t$749(env$1764,v$2212);
return [0,[v$2212,null]];
 break; }case 7: {return [0,[[2,[null,special_objects$0TyName$1$1.tyName_STRING$264]],null]];
 break; }case 8: {return [0,[[2,[null,special_objects$0TyName$1$1.tyName_REAL$256]],null]];
 break; }case 18: {return [0,[[2,[null,special_objects$0TyName$1$1.tyName_F64$260]],null]];
 break; }case 16: {var v$2198 = lexp$1767[1];
var v$2199 = v$2198[1];
var v$2200 = v$2198[0];
var env$$2180;
var fix$5224 = {};
fix$5224.$foldl = function(v$2853,v$2854){lab$foldl: while (true) {if (v$2854 == null) {return v$2853;
} else {var v$2855 = v$2854;
var v$2856 = v$2855[0];
var v$2857 = v$2855[1];
var t$5225;
var v$4802 = v$2856[0];
var v$4803 = v$2856[1];
var v$4805 = [null,v$4803];
var v$4806 = v$2853[2];
var v$4807 = v$2853[0];
var v$4808 = v$2853[4];
var v$4809 = v$2853[3];
var t$5231 = v$4807;
var t$5230 = v$2853[1];
var t$5229;
var t$5228 = tools$0NatSet$1.union$664;
var t$5227 = v$4806;
var t$5226;
var v$4810 = v$4805[0];
var v$4811 = v$4805[1];
t$5226 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4811),tools$0NatSet$1.fromList$614(v$4810)));
t$5229 = (t$5228(t$5227,t$5226));
t$5225 = [t$5231,t$5230,t$5229,compiler_objects$0Lvars$1$2.add$675(v$4802,v$4805,v$4809),v$4808];
var t$5232 = t$5225;
var t$5233 = v$2857;
var v$2853 = t$5232;
var v$2854 = t$5233;
continue lab$foldl;
};
};
};
var foldl$2852 = fix$5224.$foldl;
env$$2180 = (foldl$2852(env$1764,v$2199));
var ts_body$2190;
var v$2870 = fix$5142.$type_lexp(env$$2180,v$2200);
switch (v$2870[0]) { case 0: {ts_body$2190 = v$2870[1];
 break; }default: {ts_body$2190 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.FN"));
} };
var ts_arg$2191 = basis$0List$1.map$697(function(v$2194){return v$2194[1];
},v$2199);
valid_ts$748(env$1764,ts_arg$2191);
return [0,[[3,[ts_arg$2191,ts_body$2190]],null]];
 break; }case 12: {var v$2108 = lexp$1767[1];
var v$2109 = v$2108[1];
if (v$2109 == null) {var v$2115 = v$2108[0];
var v$2116 = v$2108[2];
var ts$2110;
var v$2878 = fix$5142.$type_lexp(env$1764,v$2115);
switch (v$2878[0]) { case 0: {ts$2110 = v$2878[1];
 break; }default: {ts$2110 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.WILD"));
} };
((ts$2110 == null)?true:false)?0:(tools$0Crash$1.impossible$59("LambdaStatSem.LET.wild -- the binding must be surrounded by a drop expression"));
return fix$5142.$type_lexp(env$1764,v$2116);
} else {var v$2177 = v$2108[0];
var v$2178 = v$2108[2];
var env_scope$2117;
var fix$5206 = {};
fix$5206.$foldl = function(v$2892,v$2893){lab$foldl: while (true) {if (v$2893 == null) {return v$2892;
} else {var v$2894 = v$2893;
var v$2895 = v$2894[0];
var v$2896 = v$2894[1];
var t$5207;
var v$4814 = v$2895[0];
var v$4815 = v$2895[1];
var v$4816 = v$2895[2];
var v$4818 = [v$4815,v$4816];
var v$4819 = v$2892[2];
var v$4820 = v$2892[0];
var v$4821 = v$2892[4];
var v$4822 = v$2892[3];
var t$5213 = v$4820;
var t$5212 = v$2892[1];
var t$5211;
var t$5210 = tools$0NatSet$1.union$664;
var t$5209 = v$4819;
var t$5208;
var v$4823 = v$4818[0];
var v$4824 = v$4818[1];
t$5208 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4824),tools$0NatSet$1.fromList$614(v$4823)));
t$5211 = (t$5210(t$5209,t$5208));
t$5207 = [t$5213,t$5212,t$5211,compiler_objects$0Lvars$1$2.add$675(v$4814,v$4818,v$4822),v$4821];
var t$5214 = t$5207;
var t$5215 = v$2896;
var v$2892 = t$5214;
var v$2893 = t$5215;
continue lab$foldl;
};
};
};
var foldl$2891 = fix$5206.$foldl;
env_scope$2117 = (foldl$2891(env$1764,v$2109));
var tvs$2129;
var b$2909 = null;
var fix$5216 = {};
fix$5216.$foldl = function(v$2912,v$2913){lab$foldl: while (true) {if (v$2913 == null) {return v$2912;
} else {var v$2914 = v$2913;
var v$2915 = v$2914[0];
var v$2916 = v$2914[1];
var t$5217;
var v$4827 = v$2915[1];
t$5217 = (basis$0List$1.s$n$686(v$4827,v$2912));
var t$5218 = t$5217;
var t$5219 = v$2916;
var v$2912 = t$5218;
var v$2913 = t$5219;
continue lab$foldl;
};
};
};
var foldl$2911 = fix$5216.$foldl;
tvs$2129 = (foldl$2911(b$2909,v$2109));
var v$2920 = env$1764[2];
var v$2921 = env$1764[0];
var v$2922 = env$1764[4];
var v$2923 = env$1764[3];
var env_bind$2137 = [v$2921,env$1764[1],tools$0NatSet$1.addList$615(tvs$2129,v$2920),v$2923,v$2922];
var check_polymorphism$2138 = letrec_polymorphism_only$63[0]?(function(v$2146){if (v$2146 == null) {return 0;
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.LET.polymorphic let -- Polymorphism only allowed in FIX.");
};
}):(function(v$2148){return 0;
});
var ts_bind$2162;
var v$2933 = fix$5142.$type_lexp(env_bind$2137,v$2177);
switch (v$2933[0]) { case 0: {ts_bind$2162 = v$2933[1];
 break; }default: {ts_bind$2162 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.LET.bind"));
} };
try {var l$2941 = basis$0ListPair$1.zipEq$96(v$2109,ts_bind$2162);
var fix$5221 = {};
fix$5221.$app = function(v$2943){lab$app: while (true) {if (v$2943 == null) {return 0;
} else {var v$2944 = v$2943;
var v$2945 = v$2944[0];
var v$2946 = v$2944[1];
var v$4830 = v$2945[0];
var v$4831 = v$4830[1];
var v$4832 = v$4830[2];
var v$4833 = v$2945[1];
(valid_s$811(env$1764[0],env$1764[1],env$1764[2],env$1764[3],env$1764[4]))([v$4831,v$4832]);
eqType$844("LET",[v$4832,v$4833]);
check_polymorphism$2138(v$4831);
(tools$0NatSet$1.isEmpty$598(tools$0NatSet$1.intersect$657(tools$0NatSet$1.fromList$614(v$4831),env$1764[2])))?0:(tools$0Crash$1.impossible$59("LambdaStatSem.tyvars_not_in_env.TYVARS in Env!!"));
var t$5222 = v$2946;
var v$2943 = t$5222;
continue lab$app;
};
};
};
var app$2942 = fix$5221.$app;
app$2942(l$2941);
} catch(v$5220) {(function(ListPair$UnequalLengths$2176){var t$5223 = ListPair$UnequalLengths$2176;
if (t$5223[0] == basis$0ListPair$1.en$UnequalLengths$54) {return tools$0Crash$1.impossible$59("LambdaStatSem.LET.pattern and bind type differ in numbers of components");
} else {throw ListPair$UnequalLengths$2176;
};
})(v$5220);
};
return fix$5142.$type_lexp(env_scope$2117,v$2178);
};
 break; }case 11: {var v$2104 = lexp$1767[1];
var v$2106 = v$2104[1];
return fix$5142.$type_lexp(env$1764,v$2106);
 break; }case 17: {var v$2100 = lexp$1767[1];
var v$2101 = v$2100[0];
var v$2102 = v$2100[1];
var env$$2057;
var fix$5183 = {};
fix$5183.$foldl = function(v$2961,v$2962){lab$foldl: while (true) {if (v$2962 == null) {return v$2961;
} else {var v$2963 = v$2962;
var v$2964 = v$2963[0];
var v$2965 = v$2963[1];
var t$5184;
var v$4836 = v$2964[2];
var v$4837 = v$2964[4];
var v$4838 = v$2964[0];
(valid_s$811(v$2961[0],v$2961[1],v$2961[2],v$2961[3],v$2961[4]))([v$4837,v$4838]);
var v$4840 = [null,v$4838];
var v$4841 = v$2961[2];
var v$4842 = v$2961[0];
var v$4843 = v$2961[4];
var v$4844 = v$2961[3];
var v$4929 = v$2961[1];
var v$4930 = tools$0NatSet$1.addList$615(v$4837,v$4841);
var t$5190 = v$4842;
var t$5189 = v$4929;
var t$5188;
var t$5187 = tools$0NatSet$1.union$664;
var t$5186 = v$4930;
var t$5185;
var v$4850 = v$4840[0];
var v$4851 = v$4840[1];
t$5185 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4851),tools$0NatSet$1.fromList$614(v$4850)));
t$5188 = (t$5187(t$5186,t$5185));
t$5184 = [t$5190,t$5189,t$5188,compiler_objects$0Lvars$1$2.add$675(v$4836,v$4840,v$4844),v$4843];
var t$5191 = t$5184;
var t$5192 = v$2965;
var v$2961 = t$5191;
var v$2962 = t$5192;
continue lab$foldl;
};
};
};
var foldl$2960 = fix$5183.$foldl;
env$$2057 = (foldl$2960(env$1764,v$2101));
var type_pairs$2075 = basis$0List$1.map$697(function(v$2079){var v$2080 = v$2079[1];
var v$2081 = v$2079[0];
var t$5193;
var v$4853 = fix$5142.$type_lexp(env$$2057,v$2080);
switch (v$4853[0]) { case 0: {var v$4854 = v$4853[1];
if (v$4854 == null) {t$5193 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.FIX"));
} else {var v$4855 = v$4854;
t$5193 = ((v$4855[1] == null)?v$4855[0]:(tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.FIX")));
};
 break; }default: {t$5193 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeListOne.FIX"));
} };
return [t$5193,v$2081];
},v$2101);
var fix$5194 = {};
fix$5194.$app = function(v$2987){lab$app: while (true) {if (v$2987 == null) {return 0;
} else {var v$2988 = v$2987;
var v$2989 = v$2988[0];
var v$2990 = v$2988[1];
eqType$844("FIX",v$2989);
var t$5195 = v$2990;
var v$2987 = t$5195;
continue lab$app;
};
};
};
var app$2986 = fix$5194.$app;
app$2986(type_pairs$2075);
var env_scope$2082;
var fix$5196 = {};
fix$5196.$foldl = function(v$2995,v$2996){lab$foldl: while (true) {if (v$2996 == null) {return v$2995;
} else {var v$2997 = v$2996;
var v$2998 = v$2997[0];
var v$2999 = v$2997[1];
var t$5197;
var v$4861 = v$2998[2];
var v$4862 = v$2998[4];
var v$4863 = v$2998[0];
(tools$0NatSet$1.isEmpty$598(tools$0NatSet$1.intersect$657(tools$0NatSet$1.fromList$614(v$4862),v$2995[2])))?0:(tools$0Crash$1.impossible$59("LambdaStatSem.tyvars_not_in_env.TYVARS in Env!!"));
var v$4865 = [v$4862,v$4863];
var v$4866 = v$2995[2];
var v$4867 = v$2995[0];
var v$4868 = v$2995[4];
var v$4869 = v$2995[3];
var t$5203 = v$4867;
var t$5202 = v$2995[1];
var t$5201;
var t$5200 = tools$0NatSet$1.union$664;
var t$5199 = v$4866;
var t$5198;
var v$4870 = v$4865[0];
var v$4871 = v$4865[1];
t$5198 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4871),tools$0NatSet$1.fromList$614(v$4870)));
t$5201 = (t$5200(t$5199,t$5198));
t$5197 = [t$5203,t$5202,t$5201,compiler_objects$0Lvars$1$2.add$675(v$4861,v$4865,v$4869),v$4868];
var t$5204 = t$5197;
var t$5205 = v$2999;
var v$2995 = t$5204;
var v$2996 = t$5205;
continue lab$foldl;
};
};
};
var foldl$2994 = fix$5196.$foldl;
env_scope$2082 = (foldl$2994(env$1764,v$2101));
return fix$5142.$type_lexp(env_scope$2082,v$2102);
 break; }case 20: {var v$2053 = lexp$1767[1];
var v$2054 = v$2053[0];
var v$2055 = v$2053[1];
var v$2024 = fix$5142.$type_lexp(env$1764,v$2054);
switch (v$2024[0]) { case 0: {var v$2026 = v$2024[1];
if (v$2026 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
} else {var v$2028 = v$2026;
var v$2029 = v$2028[0];
switch (v$2029[0]) { case 3: {if (v$2028[1] == null) {var v$2049 = v$2029[1];
var v$2050 = v$2049[0];
var v$2051 = v$2049[1];
var ts$2032;
var v$3019 = fix$5142.$type_lexp(env$1764,v$2055);
switch (v$3019[0]) { case 0: {ts$2032 = v$3019[1];
 break; }default: {ts$2032 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.APP"));
} };
if (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$2032,v$2050)) {return [0,v$2051];
} else {basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"types expected:\n");
var stringtree$3027;
var t$5181;
var v$3034 = [0,","];
t$5181 = [basis$0List$1.map$697(function(v$5070){return compiler_objects$0LambdaExp$1$4.layoutType$2999(v$5070);
},v$2050),v$3034,"]",0,"["];
stringtree$3027 = [0,t$5181];
tools$0PrettyPrint$1.outputTree$1072([function(s$3028){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3028);
},stringtree$3027,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\ntypes:\n");
var stringtree$3036;
var t$5182;
var v$3043 = [0,","];
t$5182 = [basis$0List$1.map$697(function(v$5071){return compiler_objects$0LambdaExp$1$4.layoutType$2999(v$5071);
},ts$2032),v$3043,"]",0,"["];
stringtree$3036 = [0,t$5182];
tools$0PrettyPrint$1.outputTree$1072([function(s$3037){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3037);
},stringtree$3036,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"application:\n");
var stringtree$3045 = compiler_objects$0LambdaExp$1$4.layoutLambdaExp$5106(lexp$1767);
tools$0PrettyPrint$1.outputTree$1072([function(s$3046){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3046);
},stringtree$3045,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
return tools$0Crash$1.impossible$59("LambdaStatSem.APP");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.APP.argument type not arrow");
} };
 break; }case 19: {var v$2011 = lexp$1767[1];
var v$2012 = v$2011[0];
var v$2013 = v$2011[1];
var v$2014 = v$2011[2];
switch (v$2013[0]) { case 0: {var v$2010 = v$2013[1];
valid_t$749(env$1764,v$2010);
 break; }default: {0;
} };
var t$5180 = fix$5142.$type_lexp;
var t$5179;
var v$3065 = env$1764[2];
var v$3066 = env$1764[0];
var v$3067 = env$1764[4];
var v$3068 = env$1764[3];
var v$3069 = env$1764[1];
var ftv$$3070;
switch (v$2013[0]) { case 0: {var v$3071 = v$2013[1];
ftv$$3070 = (tools$0NatSet$1.union$664(v$3065,ftv_Type$155(v$3071)));
 break; }default: {ftv$$3070 = v$3065;
} };
t$5179 = [v$3066,compiler_objects$0Excon$1$2.add$509(v$2012,v$2013,v$3069),ftv$$3070,v$3068,v$3067];
return t$5180(t$5179,v$2014);
 break; }case 9: {var v$1998 = lexp$1767[1];
var v$1999 = v$1998[0];
var v$2000 = v$1998[1];
var v$1986 = fix$5142.$type_lexp(env$1764,v$1999);
switch (v$1986[0]) { case 0: {var v$1988 = v$1986[1];
if (v$1988 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn");
} else {var v$1990 = v$1988;
var v$1991 = v$1990[0];
switch (v$1991[0]) { case 2: {var v$1993 = v$1991[1];
return (v$1993[0] == null)?((v$1990[1] == null)?v$2000:(tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn"))):(tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn"));
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.RAISE.type not exn");
} };
 break; }case 14: {var v$1974 = lexp$1767[1];
var v$1975 = v$1974[0];
var v$1976 = v$1974[1];
var v$1949 = fix$5142.$type_lexp(env$1764,v$1976);
switch (v$1949[0]) { case 0: {var v$1951 = v$1949[1];
if (v$1951 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} else {var v$1953 = v$1951;
var v$1954 = v$1953[0];
switch (v$1954[0]) { case 3: {var v$1956 = v$1954[1];
var v$1957 = v$1956[0];
if (v$1957 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} else {var v$1959 = v$1957;
var v$1960 = v$1959[0];
switch (v$1960[0]) { case 2: {var v$1962 = v$1960[1];
if (v$1962[0] == null) {if (v$1959[1] == null) {if (v$1953[1] == null) {var v$1972 = v$1956[1];
var ts$1966;
var v$3092 = fix$5142.$type_lexp(env$1764,v$1975);
switch (v$3092[0]) { case 0: {ts$1966 = v$3092[1];
 break; }default: {ts$1966 = (tools$0Crash$1.impossible$59("LambdaStatSem.unTypeList.HANDLE"));
} };
return (compiler_objects$0LambdaBasics$1.eq_Types$2576(ts$1966,v$1972))?[0,v$1972]:(tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE"));
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
};
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.HANDLE.wrong handler type");
} };
 break; }case 4: {var v$1933 = lexp$1767[1];
var v$1934 = v$1933[1];
var v$1935 = v$1933[0];
var tn$1920;
switch (v$1935) { case 31: {tn$1920 = special_objects$0TyName$1$1.tyName_INT31$216;
 break; }case 32: {tn$1920 = special_objects$0TyName$1$1.tyName_INT32$220;
 break; }case 63: {tn$1920 = special_objects$0TyName$1$1.tyName_INT63$224;
 break; }case 64: {tn$1920 = special_objects$0TyName$1$1.tyName_INT64$228;
 break; }default: {var s$3125 = "SWITCH_I.precision = " + (basis$0Int32$1.toString$458(v$1935));
tn$1920 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3125));
} };
return type_switch$999(function(v$5018){return fix$5142.$type_lexp(env$1764,v$5018);
},function(v$1932){return tn$1920;
},v$1934);
 break; }case 2: {var v$1916 = lexp$1767[1];
var v$1917 = v$1916[1];
var v$1918 = v$1916[0];
var tn$1903;
switch (v$1918) { case 31: {tn$1903 = special_objects$0TyName$1$1.tyName_WORD31$240;
 break; }case 32: {tn$1903 = special_objects$0TyName$1$1.tyName_WORD32$244;
 break; }case 63: {tn$1903 = special_objects$0TyName$1$1.tyName_WORD63$248;
 break; }case 64: {tn$1903 = special_objects$0TyName$1$1.tyName_WORD64$252;
 break; }default: {tn$1903 = (tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_I"));
} };
return type_switch$999(function(v$5020){return fix$5142.$type_lexp(env$1764,v$5020);
},function(v$1915){return tn$1903;
},v$1917);
 break; }case 3: {var v$1901 = lexp$1767[1];
return type_switch$999(function(v$5022){return fix$5142.$type_lexp(env$1764,v$5022);
},function(s$1900){return special_objects$0TyName$1$1.tyName_STRING$264;
},v$1901);
 break; }case 6: {var v$1896 = lexp$1767[1];
return type_switch$999(function(v$5024){return fix$5142.$type_lexp(env$1764,v$5024);
},function(v$1868){var v$1895 = v$1868[0];
var v$3131 = env$1764[0];
var v$1879;
var v$3133 = compiler_objects$0Con$1$2.lookup$515(v$3131,v$1895);
switch (v$3133[0]) { case 0: {v$1879 = v$3133[1];
 break; }default: {var s$3134 = "lookup_con.Cannot find " + v$1895[1];
v$1879 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3134));
} };
var v$1880 = v$1879[1];
switch (v$1880[0]) { case 2: {return v$1880[1][1];
 break; }case 3: {var v$1882 = v$1880[1];
var v$1883 = v$1882[1];
if (v$1883 == null) {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
} else {var v$1885 = v$1883;
var v$1886 = v$1885[0];
switch (v$1886[0]) { case 2: {if (v$1885[1] == null) {return v$1886[1][1];
} else {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
} };
};
 break; }default: {return tools$0Crash$1.impossible$59("LambdaStatSem.SWITCH_C.Wrong con type");
} };
},v$1896);
 break; }case 5: {var v$1864 = lexp$1767[1];
return type_switch$999(function(v$5026){return fix$5142.$type_lexp(env$1764,v$5026);
},function(v$1860){var v$1863 = v$1860[0];
var v$3152 = env$1764[1];
var v$3154 = compiler_objects$0Excon$1$2.lookup$487(v$3152,v$1863);
switch (v$3154[0]) { case 0: {v$3154[1];
 break; }default: {var s$3155 = "lookup_excon.Cannot find " + v$1863[1];
tools$0Crash$1.impossible$59("LambdaStatSem." + s$3155);
} };
return special_objects$0TyName$1$1.tyName_EXN$300;
},v$1864);
 break; }case 10: {var v$1854 = lexp$1767[1];
var v$1855 = v$1854[0];
var v$1856 = v$1854[1];
return [0,fix$5142.$type_prim(env$1764,v$1855,v$1856)];
 break; }default: {var v$2255 = lexp$1767[1];
var v$2256 = v$2255[1];
var v$2257 = v$2255[0];
var t$5237;
var v$2253 = basis$0List$1.map$697(function(p$3172){var v$3173 = p$3172[1];
var v$3176 = env$1764[3];
var v$3175;
var v$3178 = compiler_objects$0Lvars$1$2.lookup$653(v$3176,v$3173);
switch (v$3178[0]) { case 0: {v$3175 = v$3178[1];
 break; }default: {var s$3179 = "lookup_lvar.Cannot find " + (compiler_objects$0Lvars$1$1.pr_lvar$78(v$3173[0],v$3173[1],v$3173[2],v$3173[3],v$3173[4],v$3173[5]));
v$3175 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3179));
} };
return [v$3175[1],v$3173,v$3175[0]];
},v$2256);
t$5237 = [basis$0List$1.map$697(function(v$3182){var v$3183 = v$3182[0];
var t$5239 = v$3183;
var t$5238;
var v$3185 = env$1764[1];
var v$3187 = compiler_objects$0Excon$1$2.lookup$487(v$3185,v$3183);
switch (v$3187[0]) { case 0: {t$5238 = v$3187[1];
 break; }default: {var s$3188 = "lookup_excon.Cannot find " + v$3183[1];
t$5238 = (tools$0Crash$1.impossible$59("LambdaStatSem." + s$3188));
} };
return [t$5239,t$5238];
},v$2257),v$2253];
return [2,t$5237];
} };
} catch(v$5178) {return (function(v$2262){var t$5240 = v$2262;
if (t$5240[0] == en$AbortExp$1102) {throw exn$AbortExp$1102;
} else {var stringtree$3191 = compiler_objects$0LambdaExp$1$4.layoutLambdaExp$5106(lexp$1767);
tools$0PrettyPrint$1.outputTree$1072([function(s$3192){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3192);
},stringtree$3191,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
var stringtree$3193 = compiler0$0LambdaStatSem$1.layout_env$590(env$1764[0],env$1764[1],env$1764[2],env$1764[3],env$1764[4]);
tools$0PrettyPrint$1.outputTree$1072([function(s$3194){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$3194);
},stringtree$3193,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
throw exn$AbortExp$1102;
};
})(v$5178);
};
};
var type_prim$1104 = fix$5142.$type_prim;
var type_lexp$1103 = fix$5142.$type_lexp;
compiler0$0LambdaStatSem$1.type_check$2353 = function(v$2371,v$4996,v$2372){var v$2373 = v$2372[1];
var v$2374 = v$2373[0];
var v$2375 = v$2373[1];
(letrec_polymorphism_only$63[0] = v$4996,0);
var env$$2363;
var v$3921 = v$2374[1];
var concat$3922;
var b$3924 = null;
concat$3922 = (function(c$3925){var fix$5143 = {};
fix$5143.$foldl = function(v$3927,v$3928){lab$foldl: while (true) {if (v$3928 == null) {return v$3927;
} else {var v$3929 = v$3928;
var v$3930 = v$3929[0];
var v$3931 = v$3929[1];
var t$5144 = basis$0List$1.s$n$686(v$3930,v$3927);
var t$5145 = v$3931;
var v$3927 = t$5144;
var v$3928 = t$5145;
continue lab$foldl;
};
};
};
var foldl$3926 = fix$5143.$foldl;
return foldl$3926(b$3924,c$3925);
});
var c$3975 = concat$3922(v$3921);
var fix$5146 = {};
fix$5146.$foldl = function(v$3977,v$3978){lab$foldl: while (true) {if (v$3978 == null) {return v$3977;
} else {var v$3979 = v$3978;
var v$3980 = v$3979[0];
var v$3981 = v$3979[1];
var t$5160;
var t$5159 = compiler0$0LambdaStatSem$1.plus$262;
var t$5158 = v$3977;
var t$5147;
var v$3985 = v$3980[0];
var v$3986 = v$3980[1];
var v$3987 = v$3980[2];
var env$3988;
var fix$5148 = {};
fix$5148.$foldl = function(v$3990,v$3991){lab$foldl: while (true) {if (v$3991 == null) {return v$3990;
} else {var v$3992 = v$3991;
var v$3993 = v$3992[0];
var v$3994 = v$3992[1];
var t$5149;
var v$3997 = v$3993[0];
var v$3998 = v$3993[1];
var v$4726;
switch (v$3998[0]) { case 0: {v$4726 = [v$3985,[3,[[v$3998[1],null],[[2,[basis$0List$1.map$697((function(env$5150){return function(v$4001){return [0,v$4001];
};
})([]),v$3985),v$3986]],null]]]];
 break; }default: {v$4726 = [v$3985,[2,[basis$0List$1.map$697((function(env$5151){return function(v$4002){return [0,v$4002];
};
})([]),v$3985),v$3986]]];
} };
var v$4006 = v$3990[2];
var v$4007 = v$3990[0];
var v$4008 = v$3990[4];
var v$4009 = v$3990[3];
var v$4010 = v$3990[1];
var v$4011;
var t$5154 = tools$0NatSet$1.union$664;
var t$5153 = v$4006;
var t$5152;
var v$4012 = v$4726[0];
var v$4013 = v$4726[1];
t$5152 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4013),tools$0NatSet$1.fromList$614(v$4012)));
v$4011 = (t$5154(t$5153,t$5152));
t$5149 = [compiler_objects$0Con$1$2.add$537(v$3997,v$4726,v$4007),v$4010,v$4011,v$4009,v$4008];
var t$5155 = t$5149;
var t$5156 = v$3994;
var v$3990 = t$5155;
var v$3991 = t$5156;
continue lab$foldl;
};
};
};
var foldl$3989 = fix$5148.$foldl;
env$3988 = (foldl$3989(compiler0$0LambdaStatSem$1.empty$210,v$3987));
var v$4729 = basis$0List$1.map$697((function(env$5157){return function(v$4015){return v$4015[0];
};
})([]),v$3987);
var v$4019 = env$3988[2];
var v$4020 = env$3988[0];
var v$4021 = env$3988[4];
t$5147 = [v$4020,env$3988[1],v$4019,env$3988[3],special_objects$0TyName$1$2.add$1433(v$3986,v$4729,v$4021)];
t$5160 = (t$5159(t$5158,t$5147));
var t$5161 = t$5160;
var t$5162 = v$3981;
var v$3977 = t$5161;
var v$3978 = t$5162;
continue lab$foldl;
};
};
};
var foldl$3976 = fix$5146.$foldl;
env$$2363 = (foldl$3976(compiler0$0LambdaStatSem$1.empty$210,c$3975));
var fr$2364;
try {fr$2364 = (type_lexp$1103(compiler0$0LambdaStatSem$1.plus$262(v$2371,env$$2363),v$2375));
} catch(v$5163) {fr$2364 = ((function(s$m$2367){var stringtree$4022 = compiler_objects$0LambdaExp$1$4.layoutLambdaExp$5106(v$2375);
tools$0PrettyPrint$1.outputTree$1072([function(s$4023){return basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],s$4023);
},stringtree$4022,tools$0Flags$1$1.colwidth$100[0]]);
basis$0TextIO$1.output$110(tools$0Flags$1$1.log$101[0],"\n\n");
throw s$m$2367;
})(v$5163));
};
var env$$$2370;
switch (fr$2364[0]) { case 2: {var v$4025 = fr$2364[1];
var v$4026 = v$4025[1];
var v$4027 = v$4025[0];
var env$$4028;
var fix$5164 = {};
fix$5164.$foldl = function(v$4049,v$4050){lab$foldl: while (true) {if (v$4050 == null) {return v$4049;
} else {var v$4051 = v$4050;
var v$4052 = v$4051[0];
var v$4053 = v$4051[1];
var t$5165;
var v$4083 = v$4052[1];
var v$4084 = v$4052[2];
var v$4085 = v$4052[0];
var v$4734 = [v$4084,v$4085];
var v$4091 = v$4049[2];
var v$4092 = v$4049[0];
var v$4093 = v$4049[4];
var v$4094 = v$4049[3];
var t$5171 = v$4092;
var t$5170 = v$4049[1];
var t$5169;
var t$5168 = tools$0NatSet$1.union$664;
var t$5167 = v$4091;
var t$5166;
var v$4095 = v$4734[0];
var v$4096 = v$4734[1];
t$5166 = (tools$0NatSet$1.difference$650(ftv_Type$155(v$4096),tools$0NatSet$1.fromList$614(v$4095)));
t$5169 = (t$5168(t$5167,t$5166));
t$5165 = [t$5171,t$5170,t$5169,compiler_objects$0Lvars$1$2.add$675(v$4083,v$4734,v$4094),v$4093];
var t$5172 = t$5165;
var t$5173 = v$4053;
var v$4049 = t$5172;
var v$4050 = t$5173;
continue lab$foldl;
};
};
};
var foldl$4048 = fix$5164.$foldl;
env$$4028 = (foldl$4048(compiler0$0LambdaStatSem$1.empty$210,v$4026));
var fix$5174 = {};
fix$5174.$foldl = function(v$4074,v$4075){lab$foldl: while (true) {if (v$4075 == null) {return v$4074;
} else {var v$4076 = v$4075;
var v$4077 = v$4076[0];
var v$4078 = v$4076[1];
var t$5175;
var v$4099 = v$4077[0];
var v$4100 = v$4077[1];
var v$4106 = v$4074[2];
var v$4107 = v$4074[0];
var v$4108 = v$4074[4];
var v$4109 = v$4074[3];
var v$4110 = v$4074[1];
var ftv$$4111;
switch (v$4100[0]) { case 0: {var v$4112 = v$4100[1];
ftv$$4111 = (tools$0NatSet$1.union$664(v$4106,ftv_Type$155(v$4112)));
 break; }default: {ftv$$4111 = v$4106;
} };
t$5175 = [v$4107,compiler_objects$0Excon$1$2.add$509(v$4099,v$4100,v$4110),ftv$$4111,v$4109,v$4108];
var t$5176 = t$5175;
var t$5177 = v$4078;
var v$4074 = t$5176;
var v$4075 = t$5177;
continue lab$foldl;
};
};
};
var foldl$4073 = fix$5174.$foldl;
env$$$2370 = (foldl$4073(env$$4028,v$4027));
 break; }default: {env$$$2370 = (tools$0Crash$1.impossible$59("LambdaStatSem.env_from_frame. No frame"));
} };
return compiler0$0LambdaStatSem$1.plus$262(env$$2363,env$$$2370);
};
return 0;
})();
