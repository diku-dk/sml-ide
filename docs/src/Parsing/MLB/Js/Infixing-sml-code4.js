if ((typeof(basics$0Infixing$1$4)) == "undefined") {basics$0Infixing$1$4 = {};
};
(function(){basics$0Infixing$1$4.eq_StackEntry$603 = function(v$605,v$606){switch (v$605[0]) { case 0: {switch (v$606[0]) { case 0: {var v$607 = v$605[1];
var v$608 = v$606[1];
return (syntax_objects$0Ident$1.eq_id$248(v$607[0],v$608[0]))?(v$607[1] == v$608[1]):false;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$606[0]) { case 1: {var v$611 = v$605[1];
var v$612 = v$606[1];
return (syntax_objects$0Ident$1.eq_id$248(v$611[0],v$612[0]))?(v$611[1] == v$612[1]):false;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$606[0]) { case 2: {return true;
 break; }default: {return false;
} };
 break; } };
};
basics$0Infixing$1$4.eq_LastObj$615 = function(v$617,v$618){switch (v$617) { case 0: {switch (v$618) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$618) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$618) { case 2: {return true;
 break; }default: {return false;
} };
 break; } };
};
basics$0Infixing$1$4.impossible$236 = function(s$239){return tools$0Crash$1.impossible$59("InfixStack." + s$239);
};
basics$0Infixing$1$4.full$245 = function(v$261){switch (v$261[0]) { case 1: {var v$269 = v$261[1];
return basics$0Infixing$1$2.atomToFull$119(v$269);
 break; }default: {return v$261[1];
} };
};
basics$0Infixing$1$4.atom$246 = function(v$249){switch (v$249[0]) { case 1: {return v$249[1];
 break; }default: {var v$258 = v$249[1];
return basics$0Infixing$1$2.fullToAtom$123(v$258);
} };
};
basics$0Infixing$1$4.side$275 = function(v$399){switch (v$399[0]) { case 0: {return "left";
 break; }case 1: {return "right";
 break; }default: {return tools$0Crash$1.impossible$59("InfixStack.side");
} };
};
basics$0Infixing$1$4.op_as_string$276 = function(v$378){switch (v$378[0]) { case 0: {var v$394 = v$378[1];
var v$395 = v$394[0];
return basics$0Infixing$1$2.pr_id$118(v$395);
 break; }case 1: {var v$390 = v$378[1];
var v$391 = v$390[0];
return basics$0Infixing$1$2.pr_id$118(v$391);
 break; }default: {return tools$0Crash$1.impossible$59("InfixStack.op_as_string");
} };
};
basics$0Infixing$1$4.both_associate_left$274 = function(v$772,v$773){var rhs2$423 = function(obj$441){var t$791;
var t$790;
var t$789;
var t$788;
var t$787;
var t$786;
var t$785;
var t$784;
var t$783;
var t$782 = "Insert parentheses.  `";
var t$781;
switch (v$772[0]) { case 0: {var v$633 = v$772[1];
var v$634 = v$633[0];
t$781 = (basics$0Infixing$1$2.pr_id$118(v$634));
 break; }case 1: {var v$635 = v$772[1];
var v$636 = v$635[0];
t$781 = (basics$0Infixing$1$2.pr_id$118(v$636));
 break; }default: {t$781 = (tools$0Crash$1.impossible$59("InfixStack.op_as_string"));
} };
t$783 = (t$782 + t$781);
t$784 = (t$783 + "' and `");
var t$780;
switch (v$773[0]) { case 0: {var v$640 = v$773[1];
var v$641 = v$640[0];
t$780 = (basics$0Infixing$1$2.pr_id$118(v$641));
 break; }case 1: {var v$642 = v$773[1];
var v$643 = v$642[0];
t$780 = (basics$0Infixing$1$2.pr_id$118(v$643));
 break; }default: {t$780 = (tools$0Crash$1.impossible$59("InfixStack.op_as_string"));
} };
t$785 = (t$784 + t$780);
t$786 = (t$785 + "' have the same precedence\nbut associate ");
var t$779;
switch (v$772[0]) { case 0: {t$779 = "left";
 break; }case 1: {t$779 = "right";
 break; }default: {t$779 = (tools$0Crash$1.impossible$59("InfixStack.side"));
} };
t$787 = (t$786 + t$779);
t$788 = (t$787 + " and ");
var t$778;
switch (v$773[0]) { case 0: {t$778 = "left";
 break; }case 1: {t$778 = "right";
 break; }default: {t$778 = (tools$0Crash$1.impossible$59("InfixStack.side"));
} };
t$789 = (t$788 + t$778);
t$790 = (t$789 + ", respectively.");
t$791 = [basics$0Infixing$1$1.en$InfixStack_error$68,t$790];
throw t$791;
};
switch (v$772[0]) { case 0: {switch (v$773[0]) { case 0: {return true;
 break; }default: {return rhs2$423(0);
} };
 break; }case 1: {switch (v$773[0]) { case 1: {return false;
 break; }default: {return rhs2$423(0);
} };
 break; }default: {return rhs2$423(0);
} };
};
basics$0Infixing$1$4.precedence$277 = function(v$357){switch (v$357[0]) { case 1: {return v$357[1][1];
 break; }case 0: {return v$357[1][1];
 break; }default: {return tools$0Crash$1.impossible$59("InfixStack.precedence");
} };
};
basics$0Infixing$1$4.assocLeft$278 = function(v$345,v$774){switch (v$345[0]) { case 2: {return true;
 break; }default: {switch (v$774[0]) { case 2: {return false;
 break; }default: {var t$797;
var t$796;
switch (v$345[0]) { case 1: {t$796 = v$345[1][1];
 break; }case 0: {t$796 = v$345[1][1];
 break; }default: {t$796 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
var t$795;
switch (v$774[0]) { case 1: {t$795 = v$774[1][1];
 break; }case 0: {t$795 = v$774[1][1];
 break; }default: {t$795 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
t$797 = (t$796 > t$795);
if (t$797) {return true;
} else {var t$794;
var t$793;
switch (v$345[0]) { case 1: {t$793 = v$345[1][1];
 break; }case 0: {t$793 = v$345[1][1];
 break; }default: {t$793 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
var t$792;
switch (v$774[0]) { case 1: {t$792 = v$774[1][1];
 break; }case 0: {t$792 = v$774[1][1];
 break; }default: {t$792 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
t$794 = (t$793 == t$792);
if (t$794) {return basics$0Infixing$1$4.both_associate_left$274(v$345,v$774);
} else {return false;
};
};
} };
} };
};
basics$0Infixing$1$4.apply$279 = function(v$775,v$293){if (v$293 == null) {var t$801;
var t$800;
var t$799 = "Give ";
var t$798;
switch (v$775[0]) { case 0: {var v$763 = v$775[1];
var v$764 = v$763[0];
t$798 = (("the infix `" + (basics$0Infixing$1$2.pr_id$118(v$764))) + "' more arguments.");
 break; }case 1: {var v$765 = v$775[1];
var v$766 = v$765[0];
t$798 = (("the infixr `" + (basics$0Infixing$1$2.pr_id$118(v$766))) + "' more arguments.");
 break; }default: {t$798 = (tools$0Crash$1.impossible$59("InfixStack.apply"));
} };
t$800 = (t$799 + t$798);
t$801 = [basics$0Infixing$1$1.en$InfixStack_error$68,t$800];
throw t$801;
} else {var v$295 = v$293;
var v$296 = v$295[1];
if (v$296 == null) {var t$805;
var t$804;
var t$803 = "Give ";
var t$802;
switch (v$775[0]) { case 0: {var v$757 = v$775[1];
var v$758 = v$757[0];
t$802 = (("the infix `" + (basics$0Infixing$1$2.pr_id$118(v$758))) + "' more arguments.");
 break; }case 1: {var v$759 = v$775[1];
var v$760 = v$759[0];
t$802 = (("the infixr `" + (basics$0Infixing$1$2.pr_id$118(v$760))) + "' more arguments.");
 break; }default: {t$802 = (tools$0Crash$1.impossible$59("InfixStack.apply"));
} };
t$804 = (t$803 + t$802);
t$805 = [basics$0Infixing$1$1.en$InfixStack_error$68,t$804];
throw t$805;
} else {var v$314 = v$295[0];
var v$315 = v$296;
var v$316 = v$315[0];
var v$317 = v$315[1];
var thePair$298;
var t$808 = basics$0Infixing$1$2.pair$127;
var t$807;
switch (v$316[0]) { case 1: {var v$674 = v$316[1];
t$807 = (basics$0Infixing$1$2.atomToFull$119(v$674));
 break; }default: {t$807 = v$316[1];
} };
var t$806;
switch (v$314[0]) { case 1: {var v$676 = v$314[1];
t$806 = (basics$0Infixing$1$2.atomToFull$119(v$676));
 break; }default: {t$806 = v$314[1];
} };
thePair$298 = (t$808(t$807,t$806));
var t$814;
var t$813;
var t$809;
switch (v$775[0]) { case 0: {var v$311 = v$775[1];
var v$312 = v$311[0];
t$809 = (basics$0Infixing$1$2.applyId$158(v$312,thePair$298));
 break; }case 1: {var v$308 = v$775[1];
var v$309 = v$308[0];
t$809 = (basics$0Infixing$1$2.applyId$158(v$309,thePair$298));
 break; }default: {var t$812 = basics$0Infixing$1$2.applyObj$167;
var t$811;
switch (v$316[0]) { case 1: {var v$678 = v$316[1];
t$811 = (basics$0Infixing$1$2.atomToFull$119(v$678));
 break; }default: {t$811 = v$316[1];
} };
var t$810;
switch (v$314[0]) { case 1: {t$810 = v$314[1];
 break; }default: {var v$680 = v$314[1];
t$810 = (basics$0Infixing$1$2.fullToAtom$123(v$680));
} };
t$809 = (t$812(t$811,t$810));
} };
t$813 = [0,t$809];
t$814 = [t$813,v$317];
return t$814;
};
};
};
var fix$815 = {};
fix$815.$flushHigher = function(v$470,v$471,v$472){lab$flushHigher: while (true) {if (v$471 == null) {return [null,v$472];
} else {var v$467 = v$471;
var v$468 = v$467[0];
var v$469 = v$467[1];
var t$816;
switch (v$468[0]) { case 2: {t$816 = true;
 break; }default: {switch (v$470[0]) { case 2: {t$816 = false;
 break; }default: {var t$822;
var t$821;
switch (v$468[0]) { case 1: {t$821 = v$468[1][1];
 break; }case 0: {t$821 = v$468[1][1];
 break; }default: {t$821 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
var t$820;
switch (v$470[0]) { case 1: {t$820 = v$470[1][1];
 break; }case 0: {t$820 = v$470[1][1];
 break; }default: {t$820 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
t$822 = (t$821 > t$820);
if (t$822) {t$816 = true;
} else {var t$819;
var t$818;
switch (v$468[0]) { case 1: {t$818 = v$468[1][1];
 break; }case 0: {t$818 = v$468[1][1];
 break; }default: {t$818 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
var t$817;
switch (v$470[0]) { case 1: {t$817 = v$470[1][1];
 break; }case 0: {t$817 = v$470[1][1];
 break; }default: {t$817 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
t$819 = (t$818 == t$817);
t$816 = (t$819?(basics$0Infixing$1$4.both_associate_left$274(v$468,v$470)):false);
};
} };
} };
if (t$816) {var t$823 = v$470;
var t$824 = v$469;
var t$825 = basics$0Infixing$1$4.apply$279(v$468,v$472);
var v$470 = t$823;
var v$471 = t$824;
var v$472 = t$825;
continue lab$flushHigher;
} else {return [v$471,v$472];
};
};
};
};
basics$0Infixing$1$4.flushHigher$451 = fix$815.$flushHigher;
var fix$826 = {};
fix$826.$flushAll = function(v$489,v$776){lab$flushAll: while (true) {if (v$489 == null) {if (v$776 == null) {return tools$0Crash$1.impossible$59("InfixStack.flushAll");
} else {var v$492 = v$776;
if (v$492[1] == null) {return v$492[0];
} else {return tools$0Crash$1.impossible$59("InfixStack.flushAll");
};
};
} else {var v$497 = v$489;
var v$498 = v$497[0];
var v$499 = v$497[1];
var t$827 = v$499;
var t$828 = basics$0Infixing$1$4.apply$279(v$498,v$776);
var v$489 = t$827;
var v$776 = t$828;
continue lab$flushAll;
};
};
};
basics$0Infixing$1$4.flushAll$473 = fix$826.$flushAll;
var fix$829 = {};
fix$829.$process = function(v$547,v$548,v$549,v$550,v$551){if (v$548 == null) {return basics$0Infixing$1$4.flushAll$473(v$549,v$551);
} else {var v$544 = v$548;
var v$545 = v$544[0];
var v$546 = v$544[1];
var v$521 = basics$0Infixing$1$2.asId$134(v$545);
switch (v$521[0]) { case 0: {var v$539 = v$521[1];
var v$530 = basics$0InfixBasis$1.lookup$107(function(v$777){return syntax_objects$0Ident$1.eq_id$248(v$777[0],v$777[1]);
},v$547,v$539);
switch (v$530[0]) { case 2: {var v$534 = v$530[1];
return fix$829.$operator(v$547,[0,[v$539,v$534]],v$546,v$549,v$551);
 break; }case 1: {var v$532 = v$530[1];
return fix$829.$operator(v$547,[1,[v$539,v$532]],v$546,v$549,v$551);
 break; }default: {switch (v$550) { case 2: {return fix$829.$operator(v$547,[2],v$548,v$549,v$551);
 break; }default: {return fix$829.$process(v$547,v$546,v$549,2,[[1,v$545],v$551]);
} };
} };
 break; }default: {switch (v$550) { case 2: {return fix$829.$operator(v$547,[2],v$548,v$549,v$551);
 break; }default: {return fix$829.$process(v$547,v$546,v$549,2,[[1,v$545],v$551]);
} };
} };
};
};
fix$829.$operator = function(v$565,v$566,v$567,v$568,v$569){var v$562 = basics$0Infixing$1$4.flushHigher$451(v$566,v$568,v$569);
var v$563 = v$562[0];
var v$564 = v$562[1];
return fix$829.$process(v$565,v$567,[v$566,v$563],1,v$564);
};
basics$0Infixing$1$4.process$502 = fix$829.$process;
basics$0Infixing$1$4.operator$501 = fix$829.$operator;
basics$0Infixing$1$4.resolveInfix$570 = function(v$575,v$576){var v$689 = basics$0Infixing$1$4.process$502(v$575,v$576,null,0,null);
switch (v$689[0]) { case 1: {var v$690 = v$689[1];
return basics$0Infixing$1$2.atomToFull$119(v$690);
 break; }default: {return v$689[1];
} };
};
return 0;
})();
