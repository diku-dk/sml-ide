if ((typeof(basics$0Infixing$1$7)) == "undefined") {basics$0Infixing$1$7 = {};
};
(function(){basics$0Infixing$1$7.eq_StackEntry$1334 = function(v$1336,v$1337){switch (v$1336[0]) { case 0: {switch (v$1337[0]) { case 0: {var v$1338 = v$1336[1];
var v$1339 = v$1337[1];
return (syntax_objects$0Ident$1.eq_id$248(v$1338[0],v$1339[0]))?(v$1338[1] == v$1339[1]):false;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$1337[0]) { case 1: {var v$1342 = v$1336[1];
var v$1343 = v$1337[1];
return (syntax_objects$0Ident$1.eq_id$248(v$1342[0],v$1343[0]))?(v$1342[1] == v$1343[1]):false;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$1337[0]) { case 2: {return true;
 break; }default: {return false;
} };
 break; } };
};
basics$0Infixing$1$7.eq_LastObj$1346 = function(v$1348,v$1349){switch (v$1348) { case 0: {switch (v$1349) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$1349) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$1349) { case 2: {return true;
 break; }default: {return false;
} };
 break; } };
};
basics$0Infixing$1$7.impossible$967 = function(s$970){return tools$0Crash$1.impossible$59("InfixStack." + s$970);
};
basics$0Infixing$1$7.full$976 = function(v$992){switch (v$992[0]) { case 1: {var v$1000 = v$992[1];
return basics$0Infixing$1$5.atomToFull$831(v$1000);
 break; }default: {return v$992[1];
} };
};
basics$0Infixing$1$7.atom$977 = function(v$980){switch (v$980[0]) { case 1: {return v$980[1];
 break; }default: {var v$989 = v$980[1];
return basics$0Infixing$1$5.fullToAtom$835(v$989);
} };
};
basics$0Infixing$1$7.side$1006 = function(v$1130){switch (v$1130[0]) { case 0: {return "left";
 break; }case 1: {return "right";
 break; }default: {return tools$0Crash$1.impossible$59("InfixStack.side");
} };
};
basics$0Infixing$1$7.op_as_string$1007 = function(v$1109){switch (v$1109[0]) { case 0: {var v$1125 = v$1109[1];
var v$1126 = v$1125[0];
return basics$0Infixing$1$5.pr_id$830(v$1126);
 break; }case 1: {var v$1121 = v$1109[1];
var v$1122 = v$1121[0];
return basics$0Infixing$1$5.pr_id$830(v$1122);
 break; }default: {return tools$0Crash$1.impossible$59("InfixStack.op_as_string");
} };
};
basics$0Infixing$1$7.both_associate_left$1005 = function(v$1503,v$1504){var rhs2$1154 = function(obj$1172){var t$1522;
var t$1521;
var t$1520;
var t$1519;
var t$1518;
var t$1517;
var t$1516;
var t$1515;
var t$1514;
var t$1513 = "Insert parentheses.  `";
var t$1512;
switch (v$1503[0]) { case 0: {var v$1364 = v$1503[1];
var v$1365 = v$1364[0];
t$1512 = (basics$0Infixing$1$5.pr_id$830(v$1365));
 break; }case 1: {var v$1366 = v$1503[1];
var v$1367 = v$1366[0];
t$1512 = (basics$0Infixing$1$5.pr_id$830(v$1367));
 break; }default: {t$1512 = (tools$0Crash$1.impossible$59("InfixStack.op_as_string"));
} };
t$1514 = (t$1513 + t$1512);
t$1515 = (t$1514 + "' and `");
var t$1511;
switch (v$1504[0]) { case 0: {var v$1371 = v$1504[1];
var v$1372 = v$1371[0];
t$1511 = (basics$0Infixing$1$5.pr_id$830(v$1372));
 break; }case 1: {var v$1373 = v$1504[1];
var v$1374 = v$1373[0];
t$1511 = (basics$0Infixing$1$5.pr_id$830(v$1374));
 break; }default: {t$1511 = (tools$0Crash$1.impossible$59("InfixStack.op_as_string"));
} };
t$1516 = (t$1515 + t$1511);
t$1517 = (t$1516 + "' have the same precedence\nbut associate ");
var t$1510;
switch (v$1503[0]) { case 0: {t$1510 = "left";
 break; }case 1: {t$1510 = "right";
 break; }default: {t$1510 = (tools$0Crash$1.impossible$59("InfixStack.side"));
} };
t$1518 = (t$1517 + t$1510);
t$1519 = (t$1518 + " and ");
var t$1509;
switch (v$1504[0]) { case 0: {t$1509 = "left";
 break; }case 1: {t$1509 = "right";
 break; }default: {t$1509 = (tools$0Crash$1.impossible$59("InfixStack.side"));
} };
t$1520 = (t$1519 + t$1509);
t$1521 = (t$1520 + ", respectively.");
t$1522 = [basics$0Infixing$1$1.en$InfixStack_error$68,t$1521];
throw t$1522;
};
switch (v$1503[0]) { case 0: {switch (v$1504[0]) { case 0: {return true;
 break; }default: {return rhs2$1154(0);
} };
 break; }case 1: {switch (v$1504[0]) { case 1: {return false;
 break; }default: {return rhs2$1154(0);
} };
 break; }default: {return rhs2$1154(0);
} };
};
basics$0Infixing$1$7.precedence$1008 = function(v$1088){switch (v$1088[0]) { case 1: {return v$1088[1][1];
 break; }case 0: {return v$1088[1][1];
 break; }default: {return tools$0Crash$1.impossible$59("InfixStack.precedence");
} };
};
basics$0Infixing$1$7.assocLeft$1009 = function(v$1076,v$1505){switch (v$1076[0]) { case 2: {return true;
 break; }default: {switch (v$1505[0]) { case 2: {return false;
 break; }default: {var t$1528;
var t$1527;
switch (v$1076[0]) { case 1: {t$1527 = v$1076[1][1];
 break; }case 0: {t$1527 = v$1076[1][1];
 break; }default: {t$1527 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
var t$1526;
switch (v$1505[0]) { case 1: {t$1526 = v$1505[1][1];
 break; }case 0: {t$1526 = v$1505[1][1];
 break; }default: {t$1526 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
t$1528 = (t$1527 > t$1526);
if (t$1528) {return true;
} else {var t$1525;
var t$1524;
switch (v$1076[0]) { case 1: {t$1524 = v$1076[1][1];
 break; }case 0: {t$1524 = v$1076[1][1];
 break; }default: {t$1524 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
var t$1523;
switch (v$1505[0]) { case 1: {t$1523 = v$1505[1][1];
 break; }case 0: {t$1523 = v$1505[1][1];
 break; }default: {t$1523 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
t$1525 = (t$1524 == t$1523);
if (t$1525) {return basics$0Infixing$1$7.both_associate_left$1005(v$1076,v$1505);
} else {return false;
};
};
} };
} };
};
basics$0Infixing$1$7.apply$1010 = function(v$1506,v$1024){if (v$1024 == null) {var t$1532;
var t$1531;
var t$1530 = "Give ";
var t$1529;
switch (v$1506[0]) { case 0: {var v$1494 = v$1506[1];
var v$1495 = v$1494[0];
t$1529 = (("the infix `" + (basics$0Infixing$1$5.pr_id$830(v$1495))) + "' more arguments.");
 break; }case 1: {var v$1496 = v$1506[1];
var v$1497 = v$1496[0];
t$1529 = (("the infixr `" + (basics$0Infixing$1$5.pr_id$830(v$1497))) + "' more arguments.");
 break; }default: {t$1529 = (tools$0Crash$1.impossible$59("InfixStack.apply"));
} };
t$1531 = (t$1530 + t$1529);
t$1532 = [basics$0Infixing$1$1.en$InfixStack_error$68,t$1531];
throw t$1532;
} else {var v$1026 = v$1024;
var v$1027 = v$1026[1];
if (v$1027 == null) {var t$1536;
var t$1535;
var t$1534 = "Give ";
var t$1533;
switch (v$1506[0]) { case 0: {var v$1488 = v$1506[1];
var v$1489 = v$1488[0];
t$1533 = (("the infix `" + (basics$0Infixing$1$5.pr_id$830(v$1489))) + "' more arguments.");
 break; }case 1: {var v$1490 = v$1506[1];
var v$1491 = v$1490[0];
t$1533 = (("the infixr `" + (basics$0Infixing$1$5.pr_id$830(v$1491))) + "' more arguments.");
 break; }default: {t$1533 = (tools$0Crash$1.impossible$59("InfixStack.apply"));
} };
t$1535 = (t$1534 + t$1533);
t$1536 = [basics$0Infixing$1$1.en$InfixStack_error$68,t$1535];
throw t$1536;
} else {var v$1045 = v$1026[0];
var v$1046 = v$1027;
var v$1047 = v$1046[0];
var v$1048 = v$1046[1];
var thePair$1029;
var t$1539 = basics$0Infixing$1$5.pair$839;
var t$1538;
switch (v$1047[0]) { case 1: {var v$1405 = v$1047[1];
t$1538 = (basics$0Infixing$1$5.atomToFull$831(v$1405));
 break; }default: {t$1538 = v$1047[1];
} };
var t$1537;
switch (v$1045[0]) { case 1: {var v$1407 = v$1045[1];
t$1537 = (basics$0Infixing$1$5.atomToFull$831(v$1407));
 break; }default: {t$1537 = v$1045[1];
} };
thePair$1029 = (t$1539(t$1538,t$1537));
var t$1545;
var t$1544;
var t$1540;
switch (v$1506[0]) { case 0: {var v$1042 = v$1506[1];
var v$1043 = v$1042[0];
t$1540 = (basics$0Infixing$1$5.applyId$870(v$1043,thePair$1029));
 break; }case 1: {var v$1039 = v$1506[1];
var v$1040 = v$1039[0];
t$1540 = (basics$0Infixing$1$5.applyId$870(v$1040,thePair$1029));
 break; }default: {var t$1543 = basics$0Infixing$1$5.applyObj$878;
var t$1542;
switch (v$1047[0]) { case 1: {var v$1409 = v$1047[1];
t$1542 = (basics$0Infixing$1$5.atomToFull$831(v$1409));
 break; }default: {t$1542 = v$1047[1];
} };
var t$1541;
switch (v$1045[0]) { case 1: {t$1541 = v$1045[1];
 break; }default: {var v$1411 = v$1045[1];
t$1541 = (basics$0Infixing$1$5.fullToAtom$835(v$1411));
} };
t$1540 = (t$1543(t$1542,t$1541));
} };
t$1544 = [0,t$1540];
t$1545 = [t$1544,v$1048];
return t$1545;
};
};
};
var fix$1546 = {};
fix$1546.$flushHigher = function(v$1201,v$1202,v$1203){lab$flushHigher: while (true) {if (v$1202 == null) {return [null,v$1203];
} else {var v$1198 = v$1202;
var v$1199 = v$1198[0];
var v$1200 = v$1198[1];
var t$1547;
switch (v$1199[0]) { case 2: {t$1547 = true;
 break; }default: {switch (v$1201[0]) { case 2: {t$1547 = false;
 break; }default: {var t$1553;
var t$1552;
switch (v$1199[0]) { case 1: {t$1552 = v$1199[1][1];
 break; }case 0: {t$1552 = v$1199[1][1];
 break; }default: {t$1552 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
var t$1551;
switch (v$1201[0]) { case 1: {t$1551 = v$1201[1][1];
 break; }case 0: {t$1551 = v$1201[1][1];
 break; }default: {t$1551 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
t$1553 = (t$1552 > t$1551);
if (t$1553) {t$1547 = true;
} else {var t$1550;
var t$1549;
switch (v$1199[0]) { case 1: {t$1549 = v$1199[1][1];
 break; }case 0: {t$1549 = v$1199[1][1];
 break; }default: {t$1549 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
var t$1548;
switch (v$1201[0]) { case 1: {t$1548 = v$1201[1][1];
 break; }case 0: {t$1548 = v$1201[1][1];
 break; }default: {t$1548 = (tools$0Crash$1.impossible$59("InfixStack.precedence"));
} };
t$1550 = (t$1549 == t$1548);
t$1547 = (t$1550?(basics$0Infixing$1$7.both_associate_left$1005(v$1199,v$1201)):false);
};
} };
} };
if (t$1547) {var t$1554 = v$1201;
var t$1555 = v$1200;
var t$1556 = basics$0Infixing$1$7.apply$1010(v$1199,v$1203);
var v$1201 = t$1554;
var v$1202 = t$1555;
var v$1203 = t$1556;
continue lab$flushHigher;
} else {return [v$1202,v$1203];
};
};
};
};
basics$0Infixing$1$7.flushHigher$1182 = fix$1546.$flushHigher;
var fix$1557 = {};
fix$1557.$flushAll = function(v$1220,v$1507){lab$flushAll: while (true) {if (v$1220 == null) {if (v$1507 == null) {return tools$0Crash$1.impossible$59("InfixStack.flushAll");
} else {var v$1223 = v$1507;
if (v$1223[1] == null) {return v$1223[0];
} else {return tools$0Crash$1.impossible$59("InfixStack.flushAll");
};
};
} else {var v$1228 = v$1220;
var v$1229 = v$1228[0];
var v$1230 = v$1228[1];
var t$1558 = v$1230;
var t$1559 = basics$0Infixing$1$7.apply$1010(v$1229,v$1507);
var v$1220 = t$1558;
var v$1507 = t$1559;
continue lab$flushAll;
};
};
};
basics$0Infixing$1$7.flushAll$1204 = fix$1557.$flushAll;
var fix$1560 = {};
fix$1560.$process = function(v$1278,v$1279,v$1280,v$1281,v$1282){if (v$1279 == null) {return basics$0Infixing$1$7.flushAll$1204(v$1280,v$1282);
} else {var v$1275 = v$1279;
var v$1276 = v$1275[0];
var v$1277 = v$1275[1];
var v$1252 = basics$0Infixing$1$5.asId$846(v$1276);
switch (v$1252[0]) { case 0: {var v$1270 = v$1252[1];
var v$1261 = basics$0InfixBasis$1.lookup$107(function(v$1508){return syntax_objects$0Ident$1.eq_id$248(v$1508[0],v$1508[1]);
},v$1278,v$1270);
switch (v$1261[0]) { case 2: {var v$1265 = v$1261[1];
return fix$1560.$operator(v$1278,[0,[v$1270,v$1265]],v$1277,v$1280,v$1282);
 break; }case 1: {var v$1263 = v$1261[1];
return fix$1560.$operator(v$1278,[1,[v$1270,v$1263]],v$1277,v$1280,v$1282);
 break; }default: {switch (v$1281) { case 2: {return fix$1560.$operator(v$1278,[2],v$1279,v$1280,v$1282);
 break; }default: {return fix$1560.$process(v$1278,v$1277,v$1280,2,[[1,v$1276],v$1282]);
} };
} };
 break; }default: {switch (v$1281) { case 2: {return fix$1560.$operator(v$1278,[2],v$1279,v$1280,v$1282);
 break; }default: {return fix$1560.$process(v$1278,v$1277,v$1280,2,[[1,v$1276],v$1282]);
} };
} };
};
};
fix$1560.$operator = function(v$1296,v$1297,v$1298,v$1299,v$1300){var v$1293 = basics$0Infixing$1$7.flushHigher$1182(v$1297,v$1299,v$1300);
var v$1294 = v$1293[0];
var v$1295 = v$1293[1];
return fix$1560.$process(v$1296,v$1298,[v$1297,v$1294],1,v$1295);
};
basics$0Infixing$1$7.process$1233 = fix$1560.$process;
basics$0Infixing$1$7.operator$1232 = fix$1560.$operator;
basics$0Infixing$1$7.resolveInfix$1301 = function(v$1306,v$1307){var v$1420 = basics$0Infixing$1$7.process$1233(v$1306,v$1307,null,0,null);
switch (v$1420[0]) { case 1: {var v$1421 = v$1420[1];
return basics$0Infixing$1$5.atomToFull$831(v$1421);
 break; }default: {return v$1420[1];
} };
};
return 0;
})();
