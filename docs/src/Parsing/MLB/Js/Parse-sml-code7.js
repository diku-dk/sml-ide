if ((typeof(basics$0Parse$1$7)) == "undefined") {basics$0Parse$1$7 = {};
};
(function(){basics$0Parse$1$7.eq_token$1614 = function(v$1618,v$1619,v$1615){var v$1616 = v$1615[0];
var v$1617 = v$1615[1];
switch (v$1617[0]) { case 0: {var v$1620 = v$1616[1];
var v$1621 = v$1617[1];
if (basics$0Parse$1$4.eq_term$420(v$1620[0],v$1621[0])) {var v$2096 = v$1620[1];
var v$2097 = v$1621[1];
if (v$1618([v$2096[0],v$2097[0]])) {if (v$1619([v$2096[1],v$2097[1]])) {return v$1619([v$2096[2],v$2097[2]]);
} else {return false;
};
} else {return false;
};
} else {return false;
};
 break; }default: {return false;
} };
};
basics$0Parse$1$7.eq_oper$1624 = function(v$1626,v$1627){switch (v$1626) { case 0: {switch (v$1627) { case 0: {return true;
 break; }default: {return false;
} };
 break; }case 1: {switch (v$1627) { case 1: {return true;
 break; }default: {return false;
} };
 break; }case 2: {switch (v$1627) { case 2: {return true;
 break; }default: {return false;
} };
 break; } };
};
basics$0Parse$1$7.eq_change$1628 = function(v$1632,v$1633,v$1629){var v$1630 = v$1629[0];
var v$1631 = v$1629[1];
switch (v$1631[0]) { case 0: {var v$1634 = v$1630[1];
var v$1635 = v$1631[1];
if (v$1634[0] == v$1635[0]) {var t$2370;
var v$2330 = v$1634[1];
var v$2331 = v$1635[1];
switch (v$2331[0]) { case 0: {var v$2206 = v$2330[1];
var v$2207 = v$2331[1];
if (basics$0Parse$1$4.eq_term$420(v$2206[0],v$2207[0])) {var v$2208 = v$2206[1];
var v$2209 = v$2207[1];
t$2370 = ((v$1632([v$2208[0],v$2209[0]]))?((v$1633([v$2208[1],v$2209[1]]))?(v$1633([v$2208[2],v$2209[2]])):false):false);
} else {t$2370 = false;
};
 break; }default: {t$2370 = false;
} };
if (t$2370) {var t$2369;
var v$2102 = v$1634[2];
var v$2103 = v$1635[2];
switch (v$2102) { case 0: {switch (v$2103) { case 0: {t$2369 = true;
 break; }default: {t$2369 = false;
} };
 break; }case 1: {switch (v$2103) { case 1: {t$2369 = true;
 break; }default: {t$2369 = false;
} };
 break; }case 2: {switch (v$2103) { case 2: {t$2369 = true;
 break; }default: {t$2369 = false;
} };
 break; } };
if (t$2369) {var t$2368;
var v$2332 = v$1634[3];
var v$2333 = v$1635[3];
switch (v$2333[0]) { case 0: {var v$2215 = v$2332[1];
var v$2216 = v$2333[1];
if (basics$0Parse$1$4.eq_term$420(v$2215[0],v$2216[0])) {var v$2217 = v$2215[1];
var v$2218 = v$2216[1];
t$2368 = ((v$1632([v$2217[0],v$2218[0]]))?((v$1633([v$2217[1],v$2218[1]]))?(v$1633([v$2217[2],v$2218[2]])):false):false);
} else {t$2368 = false;
};
 break; }default: {t$2368 = false;
} };
return t$2368?(v$1634[4] == v$1635[4]):false;
} else {return false;
};
} else {return false;
};
} else {return false;
};
 break; }default: {return false;
} };
};
basics$0Parse$1$7.sameToken$674 = function(v$679,v$2344){var v$680 = v$679[1];
var v$681 = v$680[0];
var v$683 = v$2344[1];
var v$684 = v$683[0];
return basics$0Parse$1$4.eq_term$420(v$681,v$684);
};
basics$0Parse$1$7.DEBUG1$685 = false;
basics$0Parse$1$7.DEBUG2$686 = false;
basics$0Parse$1$7.en$ParseError$687 = new String("ParseError");
basics$0Parse$1$7.exn$ParseError$687 = [basics$0Parse$1$7.en$ParseError$687];
basics$0Parse$1$7.en$ParseImpossible$688 = new String("ParseImpossible");
basics$0Parse$1$7.println$689 = function(s$692){return basis$0TextIO$1.output$110([0],s$692 + "\n");
};
basics$0Parse$1$7.empty$693 = function(v$2366){return [null,null];
};
basics$0Parse$1$7.en$Empty$694 = new String("Empty");
basics$0Parse$1$7.exn$Empty$694 = [basics$0Parse$1$7.en$Empty$694];
var fix$2371 = {};
fix$2371.$get = function(v$709,v$2345){lab$get: while (true) {if (v$709 == null) {if (v$2345 == null) {throw basics$0Parse$1$7.exn$Empty$694;
} else {var t$2372 = basis$0List$1.rev$682(v$2345);
var t$2373 = null;
var v$709 = t$2372;
var v$2345 = t$2373;
continue lab$get;
};
} else {var v$711 = v$709;
return [v$711[0],[v$711[1],v$2345]];
};
};
};
basics$0Parse$1$7.get$695 = fix$2371.$get;
basics$0Parse$1$7.put$716 = function(v$722,v$723){return [v$723[0],[v$722,v$723[1]]];
};
var fix$2374 = {};
fix$2374.$printStack = function(v$751,v$752){lab$printStack: while (true) {if (v$751 == null) {return 0;
} else {var v$747 = v$751;
var v$748 = v$747[0];
var v$749 = v$748[0];
var v$750 = v$747[1];
basis$0TextIO$1.output$110([0],("\t" + (basis$0Int32$1.toString$458(v$752))) + ": ");
var s$1650;
var v$1653 = v$749[1];
s$1650 = ("STATE " + (basis$0Int32$1.toString$458(v$1653)));
basis$0TextIO$1.output$110([0],s$1650 + "\n");
var t$2375 = v$750;
var t$2376 = SmlPrims.chk_ovf_i32(v$752 + 1);
var v$751 = t$2375;
var v$752 = t$2376;
continue lab$printStack;
};
};
};
basics$0Parse$1$7.printStack$731 = fix$2374.$printStack;
basics$0Parse$1$7.prAction$753 = function(v$756,v$759){var v$772 = v$759[0];
if (v$772 == null) {return 0;
} else {var v$795 = v$772;
var v$796 = v$795[0];
var v$797 = v$796[0];
var v$798 = v$759[1];
var v$799 = v$798[0];
var v$800 = v$799[1];
var v$801 = v$800[0];
var v$802 = v$759[2];
basis$0TextIO$1.output$110([0],"Parse: state stack:\n");
basics$0Parse$1$7.printStack$731(v$772,0);
var t$2384 = basis$0TextIO$1.output$110;
var t$2383 = [0];
var t$2382;
var t$2381;
var t$2380;
var t$2379;
var t$2378 = "       state=";
var t$2377;
var v$1662 = v$797[1];
t$2377 = ("STATE " + (basis$0Int32$1.toString$458(v$1662)));
t$2379 = (t$2378 + t$2377);
t$2380 = (t$2379 + " next=");
t$2381 = (t$2380 + (v$756(v$801)));
t$2382 = (t$2381 + " action=");
t$2384(t$2383,t$2382);
switch (v$802[0]) { case 0: {var v$793 = v$802[1];
var s$1664;
var t$2386 = "SHIFT ";
var t$2385;
var v$1668 = v$793[1];
t$2385 = ("STATE " + (basis$0Int32$1.toString$458(v$1668)));
s$1664 = (t$2386 + t$2385);
return basis$0TextIO$1.output$110([0],s$1664 + "\n");
 break; }case 1: {var v$791 = v$802[1];
var s$1670 = "REDUCE " + (basis$0Int32$1.toString$458(v$791));
return basis$0TextIO$1.output$110([0],s$1670 + "\n");
 break; }case 2: {return basis$0TextIO$1.output$110([0],"ERROR\n");
 break; }default: {return basis$0TextIO$1.output$110([0],"ACCEPT\n");
} };
};
};
basics$0Parse$1$7.ssParse$804 = function(v$901,v$902,v$903,v$904,v$905){var action$813 = basics$0Parse$1$4.action$324(v$901[0],v$901[1],v$901[2],v$901[3],v$901[4]);
var goto$814 = basics$0Parse$1$4.goto$342(v$901[0],v$901[1],v$901[2],v$901[3],v$901[4]);
var fix$2387 = {};
fix$2387.$parseStep = function(v$818){lab$parseStep: while (true) {var v$832 = v$818[1];
if (v$832 == null) {throw [basics$0Parse$1$7.en$ParseImpossible$688,204];
} else {var v$890 = v$818[0];
var v$891 = v$890[0];
var v$892 = v$891[1];
var v$893 = v$892[0];
var v$894 = v$892[1];
var v$895 = v$894[1];
var v$896 = v$890[1];
var v$897 = v$832;
var v$898 = v$897[0];
var v$899 = v$898[0];
var v$900 = v$818[2];
var nextAction$834 = action$813([v$899,v$893]);
switch (nextAction$834[0]) { case 0: {var v$873 = nextAction$834[1];
var newStack$867 = [[v$873,v$894],v$832];
var newLexPair$868 = basics$0Parse$1$2.get$104(v$896);
var v$871 = basics$0Parse$1$7.get$695(v$900[0],[[newStack$867,newLexPair$868],v$900[1]]);
var v$872 = v$871[1];
var t$2390 = [newLexPair$868,[[v$873,v$894],v$832],v$872];
var v$818 = t$2390;
continue lab$parseStep;
 break; }case 1: {var v$865 = nextAction$834[1];
var v$857 = v$903([v$865,v$895,v$832,v$905]);
var v$858 = v$857[2];
if (v$858 == null) {throw [basics$0Parse$1$7.en$ParseImpossible$688,197];
} else {var v$860 = v$857[0];
var v$861 = v$857[1];
var v$862 = v$858;
var v$863 = v$862[0];
var v$864 = v$863[0];
var t$2389 = [v$890,[[goto$814([v$864,v$860]),v$861],v$858],v$900];
var v$818 = t$2389;
continue lab$parseStep;
};
 break; }case 2: {var t$2388 = v$904(v$818);
var v$818 = t$2388;
continue lab$parseStep;
 break; }default: {if (v$832 == null) {throw [basics$0Parse$1$7.en$ParseImpossible$688,202];
} else {var v$886 = v$832;
var v$887 = v$886[0];
var v$888 = v$887[1];
var v$889 = v$888[0];
var v$884 = v$890[0];
var v$885 = v$890[1];
return [v$889,basics$0Parse$1$2.cons$125(v$884,v$885)];
};
} };
};
};
};
var parseStep$815 = fix$2387.$parseStep;
return function(v$2367){return parseStep$815(v$2367);
};
};
basics$0Parse$1$7.distanceParse$906 = function(v$991,v$992,v$993,v$994){var action$914 = basics$0Parse$1$4.action$324(v$991[0],v$991[1],v$991[2],v$991[3],v$991[4]);
var goto$915 = basics$0Parse$1$4.goto$342(v$991[0],v$991[1],v$991[2],v$991[3],v$991[4]);
var fix$2391 = {};
fix$2391.$parseStep = function(v$2346,v$2347,v$2348,v$938){lab$parseStep: while (true) {switch (v$938) { case 0: {return [v$2346,v$2347,v$2348,0,[1]];
 break; }default: {if (v$2347 == null) {throw [basics$0Parse$1$7.en$ParseImpossible$688,242];
} else {var v$981 = v$2346[0];
var v$982 = v$981[1];
var v$983 = v$982[0];
var v$984 = v$982[1];
var v$985 = v$984[1];
var v$986 = v$2346[1];
var v$987 = v$2347;
var v$988 = v$987[0];
var v$989 = v$988[0];
var nextAction$944 = action$914([v$989,v$983]);
switch (nextAction$944[0]) { case 0: {var v$979 = nextAction$944[1];
var newStack$977 = [[v$979,v$984],v$2347];
var newLexPair$978 = basics$0Parse$1$2.get$104(v$986);
var t$2396 = newLexPair$978;
var t$2397 = [[v$979,v$984],v$2347];
var t$2398 = [v$2348[0],[[newStack$977,newLexPair$978],v$2348[1]]];
var t$2399 = SmlPrims.chk_ovf_i32(v$938 - 1);
var v$2346 = t$2396;
var v$2347 = t$2397;
var v$2348 = t$2398;
var v$938 = t$2399;
continue lab$parseStep;
 break; }case 1: {var v$975 = nextAction$944[1];
var v$967 = v$993([v$975,v$985,v$2347,v$994]);
var v$968 = v$967[2];
if (v$968 == null) {throw [basics$0Parse$1$7.en$ParseImpossible$688,240];
} else {var v$970 = v$967[0];
var v$971 = v$967[1];
var v$972 = v$968;
var v$973 = v$972[0];
var v$974 = v$973[0];
var t$2392 = v$2346;
var t$2393 = [[goto$915([v$974,v$970]),v$971],v$968];
var t$2394 = v$2348;
var t$2395 = v$938;
var v$2346 = t$2392;
var v$2347 = t$2393;
var v$2348 = t$2394;
var v$938 = t$2395;
continue lab$parseStep;
};
 break; }case 2: {return [v$2346,v$2347,v$2348,v$938,[0,nextAction$944]];
 break; }default: {return [v$2346,v$2347,v$2348,v$938,[0,nextAction$944]];
} };
};
} };
};
};
var parseStep$916 = fix$2391.$parseStep;
return function(v$2349){return parseStep$916(v$2349[0],v$2349[1],v$2349[2],v$2349[3]);
};
};
basics$0Parse$1$7.mkFixError$995 = function(v$1492,v$2350,v$2351,v$2352){var v$1493 = v$1492[2];
var v$1494 = v$1492[5];
var v$1495 = v$1492[7];
var v$1496 = v$1492[1];
var v$1497 = v$1492[4];
var v$1498 = v$1492[3];
var v$1499 = v$1492[6];
var v$1500 = v$1492[0];
return function(v$1012){var v$1484 = v$1012[0];
var v$1485 = v$1484[0];
var v$1486 = v$1485[1];
var v$1487 = v$1486[0];
var v$1488 = v$1486[1];
var v$1489 = v$1488[1];
var v$1491 = v$1012[2];
var lexVList$1021 = basis$0List$1.map$697(function(t$1024){return [0,[t$1024,[v$1496(t$1024),v$1489,v$1489]]];
},v$1495);
var stateList$1030;
var fix$2400 = {};
fix$2400.$f = function(q$1034){try {var v$1038 = basics$0Parse$1$7.get$695(q$1034[0],q$1034[1]);
var v$1039 = v$1038[0];
var v$1040 = v$1038[1];
return [v$1039,fix$2400.$f(v$1040)];
} catch(v$2401) {return (function(MyFifo$Empty$1043){var t$2402 = MyFifo$Empty$1043;
if (t$2402[0] == basics$0Parse$1$7.en$Empty$694) {return null;
} else {throw MyFifo$Empty$1043;
};
})(v$2401);
};
};
var f$1031 = fix$2400.$f;
stateList$1030 = (f$1031(v$1491));
var v$1473;
var b$1685 = [0,null];
var fix$2403 = {};
fix$2403.$foldr = function(v$1688){if (v$1688 == null) {return b$1685;
} else {var v$1689 = v$1688;
var v$1690 = v$1689[0];
var v$1691 = v$1689[1];
var v$2335 = fix$2403.$foldr(v$1691);
var v$2222 = v$2335[0];
var v$2223 = v$2335[1];
return [SmlPrims.chk_ovf_i32(v$2222 + 1),[[v$1690,v$2222],v$2223]];
};
};
var foldr$1687 = fix$2403.$foldr;
v$1473 = (foldr$1687(stateList$1030));
var v$1474 = v$1473[1];
var changes$1231;
var t$2414 = basis$0List$1.s$n$686;
var t$2411;
var start$1790 = null;
var fix$2412 = {};
fix$2412.$foldr = function(v$1795){if (v$1795 == null) {return start$1790;
} else {var v$1796 = v$1795;
var v$1797 = v$1796[0];
var v$1798 = v$1796[1];
var v$2337 = fix$2412.$foldr(v$1798);
var v$2226 = v$1797[0];
var v$2227 = v$2226[0];
var v$2228 = v$2226[1];
var v$2229 = v$2228[0];
var v$2230 = v$1797[1];
var lexer$2232 = basics$0Parse$1$2.cons$125(v$2228[0],v$2228[1]);
var fix$2413 = {};
fix$2413.$foldr = function(v$2234){if (v$2234 == null) {return v$2337;
} else {var v$2235 = v$2234;
var v$2236 = v$2235[0];
var v$2237 = v$2235[1];
var v$2238 = fix$2413.$foldr(v$2237);
var distance$2239;
var v$2240 = [v$2236,lexer$2232];
var v$2241 = SmlPrims.chk_ovf_i32(v$2230 + 1);
distance$2239 = (SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2352 - (v$2350([v$2240,v$2227,basics$0Parse$1$7.empty$693(0),SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2241 + v$2352)) + 1)]))[3])) - 1));
return (distance$2239 >= v$2351)?[[0,[distance$2239,v$2236,1,v$2229,v$2230]],v$2238]:v$2238;
};
};
var foldr$2233 = fix$2413.$foldr;
return foldr$2233(lexVList$1021);
};
};
var foldr$1794 = fix$2412.$foldr;
t$2411 = (foldr$1794(v$1474));
var t$2410;
var t$2409 = basis$0List$1.s$n$686;
var t$2406;
var start$1832 = null;
var fix$2407 = {};
fix$2407.$foldr = function(v$1837){if (v$1837 == null) {return start$1832;
} else {var v$1838 = v$1837;
var v$1839 = v$1838[0];
var v$1840 = v$1838[1];
var v$2339 = fix$2407.$foldr(v$1840);
var v$2244 = v$1839[0];
var v$2245 = v$2244[0];
var v$2246 = v$2244[1];
var v$2247 = v$2246[0];
var v$2248 = v$2247[1];
var v$2249 = v$2248[0];
var v$2250 = v$2246[1];
var v$2251 = v$1839[1];
if (v$1498(v$2249)) {return v$2339;
} else {var fix$2408 = {};
fix$2408.$foldr = function(v$2254){if (v$2254 == null) {return v$2339;
} else {var v$2255 = v$2254;
var v$2256 = v$2255[0];
var v$2257 = v$2255[1];
var v$2258 = fix$2408.$foldr(v$2257);
var distance$2259;
var v$2260 = [v$2256,v$2250];
distance$2259 = (SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2352 - (v$2350([v$2260,v$2245,basics$0Parse$1$7.empty$693(0),SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2251 + v$2352)) + 1)]))[3])) - 1));
return (distance$2259 >= v$2351)?[[0,[distance$2259,v$2256,0,v$2247,v$2251]],v$2258]:v$2258;
};
};
var foldr$2253 = fix$2408.$foldr;
return foldr$2253(lexVList$1021);
};
};
};
var foldr$1836 = fix$2407.$foldr;
t$2406 = (foldr$1836(v$1474));
var t$2404;
var start$1876 = null;
var fix$2405 = {};
fix$2405.$foldr = function(v$1881){if (v$1881 == null) {return start$1876;
} else {var v$1882 = v$1881;
var v$1883 = v$1882[0];
var v$1884 = v$1882[1];
var v$2341 = fix$2405.$foldr(v$1884);
var v$2263 = v$1883[0];
var v$2264 = v$2263[0];
var v$2265 = v$2263[1];
var v$2266 = v$2265[0];
var v$2267 = v$2266[1];
var v$2268 = v$2267[0];
var v$2269 = v$2265[1];
var v$2270 = v$1883[1];
if (v$1498(v$2268)) {return v$2341;
} else {var newLexPair$2272 = basics$0Parse$1$2.get$104(v$2269);
var v$2273 = newLexPair$2272[0];
var distance$2274;
var v$2275 = SmlPrims.chk_ovf_i32(v$2270 - 1);
distance$2274 = (SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2352 - (v$2350([newLexPair$2272,v$2264,basics$0Parse$1$7.empty$693(0),SmlPrims.chk_ovf_i32((SmlPrims.chk_ovf_i32(v$2275 + v$2352)) + 1)]))[3])) - 1));
return (distance$2274 >= v$2351)?[[0,[distance$2274,v$2273,2,v$2266,v$2270]],v$2341]:v$2341;
};
};
};
var foldr$1880 = fix$2405.$foldr;
t$2404 = (foldr$1880(v$1474));
t$2410 = (t$2409(t$2406,t$2404));
changes$1231 = (t$2414(t$2411,t$2410));
var maxDist$1244;
var fix$2415 = {};
fix$2415.$foldr = function(v$1927){if (v$1927 == null) {return 0;
} else {var v$1928 = v$1927;
var v$1929 = v$1928[0];
var v$1930 = v$1928[1];
var v$2164 = fix$2415.$foldr(v$1930);
var v$1933 = v$1929[1];
var v$1934 = v$1933[0];
return (v$1934 < v$2164)?v$2164:v$1934;
};
};
var foldr$1926 = fix$2415.$foldr;
maxDist$1244 = (foldr$1926(changes$1231));
var changes$1262;
var c$1954 = null;
var fix$2416 = {};
fix$2416.$foldr = function(v$1956){if (v$1956 == null) {return changes$1231;
} else {var v$1957 = v$1956;
var v$1958 = v$1957[0];
var v$1959 = v$1957[1];
var v$2168 = fix$2416.$foldr(v$1959);
return (v$1958[1][0] == maxDist$1244)?[v$1958,v$2168]:v$2168;
};
};
var foldr$1955 = fix$2416.$foldr;
changes$1262 = (foldr$1955(c$1954));
var preferredInsertChanges$1268;
var c$1970 = null;
var fix$2417 = {};
fix$2417.$foldr = function(v$1972){if (v$1972 == null) {return changes$1262;
} else {var v$1973 = v$1972;
var v$1974 = v$1973[0];
var v$1975 = v$1973[1];
var v$2170 = fix$2417.$foldr(v$1975);
var t$2418;
var v$2278 = v$1974[1];
switch (v$2278[2]) { case 1: {var v$2279 = v$2278[1];
var v$2280 = v$2279[1];
var v$2281 = v$2280[0];
t$2418 = (v$1497(v$2281));
 break; }default: {t$2418 = false;
} };
return t$2418?[v$1974,v$2170]:v$2170;
};
};
var foldr$1971 = fix$2417.$foldr;
preferredInsertChanges$1268 = (foldr$1971(c$1970));
var preferredSubstChanges$1279;
var c$1986 = null;
var fix$2419 = {};
fix$2419.$foldr = function(v$1988){if (v$1988 == null) {return changes$1262;
} else {var v$1989 = v$1988;
var v$1990 = v$1989[0];
var v$1991 = v$1989[1];
var v$2174 = fix$2419.$foldr(v$1991);
var t$2420;
var v$2283 = v$1990[1];
switch (v$2283[2]) { case 0: {var v$2284 = v$2283[1];
var v$2285 = v$2284[1];
var v$2286 = v$2285[0];
var v$2287 = v$2283[3];
var v$2288 = v$2287[1];
var v$2289 = v$2288[0];
var fix$2421 = {};
fix$2421.$exists = function(v$2291){lab$exists: while (true) {if (v$2291 == null) {return false;
} else {var v$2292 = v$2291;
var v$2293 = v$2292[0];
var v$2294 = v$2292[1];
if (basics$0Parse$1$4.eq_term$420(v$2293,v$2286)) {return true;
} else {var t$2422 = v$2294;
var v$2291 = t$2422;
continue lab$exists;
};
};
};
};
var exists$2290 = fix$2421.$exists;
t$2420 = (exists$2290(v$1494(v$2289)));
 break; }default: {t$2420 = false;
} };
return t$2420?[v$1990,v$2174]:v$2174;
};
};
var foldr$1987 = fix$2419.$foldr;
preferredSubstChanges$1279 = (foldr$1987(c$1986));
var changes$1307;
var c$2023 = null;
var fix$2423 = {};
fix$2423.$foldr = function(v$2025){if (v$2025 == null) {return changes$1262;
} else {var v$2026 = v$2025;
var v$2027 = v$2026[0];
var v$2028 = v$2026[1];
var v$2176 = fix$2423.$foldr(v$2028);
var t$2424;
var v$2296 = v$2027[1];
var v$2297 = v$2296[1];
var v$2298 = v$2297[1];
var v$2299 = v$2298[0];
var v$2300 = v$2296[0];
t$2424 = (((v$1493(v$2299))?false:true)?true:(v$2300 >= (SmlPrims.chk_ovf_i32(v$2351 + 3))));
return t$2424?[v$2027,v$2176]:v$2176;
};
};
var foldr$2024 = fix$2423.$foldr;
changes$1307 = (foldr$2024(c$2023));
var changes$1321 = basis$0List$1.s$n$686(preferredInsertChanges$1268,basis$0List$1.s$n$686(preferredSubstChanges$1279,changes$1307));
if (changes$1321 == null) {v$1500(["syntax error found at " + (v$1499(v$1487)),v$1489,v$1489]);
throw basics$0Parse$1$7.exn$ParseError$687;
} else {var en$Hd$1357 = new String("Hd");
var exn$Hd$1357 = [en$Hd$1357];
var a$1370;
var t$2430;
var t$2429;
var t$2428;
var fix$2425 = {};
fix$2425.$acc = function(v$2041,v$2042){lab$acc: while (true) {if (v$2041 == null) {return v$2042;
} else {var v$2043 = v$2041;
var v$2044 = v$2043[1];
var t$2426 = v$2044;
var t$2427 = SmlPrims.chk_ovf_i32(v$2042 + 1);
var v$2041 = t$2426;
var v$2042 = t$2427;
continue lab$acc;
};
};
};
var acc$2040 = fix$2425.$acc;
t$2428 = (acc$2040(changes$1321,0));
t$2429 = (t$2428 > 1);
t$2430 = (t$2429?false:false);
if (t$2430) {basis$0TextIO$1.output$110([0],"multiple fixes possible; could fix it by:\n");
basis$0List$1.map$697(function(v$2301){var v$2302 = v$2301[1];
var v$2303 = v$2302[1];
var v$2304 = v$2303[1];
var v$2305 = v$2304[0];
var v$2306 = v$2302[2];
var v$2307 = v$2302[3];
var v$2308 = v$2307[1];
var v$2309 = v$2308[0];
var v$2310 = v$2308[1];
var v$2311 = v$2310[1];
var v$2312 = v$2310[2];
var s$2313;
switch (v$2306) { case 2: {s$2313 = ("deleting " + (v$1499(v$2309)));
 break; }case 1: {s$2313 = ("inserting " + (v$1499(v$2305)));
 break; }default: {s$2313 = ((("replacing " + (v$1499(v$2309))) + " with ") + (v$1499(v$2305)));
} };
return v$1500(["syntax error: " + s$2313,v$2311,v$2312]);
},changes$1321);
basis$0TextIO$1.output$110([0],"chosen correction:\n");
} else {0;
};
var v$2314;
if (changes$1321 == null) {throw exn$Hd$1357;
} else {v$2314 = changes$1321[0];
};
var v$2315 = v$2314[1];
var v$2316 = v$2315[1];
var v$2317 = v$2316[1];
var v$2318 = v$2317[0];
var v$2319 = v$2315[2];
var v$2320 = v$2315[3];
var v$2321 = v$2320[1];
var v$2322 = v$2321[0];
var v$2323 = v$2321[1];
var v$2324 = v$2323[1];
var v$2325 = v$2323[2];
var s$2326;
switch (v$2319) { case 2: {s$2326 = ("deleting " + (v$1499(v$2322)));
 break; }case 1: {s$2326 = ("inserting " + (v$1499(v$2318)));
 break; }default: {s$2326 = ((("replacing " + (v$1499(v$2322))) + " with ") + (v$1499(v$2318)));
} };
v$1500(["syntax error: " + s$2326,v$2324,v$2325]);
if (changes$1321 == null) {throw exn$Hd$1357;
} else {a$1370 = changes$1321[0];
};
var v$1463 = a$1370[1];
var v$1464 = v$1463[4];
var v$1465 = v$1463[2];
var v$1466 = v$1463[1];
var v$1467 = v$1466[1];
var v$1468 = v$1467[0];
var v$1469 = v$1467[1];
var v$1470 = v$1469[0];
var v$1459;
var fix$2431 = {};
fix$2431.$f = function(v$2054,v$2353){lab$f: while (true) {if (v$2054 == null) {var en$FindNth$1415 = new String("FindNth");
var exn$FindNth$1415 = [en$FindNth$1415];
throw exn$FindNth$1415;
} else {switch (v$2353) { case 0: {var v$2056 = v$2054;
var v$2057 = v$2056[0];
var v$2058 = v$2056[1];
return [v$2057,basis$0List$1.rev$682(v$2058)];
 break; }default: {var v$2059 = v$2054;
var v$2060 = v$2059[1];
var t$2432 = v$2060;
var t$2433 = SmlPrims.chk_ovf_i32(v$2353 - 1);
var v$2054 = t$2432;
var v$2353 = t$2433;
continue lab$f;
} };
};
};
};
var f$2052 = fix$2431.$f;
v$1459 = (f$2052(basis$0List$1.rev$682(stateList$1030),v$1464));
var v$1460 = v$1459[0];
var v$1461 = v$1459[1];
var v$1455 = v$1460[0];
var v$1456 = v$1460[1];
var v$1457 = v$1456[0];
var v$1458 = v$1456[1];
var v$1450 = v$1457[1];
var v$1451 = v$1450[1];
var v$1452 = v$1451[1];
var v$1453 = v$1451[2];
var newLexV$1432 = [0,[v$1468,[v$1470,v$1452,v$1453]]];
var newLexPair$1433;
switch (v$1465) { case 2: {newLexPair$1433 = (basics$0Parse$1$2.get$104(v$1458));
 break; }case 0: {newLexPair$1433 = [newLexV$1432,v$1458];
 break; }default: {newLexPair$1433 = [newLexV$1432,basics$0Parse$1$2.cons$125(v$1456[0],v$1456[1])];
} };
var restQueue$1440;
var v$2193 = [v$1455,newLexPair$1433];
var v$2194;
var fix$2434 = {};
fix$2434.$foldl = function(v$2068,v$2069){lab$foldl: while (true) {if (v$2069 == null) {return v$2068;
} else {var v$2070 = v$2069;
var v$2071 = v$2070[0];
var v$2072 = v$2070[1];
var t$2435 = [v$2068[0],[v$2071,v$2068[1]]];
var t$2436 = v$2072;
var v$2068 = t$2435;
var v$2069 = t$2436;
continue lab$foldl;
};
};
};
var foldl$2067 = fix$2434.$foldl;
v$2194 = (foldl$2067(basics$0Parse$1$7.empty$693(0),v$1461));
restQueue$1440 = [v$2194[0],[v$2193,v$2194[1]]];
var v$1445 = v$2350([newLexPair$1433,v$1455,restQueue$1440,v$1464]);
return [v$1445[0],v$1445[1],v$1445[2]];
};
};
};
basics$0Parse$1$7.parse$1504 = function(v$1580,v$1586,v$1582,v$1585,v$1583,v$1581,v$1584){var v$1587 = v$1586[6];
var maxAdvance$1517 = (v$1585 < 0)?0:v$1585;
var lexPair$1518 = basics$0Parse$1$2.get$104(v$1582);
var v$1576 = lexPair$1518[0];
var v$1577 = v$1576[1];
var v$1578 = v$1577[1];
var v$1579 = v$1578[1];
var startStack$1521 = [[v$1581[2],[v$1584,v$1579,v$1579]],null];
var startQueue$1522 = [(basics$0Parse$1$7.empty$693(0))[0],[[startStack$1521,lexPair$1518],(basics$0Parse$1$7.empty$693(0))[1]]];
var distanceParse$1523 = basics$0Parse$1$7.distanceParse$906(v$1581,v$1587,v$1583,v$1580);
var fixError$1524 = basics$0Parse$1$7.mkFixError$995(v$1586,distanceParse$1523,1,maxAdvance$1517);
var ssParse$1525 = basics$0Parse$1$7.ssParse$804(v$1581,v$1587,v$1583,fixError$1524,v$1580);
var fix$2437 = {};
fix$2437.$loop = function(v$2354,v$2355,v$2356,v$2357,v$1550){lab$loop: while (true) {switch (v$1550[0]) { case 0: {var v$1552 = v$1550[1];
switch (v$1552[0]) { case 3: {return ssParse$1525([v$2354,v$2355,v$2356]);
 break; }default: {switch (v$2357) { case 0: {return ssParse$1525([v$2354,v$2355,v$2356]);
 break; }default: {switch (v$1552[0]) { case 2: {var v$1565 = fixError$1524([v$2354,v$2355,v$2356]);
var v$1566 = v$1565[0];
var v$1567 = v$1565[1];
var v$1568 = v$1565[2];
var v$2358 = distanceParse$1523([v$1566,v$1567,v$1568,v$2357]);
var t$2438 = v$2358[0];
var t$2439 = v$2358[1];
var t$2440 = v$2358[2];
var t$2441 = v$2358[3];
var t$2442 = v$2358[4];
var v$2354 = t$2438;
var v$2355 = t$2439;
var v$2356 = t$2440;
var v$2357 = t$2441;
var v$1550 = t$2442;
continue lab$loop;
 break; }default: {var en$ParseInternal$1572 = new String("ParseInternal");
var exn$ParseInternal$1572 = [en$ParseInternal$1572];
throw exn$ParseInternal$1572;
} };
} };
} };
 break; }default: {switch (v$2357) { case 0: {return ssParse$1525([v$2354,v$2355,v$2356]);
 break; }default: {var en$ParseInternal$1572 = new String("ParseInternal");
var exn$ParseInternal$1572 = [en$ParseInternal$1572];
throw exn$ParseInternal$1572;
} };
} };
};
};
var loop$1526 = fix$2437.$loop;
var v$2359 = distanceParse$1523([lexPair$1518,startStack$1521,startQueue$1522,15]);
return loop$1526(v$2359[0],v$2359[1],v$2359[2],v$2359[3],v$2359[4]);
};
return 0;
})();
