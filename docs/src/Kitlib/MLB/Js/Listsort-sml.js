if ((typeof(kitlib$0Listsort$1)) == "undefined") {kitlib$0Listsort$1 = {};
};
(function(){kitlib$0Listsort$1.sort$54 = function(ordr$57,xs$60){var fix$290 = {};
fix$290.$merge = function(v$64,v$67){if (v$64 == null) {return v$67;
} else {if (v$67 == null) {return v$64;
} else {var v$87 = v$64;
var v$88 = v$87[0];
var v$89 = v$87[1];
var v$90 = v$67;
var v$91 = v$90[0];
var v$92 = v$90[1];
var t$303;
var v$272 = ordr$57([v$88,v$91]);
var v$273 = 1;
t$303 = ((basis$0General$1.eq_order$254(v$272,v$273))?false:true);
return t$303?[v$88,fix$290.$merge(v$89,[v$91,v$92])]:[v$91,fix$290.$merge([v$88,v$89],v$92)];
};
};
};
var merge$61 = fix$290.$merge;
var fix$291 = {};
fix$291.$mergepairs = function(v$96,v$99,v$102){lab$mergepairs: while (true) {if (v$99 == null) {return [v$96,null];
} else {var v$122 = v$99;
var v$123 = v$122[0];
var v$124 = v$122[1];
if ((SmlPrims.mod_i32(v$102,2,CompilerInitial.exn$Div$47)) == 1) {return [v$96,v$99];
} else {var t$292 = merge$61(v$96,v$123);
var t$293 = v$124;
var t$294 = SmlPrims.div_i32(v$102,2,CompilerInitial.exn$Div$47);
var v$96 = t$292;
var v$99 = t$293;
var v$102 = t$294;
continue lab$mergepairs;
};
};
};
};
var mergepairs$93 = fix$291.$mergepairs;
var fix$295 = {};
fix$295.$nextrun = function(v$129,v$132){lab$nextrun: while (true) {if (v$132 == null) {return [v$129,null];
} else {var v$149 = v$132;
var v$150 = v$149[0];
var v$151 = v$149[1];
var t$296;
var v$279 = ordr$57([v$150,basis$0List$1.hd$64(v$129)]);
var v$280 = 0;
t$296 = (basis$0General$1.eq_order$254(v$279,v$280));
if (t$296) {return [v$129,v$132];
} else {var t$297 = [v$150,v$129];
var t$298 = v$151;
var v$129 = t$297;
var v$132 = t$298;
continue lab$nextrun;
};
};
};
};
var nextrun$126 = fix$295.$nextrun;
var fix$299 = {};
fix$299.$sorting = function(v$155,v$158,v$161){lab$sorting: while (true) {if (v$155 == null) {return basis$0List$1.hd$64(mergepairs$93(null,v$158,0));
} else {var v$181 = v$155;
var v$182 = v$181[0];
var v$183 = v$181[1];
var v$178 = nextrun$126([v$182,null],v$183);
var v$179 = v$178[0];
var v$180 = v$178[1];
var t$300 = v$180;
var t$301 = mergepairs$93(basis$0List$1.rev$257(v$179),v$158,SmlPrims.chk_ovf_i32(v$161 + 1));
var t$302 = SmlPrims.chk_ovf_i32(v$161 + 1);
var v$155 = t$300;
var v$158 = t$301;
var v$161 = t$302;
continue lab$sorting;
};
};
};
var sorting$152 = fix$299.$sorting;
return sorting$152(xs$60,null,0);
};
kitlib$0Listsort$1.sorted$186 = function(v$189,v$192){if (v$192 == null) {return true;
} else {var v$229 = v$192;
var v$230 = v$229[0];
var v$231 = v$229[1];
var fix$304 = {};
fix$304.$h = function(v$206,v$209){lab$h: while (true) {if (v$209 == null) {return true;
} else {var v$225 = v$209;
var v$226 = v$225[0];
var v$227 = v$225[1];
var t$305;
var v$288 = v$189([v$206,v$226]);
var v$289 = 1;
t$305 = ((basis$0General$1.eq_order$254(v$288,v$289))?false:true);
if (t$305) {var t$306 = v$226;
var t$307 = v$227;
var v$206 = t$306;
var v$209 = t$307;
continue lab$h;
} else {return false;
};
};
};
};
var h$203 = fix$304.$h;
return h$203(v$230,v$231);
};
};
return 0;
})();
